From f8222748c2c3163593c736d6f4868efd6451f16b Mon Sep 17 00:00:00 2001
From: Davis Goodin <dagood@microsoft.com>
Date: Fri, 16 Nov 2018 15:04:54 -0600
Subject: [PATCH] Copy run.cmd changes from corefx

This uses .NET Core msbuild, not desktop
---
 run.cmd | 54 +++++++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 43 insertions(+), 11 deletions(-)

diff --git a/run.cmd b/run.cmd
index 1da6c1e..7a2fb13 100644
--- a/run.cmd
+++ b/run.cmd
@@ -1,28 +1,60 @@
-@if "%_echo%" neq "on" echo off
+@if not defined _echo @echo off
 setlocal
 
-if not defined VisualStudioVersion (
-  if defined VS140COMNTOOLS (
-    call "%VS140COMNTOOLS%\VsDevCmd.bat"
-    goto :Run
-  )
-  echo Error: Visual Studio 2015 required.
+:: Default to highest Visual Studio version available
+::
+:: For VS2015 (and prior), only a single instance is allowed to be installed on a box
+:: and VS140COMNTOOLS is set as a global environment variable by the installer. This
+:: allows users to locate where the instance of VS2015 is installed.
+::
+:: For VS2017, multiple instances can be installed on the same box SxS and VS150COMNTOOLS
+:: is no longer set as a global environment variable and is instead only set if the user
+:: has launched the VS2017 Developer Command Prompt.
+::
+:: Following this logic, we will default to the VS2017 toolset if VS150COMNTOOLS tools is
+:: set, as this indicates the user is running from the VS2017 Developer Command Prompt and
+:: is already configured to use that toolset. Otherwise, we will fallback to using the VS2015
+:: toolset if it is installed. Finally, we will fail the script if no supported VS instance
+:: can be found.
+
+if defined VisualStudioVersion goto :Run
+
+set _VSWHERE="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
+if exist %_VSWHERE% (
+  for /f "usebackq tokens=*" %%i in (`%_VSWHERE% -latest -prerelease -property installationPath`) do set _VSCOMNTOOLS=%%i\Common7\Tools
+)
+if not exist "%_VSCOMNTOOLS%" set _VSCOMNTOOLS=%VS140COMNTOOLS%
+if not exist "%_VSCOMNTOOLS%" (
+  echo Error: Visual Studio 2015 or 2017 required.
   echo        Please see https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/developer-guide.md for build instructions.
   exit /b 1
 )
 
+call "%_VSCOMNTOOLS%\VsDevCmd.bat"
+
 :Run
 :: Clear the 'Platform' env variable for this session, as it's a per-project setting within the build, and
 :: misleading value (such as 'MCD' in HP PCs) may lead to build breakage (issue: #69).
 set Platform=
 
+:: Disable telemetry, first time experience, and global sdk look for the CLI
+set DOTNET_CLI_TELEMETRY_OPTOUT=1
+set DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
+set DOTNET_MULTILEVEL_LOOKUP=0
+
 :: Restore the Tools directory
-call "%~dp0init-tools.cmd"
+call %~dp0init-tools.cmd
 if NOT [%ERRORLEVEL%]==[0] exit /b 1
 
 set _toolRuntime=%~dp0Tools
 set _dotnet=%_toolRuntime%\dotnetcli\dotnet.exe
+set _json=%~dp0config.json
+
+:: run.exe depends on running in the root directory, notably because the config.json specifies
+:: a relative path to the binclash logger
+
+pushd %~dp0
+call %_dotnet% %_toolRuntime%\run.exe "%_json%" %*
+popd
 
-echo Running: "%_dotnet%" "%_toolRuntime%\run.exe" %*
-call "%_dotnet%" "%_toolRuntime%\run.exe" %*
-exit /b %ERRORLEVEL%
\ No newline at end of file
+exit /b %ERRORLEVEL%
-- 
2.17.1.windows.2

