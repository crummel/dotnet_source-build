From 3e292ac2b2dbec5d71d91185e1f94abac4aab6b5 Mon Sep 17 00:00:00 2001
From: Chris Rummel <crummel@microsoft.com>
Date: Thu, 15 Nov 2018 09:58:35 -0600
Subject: [PATCH] Add arcade

---
 .gitignore                                    |   3 +
 BuildToolsVersion.txt                         |   1 -
 Directory.Build.props                         | 194 ++++++++++
 Directory.Build.targets                       |  39 ++
 DotnetCLIVersion.txt                          |   2 +-
 .../docs/trimming.md                          |  38 +-
 ...Microsoft.Packaging.Tools.Trimming.pkgproj |   6 +-
 .../tasks/DirectedGraphWriter.cs              | 228 +++++++++++
 .../tasks/FileNode.cs                         | 174 +++++++--
 .../BuildErrorException.cs                    |  32 ++
 .../LockFileCache.cs                          |  68 ++++
 ...soft.Packaging.Tools.Trimming.Tasks.builds |   4 +-
 ...soft.Packaging.Tools.Trimming.Tasks.csproj |  46 ++-
 ...crosoft.Packaging.Tools.Trimming.Tasks.sln |  30 ++
 .../tasks/NuGetPackageNode.cs                 |   6 +
 .../tasks/TrimFiles.cs                        | 187 ++++++++-
 ...Microsoft.Packaging.Tools.Trimming.targets |  34 +-
 NuGet.config                                  |   7 +
 Packaging.props                               |   7 +-
 apicompat/Directory.Build.props               |   7 +
 apicompat/apicompat.proj                      |   4 +-
 apicompat/net461/net461.depproj               |   4 +-
 apicompat/netstandard1x/netstandard.builds    |   2 +-
 apicompat/netstandard1x/netstandard1x.depproj |   4 +-
 build-managed.sh                              |   5 -
 build.cmd                                     |   6 +-
 build.proj                                    |  61 +++
 build.sh                                      |  18 +-
 config.json                                   | 223 -----------
 dependencies.props                            |  51 +++
 dir.proj                                      |  25 --
 dir.targets                                   |  12 -
 eng/Build.props                               |   6 +
 eng/Signing.props                             |   7 +
 eng/Tools.props                               |  37 ++
 eng/Version.Details.xml                       |  10 +
 eng/Versions.props                            |   7 +
 eng/build.ps1                                 |  34 ++
 eng/build.sh                                  |  52 +++
 eng/common/CIBuild.cmd                        |   3 +
 eng/common/PublishBuildAssets.cmd             |   3 +
 eng/common/build.ps1                          | 107 ++++++
 eng/common/build.sh                           | 171 +++++++++
 eng/common/cibuild.sh                         |  16 +
 eng/common/cross/android/arm/toolchain.cmake  |  41 ++
 .../cross/android/arm64/toolchain.cmake       |  42 ++
 eng/common/cross/arm/sources.list.bionic      |  11 +
 eng/common/cross/arm/sources.list.jessie      |   3 +
 eng/common/cross/arm/sources.list.trusty      |  11 +
 eng/common/cross/arm/sources.list.vivid       |  11 +
 eng/common/cross/arm/sources.list.wily        |  11 +
 eng/common/cross/arm/sources.list.xenial      |  11 +
 eng/common/cross/arm/sources.list.zesty       |  11 +
 eng/common/cross/arm/trusty-lttng-2.4.patch   |  71 ++++
 eng/common/cross/arm/trusty.patch             |  97 +++++
 eng/common/cross/arm64/sources.list.bionic    |  11 +
 eng/common/cross/arm64/sources.list.trusty    |  11 +
 eng/common/cross/arm64/sources.list.vivid     |  11 +
 eng/common/cross/arm64/sources.list.wily      |  11 +
 eng/common/cross/arm64/sources.list.xenial    |  11 +
 eng/common/cross/arm64/sources.list.zesty     |  11 +
 eng/common/cross/armel/sources.list.jessie    |   3 +
 eng/common/cross/armel/tizen-build-rootfs.sh  |  44 +++
 eng/common/cross/armel/tizen-fetch.sh         | 171 +++++++++
 eng/common/cross/armel/tizen/tizen-dotnet.ks  |  50 +++
 eng/common/cross/armel/tizen/tizen.patch      |  18 +
 eng/common/cross/build-android-rootfs.sh      | 137 +++++++
 eng/common/cross/build-rootfs.sh              | 210 ++++++++++
 eng/common/cross/toolchain.cmake              | 138 +++++++
 eng/common/darc-init.ps1                      |  21 +
 eng/common/darc-init.sh                       |  35 ++
 eng/common/helixpublish.proj                  |  15 +
 eng/common/init-tools-native.cmd              |   3 +
 eng/common/init-tools-native.ps1              | 128 +++++++
 eng/common/init-tools-native.sh               | 145 +++++++
 eng/common/msbuild.ps1                        |  23 ++
 eng/common/msbuild.sh                         |  55 +++
 eng/common/native/CommonLibrary.psm1          | 358 ++++++++++++++++++
 eng/common/native/common-library.sh           | 168 ++++++++
 eng/common/native/install-cmake.sh            | 117 ++++++
 eng/common/native/install-tool.ps1            | 130 +++++++
 eng/common/templates/phases/base.yml          | 131 +++++++
 .../templates/phases/publish-build-assets.yml |  46 +++
 eng/common/templates/steps/build-reason.yml   |  12 +
 eng/common/templates/steps/helix-publish.yml  |  50 +++
 eng/common/templates/steps/run-on-unix.yml    |   7 +
 eng/common/templates/steps/run-on-windows.yml |   7 +
 .../steps/run-script-ifequalelse.yml          |  33 ++
 eng/common/templates/steps/telemetry-end.yml  |  67 ++++
 .../templates/steps/telemetry-start.yml       | 155 ++++++++
 eng/common/tools.ps1                          | 283 ++++++++++++++
 eng/common/tools.sh                           | 258 +++++++++++++
 eng/configure-toolset.ps1                     |   5 +
 external/docs/docs.depproj                    |   5 +-
 global.json                                   |   8 +
 init-tools.cmd                                |  85 -----
 init-tools.msbuild                            |  11 -
 init-tools.sh                                 | 155 --------
 netstandard/pkg/NETStandard.Library.pkgproj   |  11 +-
 netstandard/pkg/shims/Directory.Build.targets |  46 +++
 .../pkg/shims/netfx/Directory.Build.props     |  24 ++
 .../System.ComponentModel.Composition.csproj  |   8 +-
 .../pkg/shims/netfx/System.Core.csproj        |   8 +-
 .../pkg/shims/netfx/System.Data.csproj        |   8 +-
 .../pkg/shims/netfx/System.Drawing.csproj     |   8 +-
 .../System.IO.Compression.FileSystem.csproj   |   8 +-
 netstandard/pkg/shims/netfx/System.Net.csproj |   8 +-
 .../pkg/shims/netfx/System.Numerics.csproj    |   8 +-
 .../netfx/System.Runtime.Serialization.csproj |   8 +-
 .../netfx/System.ServiceModel.Web.csproj      |   8 +-
 .../shims/netfx/System.Transactions.csproj    |   8 +-
 netstandard/pkg/shims/netfx/System.Web.csproj |   8 +-
 .../pkg/shims/netfx/System.Windows.csproj     |   8 +-
 .../pkg/shims/netfx/System.Xml.Linq.csproj    |   8 +-
 .../netfx/System.Xml.Serialization.csproj     |   8 +-
 netstandard/pkg/shims/netfx/System.Xml.csproj |   8 +-
 netstandard/pkg/shims/netfx/System.csproj     |   8 +-
 netstandard/pkg/shims/netfx/dir.builds        |   2 +-
 netstandard/pkg/shims/netfx/mscorlib.csproj   |   8 +-
 .../shims/netstandard/Directory.Build.props   |  33 ++
 .../Microsoft.Win32.Primitives.csproj         |   8 +-
 .../netstandard/System.AppContext.csproj      |   8 +-
 .../System.Collections.Concurrent.csproj      |   8 +-
 .../System.Collections.NonGeneric.csproj      |   8 +-
 .../System.Collections.Specialized.csproj     |   8 +-
 .../netstandard/System.Collections.csproj     |   8 +-
 ...stem.ComponentModel.EventBasedAsync.csproj |   8 +-
 .../System.ComponentModel.Primitives.csproj   |   8 +-
 ...System.ComponentModel.TypeConverter.csproj |   8 +-
 .../netstandard/System.ComponentModel.csproj  |   8 +-
 .../shims/netstandard/System.Console.csproj   |   8 +-
 .../netstandard/System.Data.Common.csproj     |   8 +-
 .../System.Diagnostics.Contracts.csproj       |   8 +-
 .../System.Diagnostics.Debug.csproj           |   8 +-
 .../System.Diagnostics.FileVersionInfo.csproj |   8 +-
 .../System.Diagnostics.Process.csproj         |   8 +-
 .../System.Diagnostics.StackTrace.csproj      |   8 +-
 ...Diagnostics.TextWriterTraceListener.csproj |   8 +-
 .../System.Diagnostics.Tools.csproj           |   8 +-
 .../System.Diagnostics.TraceSource.csproj     |   8 +-
 .../System.Diagnostics.Tracing.csproj         |   8 +-
 .../System.Drawing.Primitives.csproj          |   8 +-
 .../netstandard/System.Dynamic.Runtime.csproj |   8 +-
 .../System.Globalization.Calendars.csproj     |   8 +-
 .../System.Globalization.Extensions.csproj    |   8 +-
 .../netstandard/System.Globalization.csproj   |   8 +-
 .../System.IO.Compression.ZipFile.csproj      |   8 +-
 .../netstandard/System.IO.Compression.csproj  |   8 +-
 .../System.IO.FileSystem.DriveInfo.csproj     |   8 +-
 .../System.IO.FileSystem.Primitives.csproj    |   8 +-
 .../System.IO.FileSystem.Watcher.csproj       |   8 +-
 .../netstandard/System.IO.FileSystem.csproj   |   8 +-
 .../System.IO.IsolatedStorage.csproj          |   8 +-
 .../System.IO.MemoryMappedFiles.csproj        |   8 +-
 .../shims/netstandard/System.IO.Pipes.csproj  |   8 +-
 .../System.IO.UnmanagedMemoryStream.csproj    |   8 +-
 .../pkg/shims/netstandard/System.IO.csproj    |   8 +-
 .../System.Linq.Expressions.csproj            |   8 +-
 .../netstandard/System.Linq.Parallel.csproj   |   8 +-
 .../netstandard/System.Linq.Queryable.csproj  |   8 +-
 .../pkg/shims/netstandard/System.Linq.csproj  |   8 +-
 .../shims/netstandard/System.Net.Http.csproj  |   8 +-
 .../System.Net.NameResolution.csproj          |   8 +-
 .../System.Net.NetworkInformation.csproj      |   6 +-
 .../shims/netstandard/System.Net.Ping.csproj  |   8 +-
 .../netstandard/System.Net.Primitives.csproj  |   8 +-
 .../netstandard/System.Net.Requests.csproj    |   8 +-
 .../netstandard/System.Net.Security.csproj    |   8 +-
 .../netstandard/System.Net.Sockets.csproj     |   8 +-
 .../System.Net.WebHeaderCollection.csproj     |   8 +-
 .../System.Net.WebSockets.Client.csproj       |   8 +-
 .../netstandard/System.Net.WebSockets.csproj  |   8 +-
 .../netstandard/System.ObjectModel.csproj     |   8 +-
 .../System.Reflection.Extensions.csproj       |   8 +-
 .../System.Reflection.Primitives.csproj       |   8 +-
 .../netstandard/System.Reflection.csproj      |   8 +-
 .../System.Resources.Reader.csproj            |   8 +-
 .../System.Resources.ResourceManager.csproj   |   8 +-
 .../System.Resources.Writer.csproj            |   8 +-
 ...em.Runtime.CompilerServices.VisualC.csproj |   8 +-
 .../System.Runtime.Extensions.csproj          |   8 +-
 .../netstandard/System.Runtime.Handles.csproj |   8 +-
 ....InteropServices.RuntimeInformation.csproj |   8 +-
 .../System.Runtime.InteropServices.csproj     |   8 +-
 .../System.Runtime.Numerics.csproj            |   8 +-
 ...em.Runtime.Serialization.Formatters.csproj |   8 +-
 .../System.Runtime.Serialization.Json.csproj  |   8 +-
 ...em.Runtime.Serialization.Primitives.csproj |   8 +-
 .../System.Runtime.Serialization.Xml.csproj   |   8 +-
 .../shims/netstandard/System.Runtime.csproj   |   8 +-
 .../netstandard/System.Security.Claims.csproj |   8 +-
 ...em.Security.Cryptography.Algorithms.csproj |   8 +-
 .../System.Security.Cryptography.Csp.csproj   |   8 +-
 ...stem.Security.Cryptography.Encoding.csproj |   8 +-
 ...em.Security.Cryptography.Primitives.csproj |   8 +-
 ...urity.Cryptography.X509Certificates.csproj |   8 +-
 .../System.Security.Principal.csproj          |   8 +-
 .../System.Security.SecureString.csproj       |   8 +-
 .../System.Text.Encoding.Extensions.csproj    |   8 +-
 .../netstandard/System.Text.Encoding.csproj   |   8 +-
 .../System.Text.RegularExpressions.csproj     |   8 +-
 .../System.Threading.Overlapped.csproj        |   8 +-
 .../System.Threading.Tasks.Parallel.csproj    |   8 +-
 .../netstandard/System.Threading.Tasks.csproj |   8 +-
 .../System.Threading.Thread.csproj            |   8 +-
 .../System.Threading.ThreadPool.csproj        |   8 +-
 .../netstandard/System.Threading.Timer.csproj |   8 +-
 .../shims/netstandard/System.Threading.csproj |   8 +-
 .../netstandard/System.ValueTuple.csproj      |   8 +-
 .../System.Xml.ReaderWriter.csproj            |   8 +-
 .../netstandard/System.Xml.XDocument.csproj   |   8 +-
 .../System.Xml.XPath.XDocument.csproj         |   8 +-
 .../shims/netstandard/System.Xml.XPath.csproj |   8 +-
 .../netstandard/System.Xml.XmlDocument.csproj |   8 +-
 .../System.Xml.XmlSerializer.csproj           |   8 +-
 netstandard/pkg/shims/netstandard/dir.builds  |   2 +-
 netstandard/pkg/shims/shim.projtemplate       |   4 +-
 netstandard/ref/netstandard.csproj            |  15 +-
 netstandard/src/netstandard.builds            |   2 +-
 netstandard/src/netstandard.csproj            |  17 +-
 packages.builds                               |   2 +-
 platforms/Directory.Build.props               |  13 +
 platforms/Directory.Build.targets             |  23 ++
 platforms/dir.proj                            |   2 +-
 platforms/extensions/Directory.Build.props    |  15 +
 .../Microsoft.Win32.Registry.csproj           |   7 +-
 platforms/extensions/System.CodeDom.csproj    |   7 +-
 .../System.Security.AccessControl.csproj      |   7 +-
 .../System.Security.Principal.Windows.csproj  |   7 +-
 platforms/extensions/extension.projtemplate   |   4 +-
 platforms/net461/Directory.Build.props        |  12 +
 platforms/net461/Directory.Build.targets      |   4 +
 .../System.ComponentModel.Composition.csproj  |   5 +-
 platforms/net461/System.Core.csproj           |   5 +-
 platforms/net461/System.Data.csproj           |   5 +-
 platforms/net461/System.Drawing.csproj        |   5 +-
 .../System.IO.Compression.FileSystem.csproj   |   5 +-
 platforms/net461/System.IO.Compression.csproj |   5 +-
 platforms/net461/System.Net.Http.csproj       |   5 +-
 platforms/net461/System.Numerics.csproj       |   5 +-
 ....InteropServices.RuntimeInformation.csproj |   5 +-
 .../System.Runtime.Serialization.csproj       |   5 +-
 platforms/net461/System.Transactions.csproj   |   5 +-
 platforms/net461/System.ValueTuple.csproj     |   5 +-
 platforms/net461/System.Web.csproj            |   5 +-
 platforms/net461/System.Xml.Linq.csproj       |   5 +-
 platforms/net461/System.Xml.csproj            |   5 +-
 platforms/net461/System.csproj                |   5 +-
 platforms/net461/mscorlib.csproj              |   5 +-
 .../xamarin.android/Directory.Build.props     |   8 +
 .../Facades/System.Data.Common.csproj         |   6 +-
 .../System.Diagnostics.StackTrace.csproj      |   5 +-
 .../System.Globalization.Extensions.csproj    |   5 +-
 ...em.Runtime.Serialization.Primitives.csproj |   5 +-
 .../System.Runtime.Serialization.Xml.csproj   |   5 +-
 ...em.Security.Cryptography.Algorithms.csproj |   7 +-
 .../System.Security.SecureString.csproj       |   5 +-
 .../System.Threading.Overlapped.csproj        |   6 +-
 .../Facades/System.Xml.XPath.XDocument.csproj |   6 +-
 platforms/xamarin.android/Mono.Android.csproj |   5 +-
 .../System.ComponentModel.Composition.csproj  |   5 +-
 platforms/xamarin.android/System.Core.csproj  |   5 +-
 platforms/xamarin.android/System.Data.csproj  |   5 +-
 .../System.IO.Compression.FileSystem.csproj   |   5 +-
 .../System.IO.Compression.csproj              |   5 +-
 .../xamarin.android/System.Net.Http.csproj    |   5 +-
 .../System.Numerics.Vectors.csproj            |   5 +-
 .../xamarin.android/System.Numerics.csproj    |   5 +-
 ....InteropServices.RuntimeInformation.csproj |   4 +-
 .../System.Runtime.Serialization.csproj       |   5 +-
 .../System.Transactions.csproj                |   5 +-
 .../System.Web.Services.csproj                |   5 +-
 .../xamarin.android/System.Xml.Linq.csproj    |   5 +-
 platforms/xamarin.android/System.Xml.csproj   |   5 +-
 platforms/xamarin.android/System.csproj       |   5 +-
 platforms/xamarin.android/mscorlib.csproj     |   7 +-
 platforms/xamarin.ios/Directory.Build.props   |   8 +
 .../Facades/System.Data.Common.csproj         |   6 +-
 .../System.Diagnostics.StackTrace.csproj      |   5 +-
 .../System.Globalization.Extensions.csproj    |   5 +-
 ...em.Runtime.Serialization.Primitives.csproj |   5 +-
 .../System.Runtime.Serialization.Xml.csproj   |   5 +-
 ...em.Security.Cryptography.Algorithms.csproj |   7 +-
 .../System.Security.SecureString.csproj       |   5 +-
 .../System.Threading.Overlapped.csproj        |   6 +-
 .../Facades/System.Xml.XPath.XDocument.csproj |   5 +-
 platforms/xamarin.ios/OpenTK-1.0.csproj       |   5 +-
 .../System.ComponentModel.Composition.csproj  |   5 +-
 platforms/xamarin.ios/System.Core.csproj      |   5 +-
 platforms/xamarin.ios/System.Data.csproj      |   5 +-
 .../System.IO.Compression.FileSystem.csproj   |   5 +-
 .../xamarin.ios/System.IO.Compression.csproj  |   5 +-
 platforms/xamarin.ios/System.Net.Http.csproj  |   5 +-
 .../System.Numerics.Vectors.csproj            |   5 +-
 platforms/xamarin.ios/System.Numerics.csproj  |   5 +-
 ....InteropServices.RuntimeInformation.csproj |   4 +-
 .../System.Runtime.Serialization.csproj       |   5 +-
 .../xamarin.ios/System.Transactions.csproj    |   5 +-
 .../xamarin.ios/System.Web.Services.csproj    |   5 +-
 platforms/xamarin.ios/System.Xml.Linq.csproj  |   5 +-
 platforms/xamarin.ios/System.Xml.csproj       |   5 +-
 platforms/xamarin.ios/System.csproj           |   5 +-
 platforms/xamarin.ios/Xamarin.iOS.csproj      |   5 +-
 platforms/xamarin.ios/mscorlib.csproj         |   7 +-
 platforms/xamarin.mac/Directory.Build.props   |   8 +
 .../Facades/System.Data.Common.csproj         |   6 +-
 .../System.Diagnostics.StackTrace.csproj      |   5 +-
 .../System.Globalization.Extensions.csproj    |   5 +-
 ...em.Runtime.Serialization.Primitives.csproj |   5 +-
 .../System.Runtime.Serialization.Xml.csproj   |   5 +-
 ...em.Security.Cryptography.Algorithms.csproj |   7 +-
 .../System.Security.SecureString.csproj       |   5 +-
 .../System.Threading.Overlapped.csproj        |   6 +-
 .../Facades/System.Xml.XPath.XDocument.csproj |   5 +-
 platforms/xamarin.mac/OpenTK.csproj           |   5 +-
 .../System.ComponentModel.Composition.csproj  |   5 +-
 platforms/xamarin.mac/System.Core.csproj      |   5 +-
 platforms/xamarin.mac/System.Data.csproj      |   5 +-
 .../System.IO.Compression.FileSystem.csproj   |   5 +-
 .../xamarin.mac/System.IO.Compression.csproj  |   5 +-
 platforms/xamarin.mac/System.Net.Http.csproj  |   5 +-
 .../System.Numerics.Vectors.csproj            |   5 +-
 platforms/xamarin.mac/System.Numerics.csproj  |   5 +-
 ....InteropServices.RuntimeInformation.csproj |   4 +-
 .../System.Runtime.Serialization.csproj       |   5 +-
 .../xamarin.mac/System.Transactions.csproj    |   5 +-
 .../xamarin.mac/System.Web.Services.csproj    |   5 +-
 platforms/xamarin.mac/System.Xml.Linq.csproj  |   5 +-
 platforms/xamarin.mac/System.Xml.csproj       |   5 +-
 platforms/xamarin.mac/System.csproj           |   5 +-
 platforms/xamarin.mac/Xamarin.Mac.csproj      |   5 +-
 platforms/xamarin.mac/mscorlib.csproj         |   7 +-
 platforms/xamarin.tvos/Directory.Build.props  |   8 +
 .../Facades/System.Data.Common.csproj         |   7 +-
 .../System.Diagnostics.StackTrace.csproj      |   5 +-
 .../System.Globalization.Extensions.csproj    |   5 +-
 ...em.Runtime.Serialization.Primitives.csproj |   5 +-
 .../System.Runtime.Serialization.Xml.csproj   |   5 +-
 ...em.Security.Cryptography.Algorithms.csproj |   7 +-
 .../System.Security.SecureString.csproj       |   5 +-
 .../System.Threading.Overlapped.csproj        |   7 +-
 .../Facades/System.Xml.XPath.XDocument.csproj |   5 +-
 platforms/xamarin.tvos/OpenTK-1.0.csproj      |   5 +-
 .../System.ComponentModel.Composition.csproj  |   5 +-
 platforms/xamarin.tvos/System.Core.csproj     |   5 +-
 platforms/xamarin.tvos/System.Data.csproj     |   5 +-
 .../System.IO.Compression.FileSystem.csproj   |   5 +-
 .../xamarin.tvos/System.IO.Compression.csproj |   5 +-
 platforms/xamarin.tvos/System.Net.Http.csproj |   5 +-
 .../System.Numerics.Vectors.csproj            |   5 +-
 platforms/xamarin.tvos/System.Numerics.csproj |   5 +-
 ....InteropServices.RuntimeInformation.csproj |   5 +-
 .../System.Runtime.Serialization.csproj       |   5 +-
 .../xamarin.tvos/System.Transactions.csproj   |   5 +-
 .../xamarin.tvos/System.Web.Services.csproj   |   5 +-
 platforms/xamarin.tvos/System.Xml.Linq.csproj |   5 +-
 platforms/xamarin.tvos/System.Xml.csproj      |   5 +-
 platforms/xamarin.tvos/System.csproj          |   5 +-
 platforms/xamarin.tvos/Xamarin.TVOS.csproj    |   5 +-
 platforms/xamarin.tvos/mscorlib.csproj        |   7 +-
 .../xamarin.watchos/Directory.Build.props     |   8 +
 .../Facades/System.Data.Common.csproj         |   7 +-
 .../System.Diagnostics.StackTrace.csproj      |   5 +-
 .../System.Globalization.Extensions.csproj    |   5 +-
 ...em.Runtime.Serialization.Primitives.csproj |   5 +-
 .../System.Runtime.Serialization.Xml.csproj   |   5 +-
 ...em.Security.Cryptography.Algorithms.csproj |   7 +-
 .../System.Security.SecureString.csproj       |   5 +-
 .../System.Threading.Overlapped.csproj        |   7 +-
 .../Facades/System.Xml.XPath.XDocument.csproj |   5 +-
 .../System.ComponentModel.Composition.csproj  |   5 +-
 platforms/xamarin.watchos/System.Core.csproj  |   5 +-
 platforms/xamarin.watchos/System.Data.csproj  |   5 +-
 .../System.IO.Compression.FileSystem.csproj   |   5 +-
 .../System.IO.Compression.csproj              |   5 +-
 .../xamarin.watchos/System.Net.Http.csproj    |   5 +-
 .../System.Numerics.Vectors.csproj            |   5 +-
 .../xamarin.watchos/System.Numerics.csproj    |   5 +-
 ....InteropServices.RuntimeInformation.csproj |   5 +-
 .../System.Runtime.Serialization.csproj       |   5 +-
 .../System.Transactions.csproj                |   5 +-
 .../System.Web.Services.csproj                |   5 +-
 .../xamarin.watchos/System.Xml.Linq.csproj    |   5 +-
 platforms/xamarin.watchos/System.Xml.csproj   |   5 +-
 platforms/xamarin.watchos/System.csproj       |   5 +-
 .../xamarin.watchos/Xamarin.WatchOS.csproj    |   5 +-
 platforms/xamarin.watchos/mscorlib.csproj     |   7 +-
 publish.msbuild                               |  41 ++
 run.cmd                                       |  28 --
 run.sh                                        |  13 -
 src.builds                                    |   2 +-
 391 files changed, 5846 insertions(+), 1867 deletions(-)
 delete mode 100644 BuildToolsVersion.txt
 create mode 100644 Directory.Build.props
 create mode 100644 Directory.Build.targets
 create mode 100644 Microsoft.Packaging.Tools.Trimming/tasks/DirectedGraphWriter.cs
 create mode 100644 Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/BuildErrorException.cs
 create mode 100644 Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/LockFileCache.cs
 create mode 100644 Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.sln
 create mode 100644 NuGet.config
 create mode 100644 apicompat/Directory.Build.props
 delete mode 100755 build-managed.sh
 create mode 100644 build.proj
 delete mode 100644 config.json
 create mode 100644 dependencies.props
 delete mode 100644 dir.proj
 delete mode 100644 dir.targets
 create mode 100644 eng/Build.props
 create mode 100644 eng/Signing.props
 create mode 100644 eng/Tools.props
 create mode 100644 eng/Version.Details.xml
 create mode 100644 eng/Versions.props
 create mode 100644 eng/build.ps1
 create mode 100755 eng/build.sh
 create mode 100644 eng/common/CIBuild.cmd
 create mode 100644 eng/common/PublishBuildAssets.cmd
 create mode 100644 eng/common/build.ps1
 create mode 100755 eng/common/build.sh
 create mode 100755 eng/common/cibuild.sh
 create mode 100644 eng/common/cross/android/arm/toolchain.cmake
 create mode 100644 eng/common/cross/android/arm64/toolchain.cmake
 create mode 100644 eng/common/cross/arm/sources.list.bionic
 create mode 100644 eng/common/cross/arm/sources.list.jessie
 create mode 100644 eng/common/cross/arm/sources.list.trusty
 create mode 100644 eng/common/cross/arm/sources.list.vivid
 create mode 100644 eng/common/cross/arm/sources.list.wily
 create mode 100644 eng/common/cross/arm/sources.list.xenial
 create mode 100644 eng/common/cross/arm/sources.list.zesty
 create mode 100644 eng/common/cross/arm/trusty-lttng-2.4.patch
 create mode 100644 eng/common/cross/arm/trusty.patch
 create mode 100644 eng/common/cross/arm64/sources.list.bionic
 create mode 100644 eng/common/cross/arm64/sources.list.trusty
 create mode 100644 eng/common/cross/arm64/sources.list.vivid
 create mode 100644 eng/common/cross/arm64/sources.list.wily
 create mode 100644 eng/common/cross/arm64/sources.list.xenial
 create mode 100644 eng/common/cross/arm64/sources.list.zesty
 create mode 100644 eng/common/cross/armel/sources.list.jessie
 create mode 100644 eng/common/cross/armel/tizen-build-rootfs.sh
 create mode 100644 eng/common/cross/armel/tizen-fetch.sh
 create mode 100644 eng/common/cross/armel/tizen/tizen-dotnet.ks
 create mode 100644 eng/common/cross/armel/tizen/tizen.patch
 create mode 100644 eng/common/cross/build-android-rootfs.sh
 create mode 100644 eng/common/cross/build-rootfs.sh
 create mode 100644 eng/common/cross/toolchain.cmake
 create mode 100644 eng/common/darc-init.ps1
 create mode 100755 eng/common/darc-init.sh
 create mode 100644 eng/common/helixpublish.proj
 create mode 100644 eng/common/init-tools-native.cmd
 create mode 100644 eng/common/init-tools-native.ps1
 create mode 100644 eng/common/init-tools-native.sh
 create mode 100644 eng/common/msbuild.ps1
 create mode 100755 eng/common/msbuild.sh
 create mode 100644 eng/common/native/CommonLibrary.psm1
 create mode 100644 eng/common/native/common-library.sh
 create mode 100644 eng/common/native/install-cmake.sh
 create mode 100644 eng/common/native/install-tool.ps1
 create mode 100644 eng/common/templates/phases/base.yml
 create mode 100644 eng/common/templates/phases/publish-build-assets.yml
 create mode 100644 eng/common/templates/steps/build-reason.yml
 create mode 100644 eng/common/templates/steps/helix-publish.yml
 create mode 100644 eng/common/templates/steps/run-on-unix.yml
 create mode 100644 eng/common/templates/steps/run-on-windows.yml
 create mode 100644 eng/common/templates/steps/run-script-ifequalelse.yml
 create mode 100644 eng/common/templates/steps/telemetry-end.yml
 create mode 100644 eng/common/templates/steps/telemetry-start.yml
 create mode 100644 eng/common/tools.ps1
 create mode 100644 eng/common/tools.sh
 create mode 100644 eng/configure-toolset.ps1
 create mode 100644 global.json
 delete mode 100644 init-tools.cmd
 delete mode 100644 init-tools.msbuild
 delete mode 100755 init-tools.sh
 create mode 100644 netstandard/pkg/shims/Directory.Build.targets
 create mode 100644 netstandard/pkg/shims/netfx/Directory.Build.props
 create mode 100644 netstandard/pkg/shims/netstandard/Directory.Build.props
 create mode 100644 platforms/Directory.Build.props
 create mode 100644 platforms/Directory.Build.targets
 create mode 100644 platforms/extensions/Directory.Build.props
 create mode 100644 platforms/net461/Directory.Build.props
 create mode 100644 platforms/net461/Directory.Build.targets
 create mode 100644 platforms/xamarin.android/Directory.Build.props
 create mode 100644 platforms/xamarin.ios/Directory.Build.props
 create mode 100644 platforms/xamarin.mac/Directory.Build.props
 create mode 100644 platforms/xamarin.tvos/Directory.Build.props
 create mode 100644 platforms/xamarin.watchos/Directory.Build.props
 create mode 100644 publish.msbuild
 delete mode 100644 run.cmd
 delete mode 100755 run.sh

diff --git a/.gitignore b/.gitignore
index 544bb14..4797d91 100644
--- a/.gitignore
+++ b/.gitignore
@@ -4,6 +4,8 @@ syntax: glob
 
 # Tool Runtime Dir
 /[Tt]ools/
+.dotnet/
+.packages/
 
 # User-specific files
 *.suo
@@ -12,6 +14,7 @@ syntax: glob
 *.sln.docstates
 
 # Build results
+artifacts/
 [Dd]ebug/
 [Dd]ebugPublic/
 [Rr]elease/
diff --git a/BuildToolsVersion.txt b/BuildToolsVersion.txt
deleted file mode 100644
index faa6094..0000000
--- a/BuildToolsVersion.txt
+++ /dev/null
@@ -1 +0,0 @@
-2.1.0-preview2-02621-01
\ No newline at end of file
diff --git a/Directory.Build.props b/Directory.Build.props
new file mode 100644
index 0000000..8b82cfd
--- /dev/null
+++ b/Directory.Build.props
@@ -0,0 +1,194 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+
+  <PropertyGroup>
+    <!--
+    For non-SDK projects that import this file and then import Microsoft.Common.props,
+    tell Microsoft.Common.props not to import Directory.Build.props again
+    -->
+    <ImportDirectoryBuildProps>false</ImportDirectoryBuildProps>
+  </PropertyGroup>
+
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+  <Import Project="$(MSBuildThisFileDirectory)dependencies.props" />
+  <!-- Common repo directories -->
+  <PropertyGroup>
+    <ProjectDir>$(MSBuildThisFileDirectory)</ProjectDir>
+    <SourceDir>$(ProjectDir)src\</SourceDir>
+
+    <!-- Output directories -->
+    <BinDir Condition="'$(BinDir)'==''">$(ProjectDir)bin/</BinDir>
+    <ObjDir Condition="'$(ObjDir)'==''">$(BinDir)obj/</ObjDir>
+    <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)'==''">$(ObjDir)</BaseIntermediateOutputPath>
+    <RootIntermediateOutputPath Condition="'$(RootIntermediateOutputPath)'==''">$(BaseIntermediateOutputPath)</RootIntermediateOutputPath>
+
+    <PackageOutputRoot Condition="'$(PackageOutputRoot)'=='' and '$(NonShippingPackage)' == 'true'">$(BinDir)packages_noship/</PackageOutputRoot>
+    <PackageOutputRoot Condition="'$(PackageOutputRoot)'==''">$(BinDir)packages/</PackageOutputRoot>
+
+    <!-- Input Directories -->
+    <PackagesDir>$(DotNetRestorePackagesPath)</PackagesDir>
+    <PackagesDir Condition="'$(PackagesDir)'==''">$(ProjectDir)packages/</PackagesDir>
+    <ToolsDir Condition="'$(ToolsDir)'==''">$(ProjectDir)Tools/</ToolsDir>
+
+    <!-- Respect environment variable for the .NET install directory if set; otherwise, use the current default location -->
+    <DotNetRoot Condition="'$(DotNetRoot)' == ''">$(DOTNET_INSTALL_DIR)</DotNetRoot>
+    <DotNetRoot Condition="'$(DotNetRoot)' == ''">$(ProjectDir).dotnet\</DotNetRoot>
+    <DotNetRoot Condition="!HasTrailingSlash('$(DotNetRoot)')">$(DotNetRoot)\</DotNetRoot>
+    <DotnetCliPath Condition="'$(DotnetCliPath)'==''">$(DotNetRoot)</DotnetCliPath>
+    <ToolHostCmd Condition="'$(ToolHostCmd)'==''">"$(DotNetRoot)dotnet"</ToolHostCmd>
+
+    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
+
+    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
+  </PropertyGroup>
+
+  <!-- Import Build tools common props file where repo-independent properties are found -->
+  <Import Project="$(ToolsDir)Build.Common.props" Condition="Exists('$(ToolsDir)Build.Common.props')" />
+
+  <!-- Import packaging props -->
+  <Import Project="$(MSBuildThisFileDirectory)Packaging.props"/>
+
+  <!-- list of nuget package sources passed to dotnet -->
+  <PropertyGroup>
+    <RestoreSources Condition="'$(DotNetBuildOffline)' != 'true'">
+      https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json;
+      https://dotnet.myget.org/F/dotnet-core/api/v3/index.json;
+      https://api.nuget.org/v3/index.json;
+      $(RestoreSources)
+    </RestoreSources>
+  </PropertyGroup>
+
+  <PropertyGroup>
+    <!-- By default make all libraries to be AnyCPU but individual projects can override it if they need to -->
+    <Platform>AnyCPU</Platform>
+    <OutputType>Library</OutputType>
+    <RunApiCompat>true</RunApiCompat>
+    <AssemblyKey>Open</AssemblyKey>
+    <LangVersion>latest</LangVersion> <!-- default to allowing all language features -->
+  </PropertyGroup>
+
+  <!--
+  Projects that have no OS-specific implementations just use Debug and Release for $(Configuration).
+  Projects that do have OS-specific implementations use OS_Debug and OS_Release, for all OS's we support even
+  if the code is the same between some OS's (so if you have some project that just calls POSIX APIs, we still have
+  OSX_[Debug|Release] and Linux_[Debug|Release] configurations.  We do this so that we place all the output under
+  a single binary folder and can have a similar experience between the command line and Visual Studio.
+  -->
+
+  <!--
+  If Configuration is empty that means we are not being built in VS and so folks need to explicitly pass the different
+  values for $(ConfigurationGroup), $(TargetGroup), or $(OSGroup) or accept the defaults for them.
+  -->
+  <PropertyGroup Condition="'$(Configuration)'==''">
+    <ConfigurationGroup Condition="'$(ConfigurationGroup)'==''">Debug</ConfigurationGroup>
+    <Configuration>$(ConfigurationGroup)</Configuration>
+    <Configuration Condition="'$(TargetGroup)'!=''">$(TargetGroup)_$(Configuration)</Configuration>
+    <Configuration Condition="'$(OSGroup)'!='' and '$(OSGroup)'!='AnyOS'">$(OSGroup)_$(Configuration)</Configuration>
+  </PropertyGroup>
+
+  <!--
+  If Configuration is set then someone explicitly passed it in or we building from VS. In either case
+  default $(ConfigurationGroup), $(TargetGroup), or $(OSGroup) from the Configuration if they aren't
+  already explicitly set.
+  -->
+  <PropertyGroup Condition="'$(Configuration)'!=''">
+    <ConfigurationGroup Condition="'$(ConfigurationGroup)'=='' and $(Configuration.EndsWith('Debug'))">Debug</ConfigurationGroup>
+    <ConfigurationGroup Condition="'$(ConfigurationGroup)'=='' and $(Configuration.EndsWith('Release'))">Release</ConfigurationGroup>
+    <ConfigurationGroup Condition="'$(ConfigurationGroup)'==''">Debug</ConfigurationGroup>
+
+    <BuildAllOSGroups Condition="'$(BuildAllOSGroups)' == ''">true</BuildAllOSGroups>
+
+    <OSGroup Condition="'$(OSGroup)'=='' and $(Configuration.StartsWith('Windows'))">Windows_NT</OSGroup>
+    <OSGroup Condition="'$(OSGroup)'=='' and $(Configuration.StartsWith('Unix'))">Unix</OSGroup>
+    <OSGroup Condition="'$(OSGroup)'=='' and $(Configuration.StartsWith('Linux'))">Linux</OSGroup>
+    <OSGroup Condition="'$(OSGroup)'=='' and $(Configuration.StartsWith('OSX'))">OSX</OSGroup>
+    <OSGroup Condition="'$(OSGroup)'=='' and $(Configuration.StartsWith('FreeBSD'))">FreeBSD</OSGroup>
+    <OSGroup Condition="'$(OSGroup)'=='' and $(Configuration.StartsWith('NetBSD'))">NetBSD</OSGroup>
+    <OSGroup Condition="'$(OSGroup)'==''">AnyOS</OSGroup>
+
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('netcore50aot'))">netcore50aot</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('netstandard13aot'))">netstandard13aot</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('netstandard15aot'))">netstandard15aot</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('netcore50'))">netcore50</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('netcoreapp1.0'))">netcoreapp1.0</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('netcoreapp1.1'))">netcoreapp1.1</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('dnxcore50'))">dnxcore50</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('net463'))">net463</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('net462'))">net462</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('net461'))">net461</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('net46'))">net46</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('net45'))">net45</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('net451'))">net451</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('win8'))">win8</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('wpa81'))">wpa81</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('uap101aot'))">uap101aot</TargetGroup>
+    <TargetGroup Condition="'$(TargetGroup)'=='' and $(Configuration.Contains('uap101'))">uap101</TargetGroup>
+  </PropertyGroup>
+
+  <!-- Set up Default symbol and optimization for Configuration -->
+  <Choose>
+    <When Condition="'$(ConfigurationGroup)'=='Debug'">
+      <PropertyGroup>
+        <DebugSymbols Condition="'$(DebugSymbols)' == ''">true</DebugSymbols>
+        <Optimize Condition="'$(Optimize)' == ''">false</Optimize>
+        <DebugType Condition="'$(DebugType)' == ''">full</DebugType>
+        <DefineConstants>$(DefineConstants),DEBUG,TRACE</DefineConstants>
+      </PropertyGroup>
+    </When>
+    <When Condition="'$(ConfigurationGroup)' == 'Release'">
+      <PropertyGroup>
+        <DebugSymbols Condition="'$(DebugSymbols)' == ''">true</DebugSymbols>
+        <Optimize Condition="'$(Optimize)' == ''">true</Optimize>
+        <DebugType Condition="'$(DebugType)' == ''">pdbonly</DebugType>
+        <DefineConstants>$(DefineConstants),TRACE</DefineConstants>
+      </PropertyGroup>
+    </When>
+    <Otherwise>
+      <PropertyGroup>
+        <ConfigurationErrorMsg>$(ConfigurationErrorMsg);Unknown ConfigurationGroup [$(ConfigurationGroup)] specificed in your project.</ConfigurationErrorMsg>
+      </PropertyGroup>
+    </Otherwise>
+  </Choose>
+
+  <!-- Disable some standard properties for building our projects -->
+  <PropertyGroup>
+    <NoStdLib>true</NoStdLib>
+    <NoExplicitReferenceToStdLib>true</NoExplicitReferenceToStdLib>
+    <AddAdditionalExplicitAssemblyReferences>false</AddAdditionalExplicitAssemblyReferences>
+    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
+  </PropertyGroup>
+
+  <!-- Set up handling of build warnings -->
+  <PropertyGroup>
+    <WarningLevel>4</WarningLevel>
+    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
+  </PropertyGroup>
+
+  <!-- Set up the default output and intermediate paths -->
+  <PropertyGroup>
+    <OSPlatformConfig>$(OSGroup).$(Platform).$(ConfigurationGroup)</OSPlatformConfig>
+    <TargetOutputRelPath Condition="'$(TargetGroup)'!=''">$(TargetGroup)/</TargetOutputRelPath>
+
+    <BaseOutputPath Condition="'$(BaseOutputPath)'==''">$(BinDir)</BaseOutputPath>
+    <OutputPathSubfolder Condition="'$(IsCompatAssembly)'=='true'">/Compat</OutputPathSubfolder>
+    <OutputPath Condition="'$(OutputPath)'==''">$(BaseOutputPath)$(OSPlatformConfig)/$(MSBuildProjectName)/$(TargetOutputRelPath)$(OutputPathSubfolder)</OutputPath>
+
+    <IntermediateOutputRootPath Condition="'$(IntermediateOutputRootPath)' == ''">$(BaseIntermediateOutputPath)$(OSPlatformConfig)/</IntermediateOutputRootPath>
+    <IntermediateOutputPath Condition="'$(IntermediateOutputPath)' == ''">$(IntermediateOutputRootPath)$(MSBuildProjectName)/$(TargetOutputRelPath)</IntermediateOutputPath>
+
+    <TestPath Condition="'$(TestPath)'==''">$(TestWorkingDir)$(OSPlatformConfig)/$(MSBuildProjectName)/</TestPath>
+
+    <PackagesBasePath Condition="'$(PackagesBasePath)'==''">$(BinDir)$(OSPlatformConfig)</PackagesBasePath>
+    <PackageOutputPath Condition="'$(PackageOutputPath)'==''">$(PackageOutputRoot)$(ConfigurationGroup)/</PackageOutputPath>
+    <SymbolPackageOutputPath Condition="'$(SymbolPackageOutputPath)'==''">$(PackageOutputPath)symbols/</SymbolPackageOutputPath>
+  </PropertyGroup>
+
+  <!-- Target Framework Moniker values to be used in our projects -->
+  <PropertyGroup>
+    <UapRs3Tfm>uap10.0.15138</UapRs3Tfm>
+  </PropertyGroup>
+
+  <!-- Use Roslyn Compilers to build -->
+  <Import Project="$(RoslynPropsFile)" Condition="'$(RunningOnUnix)'!='true' and Exists('$(RoslynPropsFile)') and '$(UseRoslynCompilers)'!='false' and '$(RoslynIncompatibleMsbuildVersion)' != 'true'" />
+  <Import Project="$(RoslynPropsFile)" Condition="'$(RunningOnUnix)'=='true' and Exists('$(RoslynPropsFile)') and '$(RoslynIncompatibleMsbuildVersion)' != 'true'"/>
+</Project>
diff --git a/Directory.Build.targets b/Directory.Build.targets
new file mode 100644
index 0000000..e433b23
--- /dev/null
+++ b/Directory.Build.targets
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" InitialTargets="CheckForBuildTools" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+
+  <PropertyGroup>
+    <!--
+    For non-SDK projects that import this file and then import Microsoft.Common.targets,
+    tell Microsoft.Common.targets not to import Directory.Build.targets again
+    -->
+    <ImportDirectoryBuildTargets>false</ImportDirectoryBuildTargets>
+  </PropertyGroup>
+
+  <PropertyGroup>
+    <!--
+    Hack workaround to skip the GenerateCompiledExpressionsTempFile target in
+    Microsoft.WorkflowBuildExtensions.targets target that always runs in VS
+    -->
+    <GenerateCompiledExpressionsTempFilePathForEditing></GenerateCompiledExpressionsTempFilePathForEditing>
+  </PropertyGroup>
+  
+  <!--
+  Hack workaround for not restoring each project. Instead, we turn off all the targets
+  that require a `project.assets.json`, since ours will be empty anyway.
+  -->
+  <Target Name="_ClearResolvePackageAssets"
+          BeforeTargets="AssignProjectConfiguration">
+     <PropertyGroup>
+      <ResolvePackageDependenciesForBuildDependsOn></ResolvePackageDependenciesForBuildDependsOn>
+    </PropertyGroup>
+  </Target>
+
+  <Target Name="CheckForBuildTools">
+    <Error Condition="!Exists('$(ToolsDir)') and '$(OverrideToolsDir)'=='true'"
+           Text="The tools directory [$(ToolsDir)] does not exist. Please run sync in your enlistment to ensure the tools are installed before attempting to build an individual project." />
+    <Error Condition="!Exists('$(ToolsDir)') and '$(OverrideToolsDir)'!='true'"
+           Text="The tools directory [$(ToolsDir)] does not exist. Please run init-tools.cmd in your enlistment to ensure the tools are installed before attempting to build an individual project." />
+  </Target>
+
+  <Import Project="$(ToolsDir)/Build.Common.targets" Condition="Exists('$(ToolsDir)/Build.Common.targets')" />
+</Project>
diff --git a/DotnetCLIVersion.txt b/DotnetCLIVersion.txt
index 8f9174b..6f1c03c 100644
--- a/DotnetCLIVersion.txt
+++ b/DotnetCLIVersion.txt
@@ -1 +1 @@
-2.1.2
\ No newline at end of file
+2.1.401
\ No newline at end of file
diff --git a/Microsoft.Packaging.Tools.Trimming/docs/trimming.md b/Microsoft.Packaging.Tools.Trimming/docs/trimming.md
index 054491b..4c1b222 100644
--- a/Microsoft.Packaging.Tools.Trimming/docs/trimming.md
+++ b/Microsoft.Packaging.Tools.Trimming/docs/trimming.md
@@ -7,7 +7,7 @@ It determines what is used by the application by examining static dependencies o
 Applications which rely on dynamic dependencies, for example using reflection or runtime compilation like ASP.NET MVC, can specify their dynamic dependencies by referencing packages that contain those dependencies or specifying dependent files as *[roots](#roots)*.
 
 ## How to use
-First install the `Microsoft.Packaging.Tools.Trimming` package in your application. Remember to enable Prerelease packages or use the `-pre` flag for `Install-Package`
+First install the `Microsoft.Packaging.Tools.Trimming` package in your application.
 
 You must use *Visual Studio 2017* or later, or *.NET Core command-line (CLI) tools 1.0* or later.
 
@@ -39,10 +39,14 @@ In your project (*.csproj* file) make the following change.
 `@(TrimFilesRootPackages)` -  Additional *root* packages to consider part of the application.  See [roots](#roots).  
 `@(TrimmableFiles)` - Files which should be trimmed from the application.  See [trimmable](#trimmable).  
 `@(TrimmablePackages)` - Packages which should be trimmed from the application.  See [trimmable](#trimmable).  
-`$(TrimFilesPreferNativeImages)` - Prefer a file with the `.ni.dll` extension over a file with the `.dll` extension.  `.ni.dll` files are native images and significantly larger than a managed assembly but will load faster since they don't need to be JIT compiled.  Default is `false`.
-`$(RootPackageReference)` - Set to `false` to indicate that `PackageReferences` should not be considered as *[roots](roots)*.  Default is `true`.
-`$(RootProjectReference)` - Set to `false` to indicate that `ProjectReferences` should not be considered as *[roots](roots)*.  Default is `true`.
-`$(TreatMetaPackagesAsTrimmable)` - When set to `true` indicates that meta-packages (packages without any file assets) should be treated as *[trimmable](#trimmable)*.  Default is `true`.
+`$(TrimFilesPreferNativeImages)` - Prefer a file with the `.ni.dll` extension over a file with the `.dll` extension.  `.ni.dll` files are native images and significantly larger than a managed assembly but will load faster since they don't need to be JIT compiled.  Default is `false`.  
+`$(RootPackageReference)` - Set to `false` to indicate that `PackageReferences` should not be considered as *[roots](#roots)*.  Default is `true`.  
+`$(RootProjectReference)` - Set to `false` to indicate that `ProjectReferences` should not be considered as *[roots](#roots)*.  Default is `true`.  
+`$(TreatMetaPackagesAsTrimmable)` - When set to `true` indicates that meta-packages (packages without any file assets) should be treated as *[trimmable](#trimmable)*.  Default is `true`.  
+`$(TreatMultiPackagesAsTrimmable)` - When set to `true` indicates that multi-packages (packages with more than one file asset) should be treated as *[trimmable](#trimmable)* unless all files are included.  Default is `false`.  
+`$(TreatAllPackagesAsTrimmable)` - When set to `true` indicates that all packages should be treated as *[trimmable](#trimmable)*.  Default is `false`.  Note that this has precedence over `TreatMetaPackagesAsTrimmable` and `TreatMultiPackagesAsTrimmable`.  Setting this to `true` effectively disables all package-graph walking so only static file-dependencies are considered.  
+`$(TrimFilesIncludeRelatedFiles)` - When set to `true` indicates that related files will be included when the file they are related to is included.  Default is `true`. See [related files](#related-files).  
+`$(TrimFilesDirectedGraphFile)` - Set to the path the dependency graph file will be written in DGML format.  
 
 **Examples:**
 - Specify TrimFilesRootFiles to include file `System.IO.Pipes.dll`.
@@ -69,7 +73,7 @@ In your project (*.csproj* file) make the following change.
 </PropertyGroup>
 ```
 
-- Specify RootPackageReference to prefer avoid *rooting* packages directly reference by the project.
+- Specify RootPackageReference to avoid *rooting* packages directly referenced by the project.
 
 ```xml
 <PropertyGroup>
@@ -77,6 +81,25 @@ In your project (*.csproj* file) make the following change.
 </PropertyGroup>
 ```
 
+- Specify RootProjectReference to avoid *rooting* projects directly referenced by the project.
+
+```xml
+<PropertyGroup>
+  <RootProjectReference>false</RootProjectReference>
+</PropertyGroup>
+```
+
+
+- Specify TrimFilesIncludeRelatedFiles as false to omit [related files](#related-files) from the output.
+
+```xml
+<PropertyGroup>
+  <TrimFilesIncludeRelatedFiles>false</TrimFilesIncludeRelatedFiles>
+</PropertyGroup>
+```
+
+
+
 ## How it works
 The trimming task examines all of the binaries and packages that make up your project and constructs a graph of the two that is related.  We start by identifying roots that are included in the application then we traverse the relationships between those to determine if other files or packages should be included in the app.
 
@@ -107,6 +130,9 @@ Not all relationships can be discovered statically.  A file may define relations
 For example:
 Suppose `foo.dll` depends on `somelibrary.dll` but that dependency is dynamic.  The developer of `foo.dll` can specify this dependency by placing a file foo.dll.dependencies next to foo.dll where the content of that file is a single line: `somelibrary.dll`.
 
+#### Related files
+MSBuild locates related files when it resolves assemblies: things like PDBs, XML docs, and pri files.  These are defined by AllowedReferenceRelatedFileExtensions and are added by ResolveAssemblyReferences and represented with OriginalItemSpec pointing to the item they were related to.  We'll include these related files by default when ever the file they are related to is included.
+
 ### Package relationships
 Packages are related to other packages by dependencies.  Files are related to packages if they are contained in a package.
 
diff --git a/Microsoft.Packaging.Tools.Trimming/pkg/Microsoft.Packaging.Tools.Trimming.pkgproj b/Microsoft.Packaging.Tools.Trimming/pkg/Microsoft.Packaging.Tools.Trimming.pkgproj
index 6135e64..a76c02b 100644
--- a/Microsoft.Packaging.Tools.Trimming/pkg/Microsoft.Packaging.Tools.Trimming.pkgproj
+++ b/Microsoft.Packaging.Tools.Trimming/pkg/Microsoft.Packaging.Tools.Trimming.pkgproj
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
 
   <PropertyGroup>
-    <Version>1.0.0</Version>
+    <Version>1.1.0</Version>
     <SkipPackageFileCheck>true</SkipPackageFileCheck>
     <OmitDependencies>true</OmitDependencies>
   </PropertyGroup>
@@ -16,5 +16,5 @@
     </File>
   </ItemGroup>
 
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/DirectedGraphWriter.cs b/Microsoft.Packaging.Tools.Trimming/tasks/DirectedGraphWriter.cs
new file mode 100644
index 0000000..45cd1a2
--- /dev/null
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/DirectedGraphWriter.cs
@@ -0,0 +1,228 @@
+﻿// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+// See the LICENSE file in the project root for more information.
+
+using System;
+using System.Collections.Generic;
+using System.IO;
+using System.Linq;
+using System.Xml.Linq;
+
+namespace Microsoft.DotNet.Build.Tasks
+{
+    internal class DirectedGraphWriter
+    {
+        private static XNamespace s_dgmlns = @"http://schemas.microsoft.com/vs/2009/dgml";
+
+        private const string Background = "Background";
+        private const string Categories = "Categories";
+        private const string Category = "Category";
+        private const string Collapsed = "Collapsed";
+        private const string Condition = "Condition";
+        private const string Contains = "Contains";
+        private const string DataType = "DataType";
+        private const string DirectedGraph = "DirectedGraph";
+        private const string Expanded = "Expanded";
+        private const string Expression = "Expression";
+        private const string FileCategory = "File";
+        private const string FileDependencyCategory = "FileDependency";
+        private const string Group = "Group";
+        private const string GroupLabel = "GroupLabel";
+        private const string Icon = "Icon";
+        private const string Id = "Id";
+        private const string IncludedProperty = "Included";
+        private const string Label = "Label";
+        private const string Link = "Link";
+        private const string Links = "Links";
+        private const string Node = "Node";
+        private const string Nodes = "Nodes";
+        private const string PackageCategory = "Package";
+        private const string PackageDependencyCategory = "PackageDependency";
+        private const string Properties = "Properties";
+        private const string Property = "Property";
+        private const string Root = "Root";
+        private const string RootCategory = "Root";
+        private const string Setter = "Setter";
+        private const string Source = "Source";
+        private const string Stroke = "Stroke";
+        private const string Style = "Style";
+        private const string Styles = "Styles";
+        private const string Target = "Target";
+        private const string TargetType = "TargetType";
+        private const string Value = "Value";
+        private const string ValueLabel = "ValueLabel";
+
+
+        public static void WriteGraph(string graphFilePath, IEnumerable<FileNode> files, IEnumerable<NuGetPackageNode> packages, IEnumerable<FileNode> fileRoots, IEnumerable<NuGetPackageNode> packageRoots)
+        {
+            var doc = new XDocument(new XElement(s_dgmlns + DirectedGraph));
+
+            doc.Root.Add(new XElement(s_dgmlns + Properties,
+                new XElement(s_dgmlns + Property,
+                    new XAttribute(Id, IncludedProperty),
+                    new XAttribute(DataType, "System.Boolean")
+                )));
+
+            doc.Root.Add(new XElement(s_dgmlns + Styles,
+                new XElement(s_dgmlns + Style,
+                    new XAttribute(TargetType, Node),
+                    new XAttribute(GroupLabel, IncludedProperty),
+                    new XAttribute(ValueLabel, true),
+                    new XElement(s_dgmlns + Condition,
+                        new XAttribute(Expression, $"{IncludedProperty}='{true}'")),
+                    new XElement(s_dgmlns + Setter,
+                        new XAttribute(Property, Background),
+                        new XAttribute(Value, "LightBlue"))
+                    ),
+                new XElement(s_dgmlns + Style,
+                    new XAttribute(TargetType, Link),
+                    new XAttribute(GroupLabel, IncludedProperty),
+                    new XAttribute(ValueLabel, true),
+                    new XElement(s_dgmlns + Condition,
+                        new XAttribute(Expression, $"{IncludedProperty}='{true}'")),
+                    new XElement(s_dgmlns + Setter,
+                        new XAttribute(Property, Stroke),
+                        new XAttribute(Value, "LightBlue"))
+                    )
+                ));
+
+            doc.Root.Add(new XElement(s_dgmlns + Categories,
+                new XElement(s_dgmlns + Category,
+                    new XAttribute(Id, FileCategory),
+                    new XAttribute(Icon, FileCategory)),
+                new XElement(s_dgmlns + Category,
+                    new XAttribute(Id, FileDependencyCategory)),
+                new XElement(s_dgmlns + Category,
+                    new XAttribute(Id, PackageCategory)),
+                new XElement(s_dgmlns + Category,
+                    new XAttribute(Id, PackageDependencyCategory)),
+                new XElement(s_dgmlns + Category,
+                    new XAttribute(Id, RootCategory))));
+
+            var nodesElement = new XElement(s_dgmlns + Nodes);
+            var linksElement = new XElement(s_dgmlns + Links);
+            doc.Root.Add(nodesElement);
+            doc.Root.Add(linksElement);
+
+            nodesElement.Add(new XElement(s_dgmlns + Node,
+                    new XAttribute(Id, Root),
+                    new XAttribute(Category, RootCategory),
+                    new XAttribute(IncludedProperty, true)));
+
+            foreach (var fileRoot in fileRoots)
+            {
+                linksElement.Add(new XElement(s_dgmlns + Link,
+                    new XAttribute(Source, Root),
+                    new XAttribute(Target, GetFileId(fileRoot)),
+                    new XAttribute(Category, RootCategory),
+                    new XAttribute(IncludedProperty, true)));
+            }
+
+            foreach (var packageRoot in packageRoots)
+            {
+                linksElement.Add(new XElement(s_dgmlns + Link,
+                    new XAttribute(Source, Root),
+                    new XAttribute(Target, GetPackageId(packageRoot)),
+                    new XAttribute(Category, RootCategory),
+                    new XAttribute(IncludedProperty, true)));
+            }
+
+            foreach (var file in files)
+            {
+                AddFileNode(file, nodesElement, linksElement);
+            }
+
+            foreach (var package in packages)
+            {
+                var packageId = GetPackageId(package);
+
+                nodesElement.Add(new XElement(s_dgmlns + Node,
+                        new XAttribute(Id, packageId),
+                        new XAttribute(Label, package.Id),
+                        new XAttribute(Group, (package.IsIncluded || package.Files.Any(f => f.IsIncluded)) ? Expanded : Collapsed),
+                        new XAttribute(Category, PackageCategory),
+                        new XAttribute(IncludedProperty, package.IsIncluded)));
+
+                foreach (var dependency in package.Dependencies)
+                {
+                    bool isIncluded = package.IsIncluded && dependency.IsIncluded;
+
+                    linksElement.Add(new XElement(s_dgmlns + Link,
+                        new XAttribute(Source, packageId),
+                        new XAttribute(Target, GetPackageId(dependency)),
+                        new XAttribute(Category, PackageDependencyCategory),
+                        new XAttribute(IncludedProperty, isIncluded)));
+                }
+
+                foreach(var file in package.Files)
+                {
+                    linksElement.Add(new XElement(s_dgmlns + Link,
+                        new XAttribute(Source, packageId),
+                        new XAttribute(Target, GetFileId(file)),
+                        new XAttribute(Category, Contains)));
+                }
+            }
+
+            var directory = Path.GetDirectoryName(graphFilePath);
+
+            if (!string.IsNullOrEmpty(directory))
+            {
+                Directory.CreateDirectory(directory);
+            }
+
+            using (var file = File.Create(graphFilePath))
+            {
+                doc.Save(file);
+            }
+        }
+
+        private static void AddFileNode(FileNode file, XElement nodesElement, XElement linksElement)
+        {
+            var fileId = GetFileId(file);
+
+            nodesElement.Add(new XElement(s_dgmlns + Node,
+                    new XAttribute(Id, fileId),
+                    new XAttribute(Label, file.Name),
+                    new XAttribute(Category, FileCategory),
+                    new XAttribute(IncludedProperty, file.IsIncluded)));
+
+            foreach (var dependency in file.Dependencies)
+            {
+                bool isIncluded = file.IsIncluded && dependency.IsIncluded;
+
+                linksElement.Add(new XElement(s_dgmlns + Link,
+                    new XAttribute(Source, fileId),
+                    new XAttribute(Target, GetFileId(dependency)),
+                    new XAttribute(Category, FileDependencyCategory),
+                    new XAttribute(IncludedProperty, isIncluded)));
+
+                if (file.IsAggregate)
+                {
+                    AddFileNode(dependency, nodesElement, linksElement);
+                }
+            }
+
+            foreach (var relatedFile in file.RelatedFiles)
+            {
+                bool isIncluded = file.IsIncluded && relatedFile.IsIncluded;
+
+                linksElement.Add(new XElement(s_dgmlns + Link,
+                    new XAttribute(Source, fileId),
+                    new XAttribute(Target, GetFileId(relatedFile)),
+                    new XAttribute(Category, FileDependencyCategory),
+                    new XAttribute(IncludedProperty, isIncluded)));
+            }
+        }
+
+        private static string GetFileId(FileNode file)
+        {
+            return "f:" + file.SourceFile ?? file.Name;
+        }
+
+        private static string GetPackageId(NuGetPackageNode package)
+        {
+            return "p:" + package.Id;
+        }
+
+    }
+}
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/FileNode.cs b/Microsoft.Packaging.Tools.Trimming/tasks/FileNode.cs
index b1ade59..90f6838 100644
--- a/Microsoft.Packaging.Tools.Trimming/tasks/FileNode.cs
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/FileNode.cs
@@ -6,6 +6,7 @@ using Microsoft.Build.Framework;
 using System;
 using System.Collections.Generic;
 using System.IO;
+using System.Linq;
 using System.Reflection.Metadata;
 using System.Reflection.Metadata.Ecma335;
 using System.Reflection.PortableExecutable;
@@ -15,6 +16,7 @@ namespace Microsoft.DotNet.Build.Tasks
     internal class FileNode : IIsIncluded
     {
         private ISet<FileNode> dependencies;
+        private ISet<FileNode> relatedFiles = new HashSet<FileNode>();
         private bool followTypeForwards;
         private IDictionary<string, FileNode> typeForwards = new Dictionary<string, FileNode>();
 
@@ -22,6 +24,12 @@ namespace Microsoft.DotNet.Build.Tasks
         internal const string NuGetPackageVersionMetadata = "NuGetPackageVersion";
         internal const string AdditionalDependenciesFileSuffix = ".dependencies";
 
+        private FileNode(string fileName)
+        {
+            Name = fileName;
+            dependencies = new HashSet<FileNode>();
+        }
+
         public FileNode(ITaskItem fileItem, IDictionary<string, NuGetPackageNode> allPackages)
         {
             Name = fileItem.GetMetadata("Filename") + fileItem.GetMetadata("Extension");
@@ -50,22 +58,61 @@ namespace Microsoft.DotNet.Build.Tasks
             }
         }
 
+        public static FileNode CreateAggregateFileNode(FileNode fileNode)
+        {
+            var aggregateNode = new FileNode(fileNode.Name);
+            aggregateNode.AddCandidateImplementation(fileNode);
+            return aggregateNode;
+        }
+
+        public bool IsAggregate { get { return OriginalItem == null; } }
         public bool IsIncluded { get; set; }
+        public bool IsMissing { get; set; }
         public string Name { get; }
         public ITaskItem OriginalItem { get; }
         public string PackageId { get; }
         public string SourceFile { get; }
         public NuGetPackageNode Package { get; }
-        public IEnumerable<FileNode> Dependencies { get { return dependencies; } }
+        public IEnumerable<FileNode> Dependencies { get { return dependencies ?? Enumerable.Empty<FileNode>(); } }
+        public IEnumerable<FileNode> RelatedFiles { get { return relatedFiles; } }
+
+        public override string ToString()
+        {
+            return Name;
+        }
 
         public void PopulateDependencies(IDictionary<string, FileNode> allFiles, bool preferNativeImage, ILog log)
         {
-            if (dependencies == null)
+            if (IsAggregate)
+            {
+                // dependencies of aggregate nodes will not appear in allFiles, so pass through
+                // dependency population
+                foreach(var dependency in dependencies)
+                {
+                    dependency.PopulateDependencies(allFiles, preferNativeImage, log);
+                }
+            }
+            else  if (dependencies == null)
             {
                 PopulateDependenciesInternal(allFiles, preferNativeImage, log, null);
             }
         }
 
+        public void AddCandidateImplementation(FileNode candidate)
+        {
+            if (IsAggregate != true)
+            {
+                throw new InvalidOperationException($"{nameof(AddCandidateImplementation)} can only be called on aggregate FileNodes.");
+            }
+
+            if (candidate.Name != Name)
+            {
+                throw new ArgumentException($"{candidate.Name} does not match this aggregate {nameof(FileNode)}'s {nameof(Name)}: {Name}.", nameof(candidate));
+            }
+
+            dependencies.Add(candidate);
+        }
+
         private void PopulateDependenciesInternal(IDictionary<string, FileNode> allFiles, bool preferNativeImage, ILog log, Stack<FileNode> stack)
         {
             if (stack == null)
@@ -73,20 +120,107 @@ namespace Microsoft.DotNet.Build.Tasks
                 stack = new Stack<FileNode>();
             }
 
-            stack.Push(this);
+            if (stack.Contains(this))
+            {
+                log.LogMessage($"Cycle detected: {String.Join(" -> ", stack)} -> {this}");
+            }
 
             if (dependencies != null)
             {
-                // re-entrant call indicates a cycle, bail
-                log.LogMessage($"Cycle detected: {String.Join(" -> ", stack)}");
-                stack.Pop();
                 return;
             }
 
+            stack.Push(this);
+
             dependencies = new HashSet<FileNode>();
+            
+            if (File.Exists(SourceFile))
+            {
+                PopulateDependenciesFromMetadata(allFiles, preferNativeImage, log, stack);
+            }
+            else
+            {
+                IsMissing = true;
+            }
 
-            try
+            // allow for components to specify their dependencies themselves, by placing a file next to their source file.
+            var additionalDependenciesFile = SourceFile + AdditionalDependenciesFileSuffix;
+
+            if (File.Exists(additionalDependenciesFile))
+            {
+                foreach (var additionalDependency in File.ReadAllLines(additionalDependenciesFile))
+                {
+                    if (additionalDependency.Length == 0 || additionalDependency[0] == '#')
+                    {
+                        continue;
+                    }
+
+                    FileNode additionalDependencyFile;
+                    if (allFiles.TryGetValue(additionalDependency, out additionalDependencyFile))
+                    {
+                        dependencies.Add(additionalDependencyFile);
+                    }
+                    else
+                    {
+                        log.LogMessage(LogImportance.Low, $"Could not locate explicit dependency {additionalDependency} of {SourceFile} specified in {additionalDependenciesFile}.");
+                    }
+                }
+            }
+
+            // Files may be related to other files via OriginalItemSpec
+            if (OriginalItem != null)
             {
+                var relatedToPath = OriginalItem.GetMetadata("OriginalItemSpec");
+
+                if (!String.IsNullOrEmpty(relatedToPath))
+                {
+                    var relatedToFileName = Path.GetFileName(relatedToPath);
+
+                    FileNode relatedTo = null;
+                    if (allFiles.TryGetValue(relatedToFileName, out relatedTo))
+                    {
+                        if (relatedTo.IsAggregate)
+                        {
+                            bool found = false;
+                            foreach (var dependency in relatedTo.Dependencies)
+                            {
+                                if (dependency.SourceFile.Equals(relatedToPath, StringComparison.OrdinalIgnoreCase))
+                                {
+                                    found = true;
+                                    dependency.relatedFiles.Add(this);
+                                    break;
+                                }
+                            }
+
+                            if (!found)
+                            {
+                                log.LogMessage(LogImportance.Low, $"Could not locate explicit parent {relatedToPath} of {SourceFile} specified in OriginalItemSpec.  Considered {string.Join(";", relatedTo.Dependencies.Select(d => d.SourceFile))} but they did not match");
+                            }
+                        }
+                        else if (relatedTo.SourceFile.Equals(relatedToPath, StringComparison.OrdinalIgnoreCase))
+                        {
+                            relatedTo.relatedFiles.Add(this);
+                        }
+                        else
+                        {
+                            log.LogMessage(LogImportance.Low, $"Could not locate explicit parent {relatedToPath} of {SourceFile} specified in OriginalItemSpec.  Considered {relatedTo.SourceFile} but it didn't match.");
+                        }
+                    }
+                    
+                    if (relatedTo == null)
+                    {
+                        log.LogMessage(LogImportance.Low, $"Could not locate explicit parent {relatedToPath} of {SourceFile} specified in OriginalItemSpec.");
+                    }
+                }
+            }
+
+            stack.Pop();
+        }
+
+        private void PopulateDependenciesFromMetadata(IDictionary<string, FileNode> allFiles, bool preferNativeImage, ILog log, Stack<FileNode> stack)
+        {
+            try
+            { 
                 using (var peReader = new PEReader(new FileStream(SourceFile, FileMode.Open, FileAccess.Read, FileShare.Delete | FileShare.Read)))
                 {
                     if (peReader.HasMetadata)
@@ -248,32 +382,6 @@ namespace Microsoft.DotNet.Build.Tasks
             {
                 // not a PE
             }
-
-            // allow for components to specify their dependencies themselves, by placing a file next to their source file.
-            var additionalDependenciesFile = SourceFile + AdditionalDependenciesFileSuffix;
-
-            if (File.Exists(additionalDependenciesFile))
-            {
-                foreach(var additionalDependency in File.ReadAllLines(additionalDependenciesFile))
-                {
-                    if (additionalDependency.Length == 0 || additionalDependency[0] == '#')
-                    {
-                        continue;
-                    }
-
-                    FileNode additionalDependencyFile;
-                    if (allFiles.TryGetValue(additionalDependency, out additionalDependencyFile))
-                    {
-                        dependencies.Add(additionalDependencyFile);
-                    }
-                    else
-                    {
-                        log.LogMessage(LogImportance.Low, $"Could not locate explicit dependency {additionalDependency} of {SourceFile} specified in {additionalDependenciesFile}.");
-                    }
-                }
-            }
-
-            stack.Pop();
         }
 
         private FileNode TryGetFileForReference(string referenceName, IDictionary<string, FileNode> allFiles, bool preferNativeImage)
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/BuildErrorException.cs b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/BuildErrorException.cs
new file mode 100644
index 0000000..28b6d25
--- /dev/null
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/BuildErrorException.cs
@@ -0,0 +1,32 @@
+﻿// Copyright (c) .NET Foundation and contributors. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+using System;
+using System.Globalization;
+
+namespace Microsoft.NET.Build.Tasks
+{
+    /// <summary>
+    /// Represents an error that is neither avoidable in all cases nor indicative of a bug in this library.
+    /// It will be logged as a plain build error without the exception type or stack.
+    /// </summary>
+    internal class BuildErrorException : Exception
+    {
+        public BuildErrorException()
+        {
+        }
+
+        public BuildErrorException(string message) : base(message)
+        {
+        }
+
+        public BuildErrorException(string message, Exception innerException) : base(message, innerException)
+        {
+        }
+
+        public BuildErrorException(string format, params string[] args)
+            : this(string.Format(CultureInfo.CurrentCulture, format, args))
+        {
+        }
+    }
+}
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/LockFileCache.cs b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/LockFileCache.cs
new file mode 100644
index 0000000..5e193b6
--- /dev/null
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.NET.Build.Tasks/LockFileCache.cs
@@ -0,0 +1,68 @@
+﻿// Copyright (c) .NET Foundation and contributors. All rights reserved.
+// Licensed under the MIT license. See LICENSE file in the project root for full license information.
+
+using System;
+using System.IO;
+using Microsoft.Build.Framework;
+using NuGet.Common;
+using NuGet.ProjectModel;
+
+namespace Microsoft.NET.Build.Tasks
+{
+    internal class LockFileCache
+    {
+        private IBuildEngine4 _buildEngine;
+        private static string taskObjectPrefix = null;
+
+        public LockFileCache(IBuildEngine4 buildEngine)
+        {
+            _buildEngine = buildEngine;
+        }
+
+        public LockFile GetLockFile(string path)
+        {
+            if (!Path.IsPathRooted(path))
+            {
+                throw new BuildErrorException("Assets file path '{0}' is not rooted. Only full paths are supported.", path);
+            }
+
+            string lockFileKey = GetTaskObjectKey(path);
+
+            LockFile result;
+            object existingLockFileTaskObject = _buildEngine.GetRegisteredTaskObject(lockFileKey, RegisteredTaskObjectLifetime.Build);
+            if (existingLockFileTaskObject == null)
+            {
+                result = LoadLockFile(path);
+
+                _buildEngine.RegisterTaskObject(lockFileKey, result, RegisteredTaskObjectLifetime.Build, true);
+            }
+            else
+            {
+                result = (LockFile)existingLockFileTaskObject;
+            }
+
+            return result;
+        }
+
+        private static string GetTaskObjectKey(string lockFilePath)
+        {
+            if (taskObjectPrefix == null)
+            {
+                taskObjectPrefix = typeof(LockFile).AssemblyQualifiedName;
+            }
+
+            return $"{taskObjectPrefix}:{lockFilePath}";
+        }
+
+        private LockFile LoadLockFile(string path)
+        {
+            if (!File.Exists(path))
+            {
+                throw new BuildErrorException("Assets file '{0}' not found. Run a NuGet package restore to generate this file.", path);
+            }
+
+            // TODO - https://github.com/dotnet/sdk/issues/18 adapt task logger to Nuget Logger
+            return LockFileUtilities.GetLockFile(path, NullLogger.Instance);
+        }
+    }
+}
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.builds b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.builds
index 2642220..3ac76a2 100644
--- a/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.builds
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.builds
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <PropertyGroup>
     <!-- restore happens during build and these projects share a 
          lock file, don't build them in parallel -->
@@ -9,7 +9,7 @@
   <ItemGroup>
     <Project Include="$(MSBuildThisFileDirectory)$(MSBuildProjectName).csproj" />
     <Project Include="$(MSBuildThisFileDirectory)$(MSBuildProjectName).csproj">
-      <TargetGroup>net451</TargetGroup>
+      <TargetGroup>net46</TargetGroup>
     </Project>
   </ItemGroup>
   <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.traversal.targets))\dir.traversal.targets" />
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.csproj b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.csproj
index 318bf87..52c170a 100644
--- a/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.csproj
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.csproj
@@ -1,20 +1,28 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <OutputType>Library</OutputType>
+    <TargetFramework>netstandard1.5</TargetFramework>
     <NuGetTargetMoniker>.NETStandard,Version=v1.5</NuGetTargetMoniker>
     <NuGetTargetMonikerShort>netstandard1.5</NuGetTargetMonikerShort>
-    <NuGetTargetMoniker Condition="'$(TargetGroup)' == 'net451'">.NETFramework,Version=v4.5.1</NuGetTargetMoniker>
-    <NuGetTargetMonikerShort Condition="'$(TargetGroup)' == 'net451'">net451</NuGetTargetMonikerShort>
+    <NuGetTargetMoniker Condition="'$(TargetGroup)' == 'net46'">.NETFramework,Version=v4.6</NuGetTargetMoniker>
+    <NuGetTargetMonikerShort Condition="'$(TargetGroup)' == 'net46'">net46</NuGetTargetMonikerShort>
     <CLSCompliant>false</CLSCompliant>
     <ProjectGuid>{65E58605-AE96-46C2-8C6C-F28A5EB9B565}</ProjectGuid>
     <RestoreOutputPath>$(IntermediateOutputPath)$(TargetGroup)</RestoreOutputPath>
     <ContainsPackageReferences>true</ContainsPackageReferences>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)' == 'netstandard1.5_Debug'" />
-  <PropertyGroup Condition="'$(Configuration)' == 'net451_Debug'" />
+
+  <!-- Disable code paths that require project.assets.json files to be present or to be computed. -->
+  <PropertyGroup>
+    <GenerateDependencyFile>false</GenerateDependencyFile>
+    <ComputeNETCoreBuildOutputFiles>false</ComputeNETCoreBuildOutputFiles>
+    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>
+  </PropertyGroup>
+
   <ItemGroup>
+    <Compile Include="Microsoft.NET.Build.Tasks\BuildErrorException.cs" />
+    <Compile Include="Microsoft.NET.Build.Tasks\LockFileCache.cs" />
+    <Compile Include="DirectedGraphWriter.cs" />
     <Compile Include="ILog.cs" />
     <Compile Include="MSBuildLog.cs" />
     <Compile Include="NuGetUtilities.cs" />
@@ -25,14 +33,14 @@
     <Compile Include="TrimFiles.cs" />
   </ItemGroup>
   <ItemGroup>
-    <PackageReference Include="NETStandard.Library">
-      <Version>1.6.0</Version>
-    </PackageReference>
     <PackageReference Include="System.Reflection.Metadata">
       <Version>1.3.0</Version>
     </PackageReference>
+    <PackageReference Include="NuGet.ProjectModel">
+      <Version>4.6.0</Version>
+    </PackageReference>
   </ItemGroup>
-  <ItemGroup Condition="'$(TargetGroup)' != 'net451'">
+  <ItemGroup Condition="'$(TargetGroup)' != 'net46'">
     <PackageReference Include="Microsoft.Build">
       <Version>14.3.0-prerelease02</Version>
     </PackageReference>
@@ -54,8 +62,8 @@
     </PackageReference>
     <PackageDestination Include="build" />
   </ItemGroup>
-  <ItemGroup Condition="'$(TargetGroup)' == 'net451'">
-    <PackageReference Include="Microsoft.TargetingPack.NETFramework.v4.5.1">
+  <ItemGroup Condition="'$(TargetGroup)' == 'net46'">
+    <PackageReference Include="Microsoft.TargetingPack.NETFramework.v4.6">
       <Version>1.0.1</Version>
     </PackageReference>
     <TargetingPackReference Include="System" />
@@ -65,16 +73,26 @@
     <TargetingPackReference Include="Microsoft.Build.Utilities.v4.0" />
     <TargetingPackReference Include="System.Runtime" />
     <TargetingPackReference Include="System.IO" />
+    <TargetingPackReference Include="System.Xml" />
+    <TargetingPackReference Include="System.Xml.Linq" />
     <PackageDestination Include="build/desktop" />
   </ItemGroup>
   <ItemGroup>
     <PackageDependencyId Include="System.Reflection.Metadata" />
     <PackageDependencyId Include="System.Collections.Immutable" />
+    <PackageDependencyId Include="Newtonsoft.Json" />
+    <PackageDependencyId Include="NuGet.Common" />
+    <PackageDependencyId Include="NuGet.Configuration" />
+    <PackageDependencyId Include="NuGet.Frameworks" />
+    <PackageDependencyId Include="NuGet.LibraryModel" />
+    <PackageDependencyId Include="NuGet.Packaging" />
+    <PackageDependencyId Include="NuGet.Packaging.Core" />
+    <PackageDependencyId Include="NuGet.ProjectModel" />
+    <PackageDependencyId Include="NuGet.Versioning" />
   </ItemGroup>
   <ItemGroup>
     <None Include="targets\Microsoft.Packaging.Tools.Trimming.targets" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 
   <Target Name="PackageAdditionalDependencies" BeforeTargets="GetFilesToPackage" DependsOnTargets="ResolveReferences">
     <ItemGroup>
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.sln b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.sln
new file mode 100644
index 0000000..79e3e94
--- /dev/null
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/Microsoft.Packaging.Tools.Trimming.Tasks.sln
@@ -0,0 +1,30 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 15
+VisualStudioVersion = 15.0.27130.2036
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Microsoft.Packaging.Tools.Trimming.Tasks", "Microsoft.Packaging.Tools.Trimming.Tasks.csproj", "{65E58605-AE96-46C2-8C6C-F28A5EB9B565}"
+EndProject
+Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "Solution Items", "Solution Items", "{C9EAA2B7-FEB6-4A5C-B762-5D8C7CAA64F3}"
+	ProjectSection(SolutionItems) = preProject
+		..\docs\trimming.md = ..\docs\trimming.md
+	EndProjectSection
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		net451_Debug|Any CPU = net451_Debug|Any CPU
+		netstandard1.5_Debug|Any CPU = netstandard1.5_Debug|Any CPU
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{65E58605-AE96-46C2-8C6C-F28A5EB9B565}.net451_Debug|Any CPU.ActiveCfg = net451_Debug|Any CPU
+		{65E58605-AE96-46C2-8C6C-F28A5EB9B565}.net451_Debug|Any CPU.Build.0 = net451_Debug|Any CPU
+		{65E58605-AE96-46C2-8C6C-F28A5EB9B565}.netstandard1.5_Debug|Any CPU.ActiveCfg = netstandard1.5_Debug|Any CPU
+		{65E58605-AE96-46C2-8C6C-F28A5EB9B565}.netstandard1.5_Debug|Any CPU.Build.0 = netstandard1.5_Debug|Any CPU
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+	GlobalSection(ExtensibilityGlobals) = postSolution
+		SolutionGuid = {BACC79BF-C9C9-4F9B-8209-1398E99299F9}
+	EndGlobalSection
+EndGlobal
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/NuGetPackageNode.cs b/Microsoft.Packaging.Tools.Trimming/tasks/NuGetPackageNode.cs
index 810d41e..2545a86 100644
--- a/Microsoft.Packaging.Tools.Trimming/tasks/NuGetPackageNode.cs
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/NuGetPackageNode.cs
@@ -27,6 +27,7 @@ namespace Microsoft.DotNet.Build.Tasks
         public string Version { get; }
         public bool IsProject { get; }
         public bool IsMetaPackage { get { return Files.Count == 0; } }
+        public bool IsMultiPackage { get { return Files.Count > 1; } }
         public IEnumerable<NuGetPackageNode> Dependencies { get { return _dependencies; } }
         public IList<FileNode> Files { get; } = new List<FileNode>();
 
@@ -46,5 +47,10 @@ namespace Microsoft.DotNet.Build.Tasks
                 dependencyNode._dependencies.Add(this);
             }
         }
+
+        public override string ToString()
+        {
+            return Id;
+        }
     }
 }
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/TrimFiles.cs b/Microsoft.Packaging.Tools.Trimming/tasks/TrimFiles.cs
index 6193486..3e0febf 100644
--- a/Microsoft.Packaging.Tools.Trimming/tasks/TrimFiles.cs
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/TrimFiles.cs
@@ -4,6 +4,8 @@
 
 using Microsoft.Build.Framework;
 using Microsoft.Build.Utilities;
+using Microsoft.NET.Build.Tasks;
+using NuGet.Frameworks;
 using System;
 using System.Collections.Generic;
 using System.IO;
@@ -47,10 +49,14 @@ namespace Microsoft.DotNet.Build.Tasks
         [Required]
         public ITaskItem[] PackageDependencies { get; set; }
 
+        /// <summary>
+        /// Project assets file.  In case of missing package dependencies this will be used to load the package graph.
+        /// </summary>
+        public string ProjectAssetsFile { get; set; }
+
         /// <summary>
         /// Target framework to use when determining package dependencies.  Should be long form, IE: .NETCoreApp,Version=v1.0
         /// </summary>
-        [Required]
         public string TargetFramework { get; set; }
 
         /// <summary>
@@ -85,6 +91,23 @@ namespace Microsoft.DotNet.Build.Tasks
         /// </summary>
         public bool TreatMetaPackagesAsTrimmable { get; set; }
 
+        /// <summary>
+        /// True to treat packages with more than one file as trimmable unless all files have been included.
+        /// </summary>
+        public bool TreatMultiPackagesAsTrimmable { get; set; }
+
+        /// <summary>
+        /// True to treat all packages as trimmable.
+        /// </summary>
+        public bool TreatAllPackagesAsTrimmable { get; set; }
+
+        /// <summary>
+        /// True to include files that are associated via OriginalItemSpec relation (though not necessarily any other reference).
+        /// </summary>
+        public bool IncludeRelatedFiles { get; set; }
+
+        public string DirectedGraphFile { get; set; }
+
         /// <summary>
         /// A subset of ReferenceCopyLocalPaths after trimming has been done.
         /// </summary>
@@ -104,6 +127,11 @@ namespace Microsoft.DotNet.Build.Tasks
             // Build the package graph
             var packages = GetPackagesFromPackageDependencies();
 
+            if (packages.Count == 0)
+            {
+                packages = GetPackagesFromAssetsFile();
+            }
+
             // Build file graph
             var files = GetFiles(packages);
 
@@ -112,21 +140,36 @@ namespace Microsoft.DotNet.Build.Tasks
 
             Queue<NuGetPackageNode> packageRoots = GetPackageRoots(packages, trimmable);
             Queue<FileNode> fileRoots = GetFileRoots(files, trimmable);
-            
+            var originalPackageRoots = packageRoots.ToArray();
+            var originalFileRoots = fileRoots.ToArray();
+
             while (packageRoots.Count > 0 || fileRoots.Count > 0)
             {
                 while (fileRoots.Count > 0)
                 {
                     var fileNode = fileRoots.Dequeue();
 
+                    if (fileNode.IsMissing)
+                    {
+                        Log.LogWarning($"File {fileNode.SourceFile} was included through references or roots but the file was missing.  It's dependencies will also be missing from the trimmed output.");
+                    }
+
                     foreach(var file in fileNode.Dependencies.Where(f => !trimmable.IsFileTrimmable(f.Name)))
                     {
-                        IncludeNode(fileRoots, file);
+                        IncludeNode(fileRoots, file, fileNode);
+                    }
+
+                    if (IncludeRelatedFiles)
+                    {
+                        foreach (var file in fileNode.RelatedFiles.Where(f => !trimmable.IsFileTrimmable(f.Name)))
+                        {
+                            IncludeNode(fileRoots, file, fileNode);
+                        }
                     }
 
                     if (fileNode.Package != null && !IsPackageTrimmable(fileNode.Package))
                     {
-                        IncludeNode(packageRoots, fileNode.Package);
+                        IncludeNode(packageRoots, fileNode.Package, fileNode);
                     }
                 }
 
@@ -136,12 +179,12 @@ namespace Microsoft.DotNet.Build.Tasks
 
                     foreach(var dependency in packageNode.Dependencies.Where(d => !IsPackageTrimmable(d)))
                     {
-                        IncludeNode(packageRoots, dependency);
+                        IncludeNode(packageRoots, dependency, packageNode);
                     }
 
                     foreach(var file in packageNode.Files.Where(f => !trimmable.IsFileTrimmable(f.Name)))
                     {
-                        IncludeNode(fileRoots, file);
+                        IncludeNode(fileRoots, file, packageNode);
                     }
                 }
             }
@@ -152,6 +195,11 @@ namespace Microsoft.DotNet.Build.Tasks
 
             LogResults(files.Values);
 
+            if (!string.IsNullOrEmpty(DirectedGraphFile))
+            {
+                DirectedGraphWriter.WriteGraph(DirectedGraphFile, files.Values, packages.Values, originalFileRoots, originalPackageRoots);
+            }
+
             return !Log.HasLoggedErrors;
         }
 
@@ -173,13 +221,13 @@ namespace Microsoft.DotNet.Build.Tasks
                 }
             }
 
-            Log.LogMessage(MessageImportance.High, $"Trimmed {numExcluded} out of {numExcluded + numIncluded} files for a savings of {(double)sizeExcluded / (1024*1024):0.##} MB");
+            Log.LogMessage(MessageImportance.High, $"Trimmed {numExcluded} out of {numExcluded + numIncluded} files for a saving of {(double)sizeExcluded / (1024*1024):0.##} MB");
             Log.LogMessage(MessageImportance.High, $"Final app size is {(double)sizeIncluded / (1024 * 1024):0.##} MB");
         }
 
         private long GetFileSize(FileNode file)
         {
-            return new FileInfo(file.SourceFile).Length;
+            return string.IsNullOrEmpty(file.SourceFile) ? 0 : new FileInfo(file.SourceFile).Length;
         }
 
         Queue<NuGetPackageNode> GetPackageRoots(IDictionary<string, NuGetPackageNode> packages, Trimmable trimmable)
@@ -201,7 +249,7 @@ namespace Microsoft.DotNet.Build.Tasks
 
                     if (!IsPackageTrimmable(rootPackage))
                     {
-                        IncludeNode(packageRootQueue, rootPackage);
+                        IncludeRoot(packageRootQueue, rootPackage);
                     }
                 }
             }
@@ -236,7 +284,7 @@ namespace Microsoft.DotNet.Build.Tasks
                 FileNode rootFile;
                 if (files.TryGetValue(rootFilename, out rootFile))
                 {
-                    IncludeNode(fileRootQueue, rootFile);
+                    IncludeRoot(fileRootQueue, rootFile);
                 }
                 else
                 {
@@ -251,6 +299,12 @@ namespace Microsoft.DotNet.Build.Tasks
         {
             Dictionary<string, NuGetPackageNode> packages = new Dictionary<string, NuGetPackageNode>(StringComparer.OrdinalIgnoreCase);
 
+            if (string.IsNullOrEmpty(TargetFramework) && PackageDependencies?.Length > 0)
+            {
+                Log.LogError($"{nameof(TargetFramework)} was not specified and is required when {nameof(PackageDependencies)} are present.");
+                return packages;
+            }
+
             var target = TargetFramework;
 
             if (!string.IsNullOrEmpty(RuntimeIdentifier))
@@ -270,15 +324,61 @@ namespace Microsoft.DotNet.Build.Tasks
                 var parentPackage = packageDepedency.GetMetadata("ParentPackage");
                 var childPackage = packageDepedency.ItemSpec;
 
-                var parentNode = GetOrCreatePackageNode(packages, parentPackage);
+
                 var childNode = GetOrCreatePackageNode(packages, childPackage);
 
+                var parentNode = GetOrCreatePackageNode(packages, parentPackage);
+                if (string.IsNullOrEmpty(parentPackage))
+                {
+                    continue;
+                }
+
                 parentNode.AddDependency(childNode);
             }
 
             return packages;
         }
 
+        internal IDictionary<string, NuGetPackageNode> GetPackagesFromAssetsFile()
+        {
+            Dictionary<string, NuGetPackageNode> packages = new Dictionary<string, NuGetPackageNode>(StringComparer.OrdinalIgnoreCase);
+
+            if (string.IsNullOrEmpty(ProjectAssetsFile))
+            {
+                return packages;
+            }
+
+            if (string.IsNullOrEmpty(TargetFramework))
+            {
+                Log.LogError($"{nameof(TargetFramework)} was not specified and is required when {nameof(ProjectAssetsFile)} is present.");
+                return packages;
+            }
+
+            var lockFile = new LockFileCache(BuildEngine4).GetLockFile(ProjectAssetsFile);
+            var lockFileTarget = lockFile.GetTarget(NuGetFramework.Parse(TargetFramework), RuntimeIdentifier);
+
+            if (lockFileTarget == null)
+            {
+                var targetString = string.IsNullOrEmpty(RuntimeIdentifier) ? TargetFramework : $"{TargetFramework}/{RuntimeIdentifier}";
+                Log.LogError($"Missing target section {targetString} from assets file {ProjectAssetsFile}.  Ensure you have restored this project previously.");
+                return packages;
+            }
+            
+            foreach (var library in lockFileTarget.Libraries)
+            {
+                var parentNode = GetOrCreatePackageNode(packages, library.Name);
+
+                foreach(var dependency in library.Dependencies)
+                {
+                    var childNode = GetOrCreatePackageNode(packages, dependency.Id);
+
+                    parentNode.AddDependency(childNode);
+                }
+            }
+
+            return packages;
+        }
+
         private static NuGetPackageNode GetOrCreatePackageNode(IDictionary<string, NuGetPackageNode> packages, string package)
         {
             string id, version;
@@ -307,14 +407,31 @@ namespace Microsoft.DotNet.Build.Tasks
             foreach(var runtimeItem in runtimeItems)
             {
                 var fileNode = new FileNode(runtimeItem, packages);
-                files.Add(fileNode.Name, fileNode);
+
+                FileNode existingNode;
+
+                if (files.TryGetValue(fileNode.Name, out existingNode))
+                {
+                    // if there is any duplicate file we'll replace it with an 'imaginary' aggregate node that
+                    // depends on the 'real' duplicate nodes.
+                    if (!existingNode.IsAggregate)
+                    {
+                        files[fileNode.Name] = existingNode = FileNode.CreateAggregateFileNode(existingNode);
+                    }
+
+                    existingNode.AddCandidateImplementation(fileNode);
+                }
+                else
+                {
+                    files.Add(fileNode.Name, fileNode);
+                }
             }
 
             // root files are likely not in the RuntimeItems
             foreach (var rootFile in RootFiles)
             {
                 var fileNode = new FileNode(rootFile, packages);
-                if (!files.ContainsKey(fileNode.Name)  && File.Exists(fileNode.SourceFile))
+                if (!files.ContainsKey(fileNode.Name) && File.Exists(fileNode.SourceFile))
                 {
                     files.Add(fileNode.Name, fileNode);
                 }
@@ -331,11 +448,49 @@ namespace Microsoft.DotNet.Build.Tasks
 
         private bool IsPackageTrimmable(NuGetPackageNode package)
         {
-            return trimmable.IsPackageTrimmable(package.Id) ||
-                (TreatMetaPackagesAsTrimmable && package.IsMetaPackage);
+            return TreatAllPackagesAsTrimmable || 
+                trimmable.IsPackageTrimmable(package.Id) ||
+                (TreatMetaPackagesAsTrimmable && package.IsMetaPackage) ||
+                (TreatMultiPackagesAsTrimmable && package.IsMultiPackage && package.Files.Any(f => !f.IsIncluded));
+        }
+
+        private void IncludeRoot(Queue<FileNode> queue, FileNode root)
+        {
+            Log.LogMessage(MessageImportance.Low, $"Including root file {root}.");
+            QueueNode(queue, root);
+        }
+
+        private void IncludeRoot(Queue<NuGetPackageNode> queue, NuGetPackageNode root)
+        {
+            Log.LogMessage(MessageImportance.Low, $"Including root package {root}.");
+            QueueNode(queue, root);
+        }
+
+        private void IncludeNode(Queue<FileNode> queue, FileNode child, FileNode parent)
+        {
+            Log.LogMessage(MessageImportance.Low, $"Including file {child} referenced by file {parent}.");
+            QueueNode(queue, child);
+        }
+
+        private void IncludeNode(Queue<NuGetPackageNode> queue, NuGetPackageNode child, FileNode parent)
+        {
+            Log.LogMessage(MessageImportance.Low, $"Including package {child} since it contains file {parent}.");
+            QueueNode(queue, child);
+        }
+
+        private void IncludeNode(Queue<FileNode> queue, FileNode child, NuGetPackageNode parent)
+        {
+            Log.LogMessage(MessageImportance.Low, $"Including file {child} part of package {parent}.");
+            QueueNode(queue, child);
+        }
+
+        private void IncludeNode(Queue<NuGetPackageNode> queue, NuGetPackageNode child, NuGetPackageNode parent)
+        {
+            Log.LogMessage(MessageImportance.Low, $"Including package {child} referenced by package {parent}.");
+            QueueNode(queue, child);
         }
 
-        private static void IncludeNode<T>(Queue<T> queue, T node) where T : IIsIncluded
+        private static void QueueNode<T>(Queue<T> queue, T node) where T : IIsIncluded
         {
             if (!node.IsIncluded)
             {
diff --git a/Microsoft.Packaging.Tools.Trimming/tasks/targets/Microsoft.Packaging.Tools.Trimming.targets b/Microsoft.Packaging.Tools.Trimming/tasks/targets/Microsoft.Packaging.Tools.Trimming.targets
index a44d776..8140196 100644
--- a/Microsoft.Packaging.Tools.Trimming/tasks/targets/Microsoft.Packaging.Tools.Trimming.targets
+++ b/Microsoft.Packaging.Tools.Trimming/tasks/targets/Microsoft.Packaging.Tools.Trimming.targets
@@ -10,7 +10,23 @@
 
   <PropertyGroup>
     <TreatMetaPackagesAsTrimmable Condition="'$(TreatMetaPackagesAsTrimmable)' == ''">true</TreatMetaPackagesAsTrimmable>
+    <TrimFilesIncludeRelatedFiles Condition="'$(TrimFilesIncludeRelatedFiles)' == ''">true</TrimFilesIncludeRelatedFiles>
   </PropertyGroup>
+
+  <ItemDefinitionGroup>
+    <TrimFilesRootFiles>
+      <Visible>false</Visible>
+    </TrimFilesRootFiles>
+    <TrimFilesRootPackages>
+      <Visible>false</Visible>
+    </TrimFilesRootPackages>
+    <TrimmablePackages>
+      <Visible>false</Visible>
+    </TrimmablePackages>
+    <TrimmableFiles>
+      <Visible>false</Visible>
+    </TrimmableFiles>
+  </ItemDefinitionGroup>
   
   <Target Name="_determineTrimPackageInputs">
     <ItemGroup Condition="'$(RootPackageReference)' != 'false'">
@@ -40,12 +56,13 @@
     </ItemGroup>
   </Target>
   
-  <PropertyGroup Condition="'$(TrimUnusedDependencies)' == 'true'">
+  <PropertyGroup Condition="'$(TrimUnusedDependencies)' == 'true' AND '$(DesignTimeBuild)' != 'true'">
     <TrimFilesOnBuildAfter>CoreCompile</TrimFilesOnBuildAfter>
     <TrimFilesOnPublishBefore>ComputeFilesToPublish</TrimFilesOnPublishBefore>
   </PropertyGroup>
 
   <Target Name="TrimFilesOnBuild"
+          Condition="'$(BuildingProject)' == 'true'"
           DependsOnTargets="_determineTrimPackageInputs"
           AfterTargets="$(TrimFilesOnBuildAfter)">
     <ItemGroup>
@@ -57,12 +74,17 @@
                TrimmablePackages="@(TrimmablePackages)"
                TrimmableFiles="@(TrimmableFiles)"
                PackageDependencies="@(PackageDependencies)"
+               ProjectAssetsFile="$(ProjectAssetsFile)"
                TargetFramework="$(NuGetTargetMoniker)"
                RuntimeIdentifier="$(RuntimeIdentifier)"
                RuntimeItems="@(ReferenceCopyLocalPaths)"
                OtherRuntimeItems="@(_trimOtherRuntimeItems)"
                PreferNativeImages="$(TrimFilesPreferNativeImages)"
-               TreatMetaPackagesAsTrimmable="$(TreatMetaPackagesAsTrimmable)">
+               TreatMetaPackagesAsTrimmable="$(TreatMetaPackagesAsTrimmable)"
+               TreatMultiPackagesAsTrimmable="$(TreatMultiPackagesAsTrimmable)"
+               TreatAllPackagesAsTrimmable="$(TreatAllPackagesAsTrimmable)"
+               IncludeRelatedFiles="$(TrimFilesIncludeRelatedFiles)"
+               DirectedGraphFile="$(TrimFilesDirectedGraphFile)">
       <Output ItemName="_ReferenceCopyLocalPathsAfterTrimming" TaskParameter="RuntimeItemsAfterTrimming" />
       <Output ItemName="_ConflictPackageFiles" TaskParameter="TrimmedItems" />
     </TrimFiles>
@@ -74,6 +96,7 @@
   </Target>
 
   <Target Name="TrimFilesOnPublish"
+          Condition="'$(BuildingProject)' == 'true'"
           DependsOnTargets="_determineTrimPackageInputs"
           BeforeTargets="$(TrimFilesOnPublishBefore)">
 
@@ -82,11 +105,16 @@
                TrimmablePackages="@(TrimmablePackages)"
                TrimmableFiles="@(TrimmableFiles)"
                PackageDependencies="@(PackageDependencies)"
+               ProjectAssetsFile="$(ProjectAssetsFile)"
                TargetFramework="$(NuGetTargetMoniker)"
                RuntimeIdentifier="$(RuntimeIdentifier)"
                RuntimeItems="@(ResolvedAssembliesToPublish)"
                PreferNativeImages="$(TrimFilesPreferNativeImages)"
-               TreatMetaPackagesAsTrimmable="$(TreatMetaPackagesAsTrimmable)">
+               TreatMetaPackagesAsTrimmable="$(TreatMetaPackagesAsTrimmable)"
+               TreatMultiPackagesAsTrimmable="$(TreatMultiPackagesAsTrimmable)"
+               TreatAllPackagesAsTrimmable="$(TreatAllPackagesAsTrimmable)"
+               IncludeRelatedFiles="$(TrimFilesIncludeRelatedFiles)"
+               DirectedGraphFile="$(TrimFilesDirectedGraphFile)">
       <Output ItemName="_ResolvedAssembliesToPublishAfterTrimming" TaskParameter="RuntimeItemsAfterTrimming" />
       <Output ItemName="_PublishConflictPackageFiles" TaskParameter="TrimmedItems" />
     </TrimFiles>
diff --git a/NuGet.config b/NuGet.config
new file mode 100644
index 0000000..d1cfbfa
--- /dev/null
+++ b/NuGet.config
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<configuration>
+  <packageSources>
+    <clear />
+    <add key="dotnet-core" value="https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json" />
+  </packageSources>
+</configuration>
\ No newline at end of file
diff --git a/Packaging.props b/Packaging.props
index d78234e..2ca4e29 100644
--- a/Packaging.props
+++ b/Packaging.props
@@ -1,19 +1,18 @@
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
   <PropertyGroup>
     <LicenseUrl>https://github.com/dotnet/standard/blob/master/LICENSE.TXT</LicenseUrl>
-    <Copyright>.NET Foundation and Contributors</Copyright>
-    <PreReleaseLabel>servicing</PreReleaseLabel>
+    <PreReleaseLabel>preview1</PreReleaseLabel>
     <PackageDescriptionFile>$(ProjectDir)pkg/descriptions.json</PackageDescriptionFile>
     <PackageLicenseFile>$(ProjectDir)LICENSE.TXT</PackageLicenseFile>
     <PackageThirdPartyNoticesFile>$(ProjectDir)THIRD-PARTY-NOTICES.TXT</PackageThirdPartyNoticesFile>
-    <ReleaseNotes>https://go.microsoft.com/fwlink/?LinkID=799421</ReleaseNotes>
+    <ReleaseNotes>https://aka.ms/netstandard-release-notes</ReleaseNotes>
     <ProjectUrl>https://dot.net</ProjectUrl>
     <PackagingTaskDir>$(BuildToolsTaskDir)</PackagingTaskDir>
     <!-- defined in buildtools packaging.targets, but we need this before targets are imported -->
     <PackagePlatform Condition="'$(PackagePlatform)' == ''">$(Platform)</PackagePlatform>
     <PackagePlatform Condition="'$(PackagePlatform)' == 'amd64'">x64</PackagePlatform>
     <XmlDocPackage>Microsoft.Private.Intellisense</XmlDocPackage>
-    <XmlDocPackageVersion>2.0.0-preview3-25511-0</XmlDocPackageVersion>
+    <XmlDocPackageVersion>2.0.0-preview3-26209-0</XmlDocPackageVersion>
     <XmlDocFileRoot>$(PackagesDir)$(XmlDocPackage.ToLowerInvariant())/$(XmlDocPackageVersion)/xmldocs/netstandard</XmlDocFileRoot>
     <XmlDocDir>$(BinDir)docs</XmlDocDir>
   </PropertyGroup>
diff --git a/apicompat/Directory.Build.props b/apicompat/Directory.Build.props
new file mode 100644
index 0000000..367498f
--- /dev/null
+++ b/apicompat/Directory.Build.props
@@ -0,0 +1,7 @@
+<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="..\Directory.Build.props" />
+  <PropertyGroup>
+    <ContainsPackageReferences>true</ContainsPackageReferences>
+    <RestoredRefRootPath>$(ObjDir)CompatShims/ref/</RestoredRefRootPath>
+  </PropertyGroup>
+</Project>
diff --git a/apicompat/apicompat.proj b/apicompat/apicompat.proj
index c4c8f25..4587912 100644
--- a/apicompat/apicompat.proj
+++ b/apicompat/apicompat.proj
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
 
   <PropertyGroup>
     <RestoredRefPath>$(IntermediateOutputPath)CompatShims/ref/</RestoredRefPath>
@@ -253,5 +253,5 @@
   </PropertyGroup>
 
   <Import Project="..\dir.traversal.targets" />
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
\ No newline at end of file
diff --git a/apicompat/net461/net461.depproj b/apicompat/net461/net461.depproj
index fe5c58c..c5cfc7d 100644
--- a/apicompat/net461/net461.depproj
+++ b/apicompat/net461/net461.depproj
@@ -1,6 +1,6 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <PropertyGroup>
     <NuGetDeploySourceItem>Reference</NuGetDeploySourceItem>
     <NuGetTargetMoniker>.NETFramework,Version=v4.6.1</NuGetTargetMoniker>
@@ -22,5 +22,5 @@
       <Version>1.0.1</Version>
     </PackageReference>
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
\ No newline at end of file
diff --git a/apicompat/netstandard1x/netstandard.builds b/apicompat/netstandard1x/netstandard.builds
index 587f0f8..41c5899 100644
--- a/apicompat/netstandard1x/netstandard.builds
+++ b/apicompat/netstandard1x/netstandard.builds
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <PropertyGroup>
     <SerializeProjects>true</SerializeProjects>
   </PropertyGroup>
diff --git a/apicompat/netstandard1x/netstandard1x.depproj b/apicompat/netstandard1x/netstandard1x.depproj
index 1eaa2ba..7b6ed75 100644
--- a/apicompat/netstandard1x/netstandard1x.depproj
+++ b/apicompat/netstandard1x/netstandard1x.depproj
@@ -1,6 +1,6 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <PropertyGroup>
     <NuGetDeploySourceItem>Reference</NuGetDeploySourceItem>
     <NuGetTargetMoniker Condition="'$(NuGetTargetMoniker)'==''">.NETStandard,Version=v1.6</NuGetTargetMoniker>
@@ -302,5 +302,5 @@
       <Version>4.3.0</Version>
     </PackageReference>
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
\ No newline at end of file
diff --git a/build-managed.sh b/build-managed.sh
deleted file mode 100755
index e258958..0000000
--- a/build-managed.sh
+++ /dev/null
@@ -1,5 +0,0 @@
-#!/usr/bin/env bash
-
-__scriptpath=$(cd "$(dirname "$0")"; pwd -P)
-$__scriptpath/run.sh build-managed $@
-exit $?
diff --git a/build.cmd b/build.cmd
index f6099af..0b2d9c4 100644
--- a/build.cmd
+++ b/build.cmd
@@ -1,2 +1,4 @@
-@call "%~dp0run.cmd" build-managed %*
-@exit /b %ERRORLEVEL%
\ No newline at end of file
+@echo off
+powershell -ExecutionPolicy ByPass -NoProfile %~dp0eng\Build.ps1 %*
+echo Build.cmd ErrorLevel=%ERRORLEVEL%
+exit /b %ERRORLEVEL%
\ No newline at end of file
diff --git a/build.proj b/build.proj
new file mode 100644
index 0000000..4c082ba
--- /dev/null
+++ b/build.proj
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
+
+   <PropertyGroup>
+    <BuildRestore Condition="'$(BuildRestore)'==''">true</BuildRestore>
+    <BuildManaged Condition="'$(BuildManaged)'==''">true</BuildManaged>
+    <BuildTests Condition="'$(BuildTests)'==''">true</BuildTests>
+    <BuildPackages Condition="'$(BuildPackages)'==''">true</BuildPackages>
+    <SignPackages Condition="'$(SignPackages)'==''">false</SignPackages>
+
+    <BuildDependsOn Condition="'$(BuildRestore)'=='true' and '$(DotNetBuildFromSource)'!='true'">$(BuildDependsOn);Restore</BuildDependsOn>
+    <BuildDependsOn Condition="'$(BuildManaged)'=='true'">$(BuildDependsOn);BuildManaged</BuildDependsOn>
+    <BuildDependsOn Condition="'$(BuildTests)'=='true' and '$(DotNetBuildFromSource)'!='true'">$(BuildDependsOn);Test</BuildDependsOn>
+    <BuildDependsOn Condition="'$(BuildPackages)'=='true'">$(BuildDependsOn);Pack</BuildDependsOn>
+    <BuildDependsOn Condition="'$(SignPackages)'=='true'">$(BuildDependsOn);SignPackages</BuildDependsOn>
+  </PropertyGroup>
+
+  <Import Project="$(ToolsDir)\VersionTools.targets" Condition="Exists('$(ToolsDir)\VersionTools.targets')" />
+
+   <Target Name="Restore">
+    <ItemGroup>
+      <_RestoreProjects Include="external/**/*.depproj" />
+    </ItemGroup>
+
+    <MSBuild Projects="@(_RestoreProjects)" />
+  </Target>
+
+  <Target Name="BuildManaged">
+    <ItemGroup>
+      <_BuildMangedProjects Include="src.builds" />
+    </ItemGroup>
+
+    <MSBuild Projects="@(_BuildMangedProjects)" />
+  </Target>
+
+  <Target Name="Test">
+    <ItemGroup>
+      <_TestProjects Include="apicompat/apicompat.proj" />
+    </ItemGroup>
+
+    <MSBuild Projects="@(_TestProjects)" />
+  </Target>
+
+  <Target Name="Pack">
+    <ItemGroup>
+      <_PackProjects Include="packages.builds" Condition="'$(BuildPackages)'=='true'" />
+    </ItemGroup>
+
+    <MSBuild Projects="@(_PackProjects)" />
+  </Target>
+
+  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)" />
+  <Target Name="Clean">
+    <RemoveDir Directories="$(BinDir)" />
+  </Target>
+
+  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />
+
+</Project>
+
diff --git a/build.sh b/build.sh
index 30450f5..a9ca069 100755
--- a/build.sh
+++ b/build.sh
@@ -1,5 +1,17 @@
 #!/usr/bin/env bash
 
-__scriptpath=$(cd "$(dirname "$0")"; pwd -P)
-"$__scriptpath/build-managed.sh" $@
-exit $?
+source="${BASH_SOURCE[0]}"
+
+# resolve $SOURCE until the file is no longer a symlink
+while [[ -h $source ]]; do
+  scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+  source="$(readlink "$source")"
+
+  # if $source was a relative symlink, we need to resolve it relative to the path where the
+  # symlink file was located
+  [[ $source != /* ]] && source="$scriptroot/$source"
+done
+
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+"$scriptroot/eng/build.sh" $@
+exit $?
\ No newline at end of file
diff --git a/config.json b/config.json
deleted file mode 100644
index af15686..0000000
--- a/config.json
+++ /dev/null
@@ -1,223 +0,0 @@
-﻿{
-  "settings": {
-    "OfficialBuildId": {
-      "description": "Specifies the SeedDate and the revision of the build to generate the version of the libraries.",
-      "valueType": "property",
-      "values": [],
-      "defaultValue": ""
-    },
-    "FilterToOSGroup": {
-      "description": "FilterToOSGroup for result binaries.",
-      "valueType": "property",
-      "values": ["Windows_NT", "Linux", "OSX", "FreeBSD", "NetBSD"],
-      "defaultValue": "${OSRid}"
-    },
-    "ConfigurationGroup": {
-      "description": "Sets the configuration group as Release or Debug",
-      "valueType": "property",
-      "values": ["Release", "Debug"],
-      "defaultValue": "Debug"
-    },
-    "BuildPackageLibraryReferences": {
-      "description": "Enables/Disables building libraries referenced by packages.",
-      "valueType": "property",
-      "values": ["True", "False"],
-      "defaultValue": true
-    },
-    "CloudDropAccountName": {
-      "description": "Azure account name.",
-      "valueType": "property",
-      "values": [],
-      "defaultValue": ""
-    },
-    "CloudDropAccessToken": {
-      "description": "Azure access token",
-      "valueType": "property",
-      "values": [],
-      "defaultValue": ""
-    },
-    "ContainerName": {
-      "description": "Azure container name",
-      "valueType": "property",
-      "values": [],
-      "defaultValue": ""
-    },
-    "ExtraParameters": {
-      "description": "Extra parameters will be passed to the selected command.",
-      "valueType": "passThrough",
-      "values": [],
-      "defaultValue": ""
-    },
-    "MsBuildLogging": {
-      "description": "MsBuild logging options.",
-      "valueType": "passThrough",
-      "values": [],
-      "defaultValue": "/flp:v=normal"
-    },
-    "MsBuildWarning": {
-      "description": "MsBuild warning logging.",
-      "valueType": "passThrough",
-      "values": [],
-      "defaultValue": "/flp2:warningsonly;logfile=msbuild.wrn"
-    },
-    "MsBuildError": {
-      "description": "MsBuild error logging.",
-      "valueType": "passThrough",
-      "values": [],
-      "defaultValue": "/flp3:errorsonly;logfile=msbuild.err"
-    },
-    "MsBuildParameters": {
-      "description": "MsBuild building options.",
-      "valueType": "passThrough",
-      "values": [],
-      "defaultValue": "/nologo /maxcpucount /verbosity:minimal /clp:Summary"
-    },
-    "MsBuildBinClashLogger-Windows": {
-      "description": "MsBuild Bin clash logger options for Windows.",
-      "valueType": "passThrough",
-      "values": [],
-      "defaultValue": "/l:BinClashLogger,Tools\\net46\\Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log"
-    },
-    "Project": {
-      "description": "Project where the commands are going to be applied.",
-      "valueType": "passThrough",
-      "values": [],
-      "defaultValue": ""
-    },
-    "CleanAllProjects": {
-      "description": "MsBuild target that deletes the binary output directory.",
-      "valueType": "target",
-      "values": [],
-      "defaultValue": ""
-    },
-    "CleanPackages": {
-      "description": "MsBuild target that deletes the repo-local nuget package directory.",
-      "valueType": "target",
-      "values": [],
-      "defaultValue": ""
-    },
-    "CleanPackagesCache": {
-      "description": "MsBuild target that deletes the user-local nuget package cache.",
-      "valueType": "target",
-      "values": [],
-      "defaultValue": ""
-    },
-    "Rebuild": {
-      "description": "Does a rebuild which runs the clean and then the build targets.",
-      "valueType": "target",
-      "values": [],
-      "defaultValue": ""
-    }
-  },
-  "commands": {
-    "build-managed":{
-      "alias":{
-        "binaries":{
-          "description": "Only builds binaries. It doesn't restore packages.",
-          "settings":{
-            "RestoreDuringBuild": false,
-            "BuildTests": false,
-            "BuildPackages": false
-          }
-        },
-        "packages": {
-          "description": "Builds the NuGet packages.",
-          "settings": {
-            "Project": "netstandard/package.builds",
-            "FilterToOSGroup":"default",
-            "MsBuildLogging":"/flp:v=normal;LogFile=build-packages.log"
-          }
-        },
-        "debug":{
-          "description": "Sets ConfigurationGroup=Debug or the value passed by the user.",
-          "settings":{
-            "ConfigurationGroup": "Debug"
-          }
-        },
-        "release":{
-          "description": "Sets ConfigurationGroup=Release or the value passed by the user.",
-          "settings":{
-            "ConfigurationGroup": "Release"
-          }
-        },
-        "c": {
-          "settings": {
-            "Rebuild": "default"
-          }
-        },
-        "rebuild": {
-          "settings": {
-            "Rebuild": "default"
-          }
-        }
-      },
-      "defaultValues":{
-        "toolName": "msbuild",
-        "settings": {
-          "ConfigurationGroup": "default",
-          "MsBuildLogging": "default",
-          "MsBuildWarning": "default",
-          "MsBuildError": "default"
-        }
-      }
-    },
-    "clean":{
-      "alias":{
-        "b":{
-          "description": "Deletes the binary output directory.",
-          "settings":{
-            "CleanAllProjects": "default"
-          }
-        },
-        "p":{
-          "description": "Deletes the repo-local nuget package directory.",
-          "settings":{
-            "CleanPackages": "default"
-            }
-        },
-        "c":{
-          "description": "Deletes the user-local nuget package cache.",
-          "settings":{
-            "CleanPackagesCache": "default"
-          }
-        }
-      },
-      "defaultValues":{
-        "toolName": "msbuild",
-        "settings": {
-          "MsBuildLogging":"/flp:v=normal;LogFile=clean.log"
-        }
-      }
-    }
-  },
- "tools": {
-    "msbuild": {
-      "osSpecific": {
-        "windows": {
-          "defaultParameters": "/nologo /v:minimal /flp:v=normal /clp:Summary /maxcpucount /nodeReuse:false /l:BinClashLogger,Tools\\net46\\Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log",
-          "path": "Tools/msbuild.cmd"
-        },
-        "unix": {
-          "defaultParameters": "/nologo /verbosity:minimal /clp:Summary /maxcpucount /l:BinClashLogger,Tools/Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log",
-          "path": "Tools/msbuild.sh"
-        }
-      },
-      "valueTypes": {
-        "property": "/p:{name}={value}",
-        "target": "/t:{name}",
-        "internal": "/{name}"
-      }
-    },
-    "terminal": {
-      "osSpecific": {
-        "windows": {
-          "filesExtension": "cmd"
-        },
-        "unix": {
-          "filesExtension": "sh"
-        }
-      },
-      "valueTypes": {}
-    }
-  }
-}
diff --git a/dependencies.props b/dependencies.props
new file mode 100644
index 0000000..38645a4
--- /dev/null
+++ b/dependencies.props
@@ -0,0 +1,51 @@
+<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <!-- Source of truth for dependency tooling: the commit hash of the dotnet/versions master branch as of the last auto-upgrade. -->
+  <!-- For detailed explanation of the reference versions see:
+
+       https://github.com/dotnet/buildtools/blob/master/Documentation/project-nuget-dependencies.md
+       https://github.com/dotnet/buildtools/blob/master/Documentation/annotated-dependency-props.md
+
+       These ref versions are pulled from https://github.com/dotnet/versions.
+  -->
+  <PropertyGroup>
+    <BuildToolsCurrentRef>044092b54a7e4df96d059e2c6b83463714547bf8</BuildToolsCurrentRef>
+  </PropertyGroup>
+
+  <!-- Package versions used as toolsets --> 
+  <PropertyGroup> 
+    <FeedTasksPackage>Microsoft.DotNet.Build.Tasks.Feed</FeedTasksPackage> 
+    <FeedTasksPackageVersion>3.0.0-preview1-03224-03</FeedTasksPackageVersion> 
+
+    <BuildToolsPackage>microsoft.dotnet.buildtools</BuildToolsPackage>
+    <BuildToolsPackageVersion>3.0.0-preview1-03224-03</BuildToolsPackageVersion>
+  </PropertyGroup> 
+
+  <!-- Package dependency verification/auto-upgrade configuration. -->
+  <PropertyGroup>
+    <BaseDotNetBuildInfo>build-info/dotnet/</BaseDotNetBuildInfo>
+    <DependencyBranch>master</DependencyBranch>
+    <CurrentRefXmlPath>$(MSBuildThisFileFullPath)</CurrentRefXmlPath>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <RemoteDependencyBuildInfo Include="BuildTools">
+      <BuildInfoPath>$(BaseDotNetBuildInfo)buildtools/$(DependencyBranch)</BuildInfoPath>
+      <CurrentRef>$(BuildToolsCurrentRef)</CurrentRef>
+    </RemoteDependencyBuildInfo>
+
+    <DependencyBuildInfo Include="@(RemoteDependencyBuildInfo)">
+      <RawVersionsBaseUrl>https://raw.githubusercontent.com/dotnet/versions</RawVersionsBaseUrl>
+    </DependencyBuildInfo>    
+
+    <XmlUpdateStep Include="BuildTools">
+      <Path>$(MSBuildThisFileFullPath)</Path>
+      <ElementName>FeedTasksPackageVersion</ElementName>
+      <PackageId>$(FeedTasksPackage)</PackageId>
+    </XmlUpdateStep>
+    <UpdateStep Include="BuildTools">
+      <UpdaterType>File</UpdaterType>
+      <Path>$(MSBuildThisFileDirectory)BuildToolsVersion.txt</Path>
+      <PackageId>Microsoft.DotNet.BuildTools</PackageId>
+    </UpdateStep>
+  </ItemGroup>
+</Project>
\ No newline at end of file
diff --git a/dir.proj b/dir.proj
deleted file mode 100644
index 3c28d64..0000000
--- a/dir.proj
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
-
-  <PropertyGroup>
-    <SerializeProjects>true</SerializeProjects>
-  </PropertyGroup>
-
-  <ItemGroup>
-    <Project Include="external/**/*.depproj" Condition="'$(DotNetBuildFromSource)' != 'true'" />
-    <Project Include="src.builds" />
-    <Project Include="apicompat/apicompat.proj" Condition="'$(DotNetBuildFromSource)' != 'true'" />
-    <Project Include="signing.builds" />
-    <Project Include="packages.builds" />
-  </ItemGroup>
-
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.traversal.targets))\dir.traversal.targets" />
-  <Import Project="$(ToolsDir)\VersionTools.targets" />
-
-  <!-- Override CleanAllProjects from dir.traversal.targets and just remove the full BinDir -->
-  <Target Name="CleanAllProjects">
-    <RemoveDir Directories="$(BinDir)" />
-  </Target>
-</Project>
-
diff --git a/dir.targets b/dir.targets
deleted file mode 100644
index a781aab..0000000
--- a/dir.targets
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" InitialTargets="CheckForBuildTools" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-
-  <Target Name="CheckForBuildTools">
-    <Error Condition="!Exists('$(ToolsDir)') and '$(OverrideToolsDir)'=='true'"
-           Text="The tools directory [$(ToolsDir)] does not exist. Please run sync in your enlistment to ensure the tools are installed before attempting to build an individual project." />
-    <Error Condition="!Exists('$(ToolsDir)') and '$(OverrideToolsDir)'!='true'"
-           Text="The tools directory [$(ToolsDir)] does not exist. Please run init-tools.cmd in your enlistment to ensure the tools are installed before attempting to build an individual project." />
-  </Target>
-
-  <Import Project="$(ToolsDir)/Build.Common.targets" Condition="Exists('$(ToolsDir)/Build.Common.targets')" />
-</Project>
diff --git a/eng/Build.props b/eng/Build.props
new file mode 100644
index 0000000..720f535
--- /dev/null
+++ b/eng/Build.props
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup>
+    <ProjectToBuild Include="$(MSBuildThisFileDirectory)..\build.proj" />
+  </ItemGroup>
+</Project>
\ No newline at end of file
diff --git a/eng/Signing.props b/eng/Signing.props
new file mode 100644
index 0000000..ba0b32b
--- /dev/null
+++ b/eng/Signing.props
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+  <ItemGroup>
+    <ItemsToSign Include="$(PackageOutputPath)**\*.nupkg" />
+  </ItemGroup>
+</Project>
\ No newline at end of file
diff --git a/eng/Tools.props b/eng/Tools.props
new file mode 100644
index 0000000..e883676
--- /dev/null
+++ b/eng/Tools.props
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <RestoreSources Condition="'$(DotNetBuildOffline)' != 'true'">
+      https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json;
+      $(RestoreSources)
+    </RestoreSources>
+    <MSBuildTreatWarningsAsErrors>false</MSBuildTreatWarningsAsErrors>
+  </PropertyGroup>
+  <Import Project="$(MSBuildThisFileDirectory)..\dependencies.props" />
+  <ItemGroup>
+    <PackageReference Include="$(BuildToolsPackage)" Version="$(BuildToolsPackageVersion)" />
+    <PackageReference Include="$(FeedTasksPackage)" Version="$(FeedTasksPackageVersion)" />
+  </ItemGroup>
+
+  <Target Name="InitTools" AfterTargets="Restore">
+
+    <PropertyGroup>
+      <ToolsDir>$(RepoRoot)Tools</ToolsDir>
+      <BuildToolsSemaphore>$(ToolsDir)/$(BuildToolsPackageVersion).init-tools.completed</BuildToolsSemaphore>
+      <BuildToolsPackageDir>$(NuGetPackageRoot)/$(BuildToolsPackage)/$(BuildToolsPackageVersion)/lib/</BuildToolsPackageDir>
+      <CmdExt>cmd</CmdExt>
+      <CmdExt Condition="'$(OS)' != 'Windows_NT'">sh</CmdExt>
+      <DotNetRoot Condition="'$(DotNetRoot)' == ''">$(RepoRoot).dotnet\</DotNetRoot>
+      <DotNetCmd>$(DotNetRoot)dotnet</DotNetCmd>
+      <DotNetCmd Condition="'$(OS)' == 'Windows_NT'">$(DotNetCmd).exe</DotNetCmd>
+
+      <InitToolsCmdLine>$(BuildToolsPackageDir)init-tools.$(CmdExt) $(RepoRoot) $(DotNETCmd) $(ToolsDir) $(NuGetPackageRoot)\</InitToolsCmdLine>
+    </PropertyGroup>
+
+    <Exec
+        Condition="!Exists('$(BuildToolsSemaphore)')"
+        Command="$(InitToolsCmdLine) &gt; $(RepoRoot)init-tools.log" />
+
+    <Touch Files="$(BuildToolsSemaphore)" AlwaysCreate="true" />
+  </Target>
+</Project>
\ No newline at end of file
diff --git a/eng/Version.Details.xml b/eng/Version.Details.xml
new file mode 100644
index 0000000..f0d8006
--- /dev/null
+++ b/eng/Version.Details.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Dependencies>
+  <ProductDependencies></ProductDependencies>
+  <ToolsetDependencies>
+    <Dependency Name="Microsoft.DotNet.Arcade.Sdk" Version="1.0.0-beta.18563.21">
+      <Uri>https://github.com/dotnet/arcade</Uri>
+      <Sha>179f64a9add52c37b4d441f12285da4b17389a82</Sha>
+    </Dependency>
+  </ToolsetDependencies>
+</Dependencies>
diff --git a/eng/Versions.props b/eng/Versions.props
new file mode 100644
index 0000000..04b6640
--- /dev/null
+++ b/eng/Versions.props
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <VersionPrefix>1.0.0</VersionPrefix>
+    <PreReleaseVersionLabel>prerelease</PreReleaseVersionLabel>
+  </PropertyGroup>
+</Project>
diff --git a/eng/build.ps1 b/eng/build.ps1
new file mode 100644
index 0000000..e9fa720
--- /dev/null
+++ b/eng/build.ps1
@@ -0,0 +1,34 @@
+[CmdletBinding(PositionalBinding=$false)]
+Param(
+  [string] $ArchGroup,
+  [switch] $Release,
+  [switch] $c,
+  [switch] $Restore,
+  [switch] $Test,
+  [switch] $Pack,
+  [switch] $Sign,
+  [switch] $Publish,
+  [Parameter(ValueFromRemainingArguments=$true)][String[]]$ExtraArgs
+)
+
+$defaultargs = "-build -restore -warnaserror:0"
+
+foreach ($argument in $PSBoundParameters.Keys)
+{
+  switch($argument)
+  {
+    "Debug"        { $arguments += "-configuration Debug " }
+    "Release"      { $arguments += "-configuration Release " }
+    "ExtraArgs"    { $arguments += $ExtraArgs }
+    "c"            { $arguments += "-rebuild " }
+    "Publish"      { $arguments += "" }
+    default        { $arguments += "/p:$argument=$($PSBoundParameters[$argument]) " }
+  }
+}
+
+$arguments = "$defaultargs $arguments"
+
+Write-Host "Args: $arguments"
+
+Invoke-Expression "& `"$PSScriptRoot/common/build.ps1`" $arguments"
+exit $lastExitCode
\ No newline at end of file
diff --git a/eng/build.sh b/eng/build.sh
new file mode 100755
index 0000000..a638db4
--- /dev/null
+++ b/eng/build.sh
@@ -0,0 +1,52 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+
+# resolve $source until the file is no longer a symlink
+while [[ -h "$source" ]]; do
+  scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+  source="$(readlink "$source")"
+  # if $source was a relative symlink, we need to resolve it relative to the path where the
+  # symlink file was located
+  [[ $source != /* ]] && source="$scriptroot/$source"
+done
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+
+arguments=''
+extraargs=''
+checkedPossibleDirectoryToBuild=false
+defaultargs="--build --restore --warnaserror false"
+
+while (($# > 0)); do
+  lowerI="$(echo $1 | awk '{print tolower($0)}')"
+  case $lowerI in
+     -buildArch)
+      arguments="$arguments /p:ArchGroup=$2"
+      shift 2
+      ;;
+     -release)
+      arguments="$arguments --configuration Release"
+      shift 1
+      ;;
+     -debug)
+      arguments="$arguments --configuration Debug"
+      shift 1
+      ;;
+     -c)
+      arguments="$arguments --rebuild"
+      shift 1
+      ;;
+     -publish)
+      shift 1
+      ;;
+      *)
+      extraargs="$extraargs $1"
+      shift 1
+      ;;
+  esac
+done
+
+arguments="$defaultargs $arguments $extraargs"
+
+"$scriptroot/common/build.sh" $arguments
+exit $?
diff --git a/eng/common/CIBuild.cmd b/eng/common/CIBuild.cmd
new file mode 100644
index 0000000..6544b0c
--- /dev/null
+++ b/eng/common/CIBuild.cmd
@@ -0,0 +1,3 @@
+@echo off
+powershell -ExecutionPolicy ByPass -NoProfile -command "& """%~dp0Build.ps1""" -restore -build -test -sign -pack -publish -ci %*"
+exit /b %ErrorLevel%
diff --git a/eng/common/PublishBuildAssets.cmd b/eng/common/PublishBuildAssets.cmd
new file mode 100644
index 0000000..4f9d54d
--- /dev/null
+++ b/eng/common/PublishBuildAssets.cmd
@@ -0,0 +1,3 @@
+@echo off
+powershell -ExecutionPolicy ByPass -NoProfile -command "& """%~dp0Build.ps1""" -restore -publishBuildAssets %*"
+exit /b %ErrorLevel%
diff --git a/eng/common/build.ps1 b/eng/common/build.ps1
new file mode 100644
index 0000000..ca45b3d
--- /dev/null
+++ b/eng/common/build.ps1
@@ -0,0 +1,107 @@
+[CmdletBinding(PositionalBinding=$false)]
+Param(
+  [string] $configuration = "Debug",
+  [string] $projects = "",
+  [string] $verbosity = "minimal",
+  [string] $msbuildEngine = $null,
+  [bool] $warnaserror = $true,
+  [bool] $nodereuse = $true,
+  [switch] $restore,
+  [switch] $deployDeps,
+  [switch] $build,
+  [switch] $rebuild,
+  [switch] $deploy,
+  [switch] $test,
+  [switch] $integrationTest,
+  [switch] $performanceTest,
+  [switch] $sign,
+  [switch] $pack,
+  [switch] $publish,
+  [switch] $publishBuildAssets,
+  [switch] $ci,
+  [switch] $prepareMachine,
+  [switch] $help,
+  [Parameter(ValueFromRemainingArguments=$true)][String[]]$properties
+)
+
+. $PSScriptRoot\tools.ps1
+
+function Print-Usage() {
+    Write-Host "Common settings:"
+    Write-Host "  -configuration <value>  Build configuration Debug, Release"
+    Write-Host "  -verbosity <value>      Msbuild verbosity (q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic])"
+    Write-Host "  -help                   Print help and exit"
+    Write-Host ""
+
+    Write-Host "Actions:"
+    Write-Host "  -restore                Restore dependencies"
+    Write-Host "  -build                  Build solution"
+    Write-Host "  -rebuild                Rebuild solution"
+    Write-Host "  -deploy                 Deploy built VSIXes"
+    Write-Host "  -deployDeps             Deploy dependencies (e.g. VSIXes for integration tests)"
+    Write-Host "  -test                   Run all unit tests in the solution"
+    Write-Host "  -pack                   Package build outputs into NuGet packages and Willow components"
+    Write-Host "  -integrationTest        Run all integration tests in the solution"
+    Write-Host "  -performanceTest        Run all performance tests in the solution"
+    Write-Host "  -sign                   Sign build outputs"
+    Write-Host "  -publish                Publish artifacts (e.g. symbols)"
+    Write-Host "  -publishBuildAssets        Push assets to BAR"
+    Write-Host ""
+
+    Write-Host "Advanced settings:"
+    Write-Host "  -projects <value>       Semi-colon delimited list of sln/proj's to build. Globbing is supported (*.sln)"
+    Write-Host "  -ci                     Set when running on CI server"
+    Write-Host "  -prepareMachine         Prepare machine for CI run"
+    Write-Host "  -msbuildEngine <value>  Msbuild engine to use to run build ('dotnet', 'vs', or unspecified)."
+    Write-Host ""
+    Write-Host "Command line arguments not listed above are passed thru to msbuild."
+    Write-Host "The above arguments can be shortened as much as to be unambiguous (e.g. -co for configuration, -t for test, etc.)."
+}
+
+if ($help -or (($properties -ne $null) -and ($properties.Contains("/help") -or $properties.Contains("/?")))) {
+  Print-Usage
+  exit 0
+}
+
+try {
+  if ($projects -eq "") {
+    $projects = Join-Path $RepoRoot "*.sln"
+  }
+
+  InitializeTools
+
+  $BuildLog = Join-Path $LogDir "Build.binlog"
+
+  MSBuild $ToolsetBuildProj `
+    /bl:$BuildLog `
+    /p:Configuration=$configuration `
+    /p:Projects=$projects `
+    /p:RepoRoot=$RepoRoot `
+    /p:Restore=$restore `
+    /p:DeployDeps=$deployDeps `
+    /p:Build=$build `
+    /p:Rebuild=$rebuild `
+    /p:Deploy=$deploy `
+    /p:Test=$test `
+    /p:Pack=$pack `
+    /p:IntegrationTest=$integrationTest `
+    /p:PerformanceTest=$performanceTest `
+    /p:Sign=$sign `
+    /p:Publish=$publish `
+    /p:PublishBuildAssets=$publishBuildAssets `
+    /p:ContinuousIntegrationBuild=$ci `
+    @properties
+
+  if ($lastExitCode -ne 0) {
+    Write-Host "Build Failed (exit code '$lastExitCode'). See log: $BuildLog" -ForegroundColor Red
+    ExitWithExitCode $lastExitCode
+  }
+
+  ExitWithExitCode $lastExitCode
+}
+catch {
+  Write-Host $_
+  Write-Host $_.Exception
+  Write-Host $_.ScriptStackTrace
+  ExitWithExitCode 1
+}
diff --git a/eng/common/build.sh b/eng/common/build.sh
new file mode 100755
index 0000000..941db3b
--- /dev/null
+++ b/eng/common/build.sh
@@ -0,0 +1,171 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+
+# resolve $source until the file is no longer a symlink
+while [[ -h "$source" ]]; do
+  scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+  source="$(readlink "$source")"
+  # if $source was a relative symlink, we need to resolve it relative to the path where the
+  # symlink file was located
+  [[ $source != /* ]] && source="$scriptroot/$source"
+done
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+
+help=false
+restore=false
+build=false
+rebuild=false
+test=false
+pack=false
+publish=false
+integration_test=false
+performance_test=false
+sign=false
+public=false
+ci=false
+
+warnaserror=true
+nodereuse=true
+
+projects=''
+configuration='Debug'
+prepare_machine=false
+verbosity='minimal'
+properties=''
+
+while (($# > 0)); do
+  lowerI="$(echo $1 | awk '{print tolower($0)}')"
+  case $lowerI in
+    --build)
+      build=true
+      shift 1
+      ;;
+    --ci)
+      ci=true
+      shift 1
+      ;;
+    --configuration)
+      configuration=$2
+      shift 2
+      ;;
+    --help)
+      echo "Common settings:"
+      echo "  --configuration <value>  Build configuration Debug, Release"
+      echo "  --verbosity <value>      Msbuild verbosity (q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic])"
+      echo "  --help                   Print help and exit"
+      echo ""
+      echo "Actions:"
+      echo "  --restore                Restore dependencies"
+      echo "  --build                  Build solution"
+      echo "  --rebuild                Rebuild solution"
+      echo "  --test                   Run all unit tests in the solution"
+      echo "  --sign                   Sign build outputs"
+      echo "  --publish                Publish artifacts (e.g. symbols)"
+      echo "  --pack                   Package build outputs into NuGet packages and Willow components"
+      echo ""
+      echo "Advanced settings:"
+      echo "  --solution <value>       Path to solution to build"
+      echo "  --ci                     Set when running on CI server"
+      echo "  --prepareMachine         Prepare machine for CI run"
+      echo ""
+      echo "Command line arguments not listed above are passed through to MSBuild."
+      exit 0
+      ;;
+    --pack)
+      pack=true
+      shift 1
+      ;;
+    --preparemachine)
+      prepare_machine=true
+      shift 1
+      ;;
+    --rebuild)
+      rebuild=true
+      shift 1
+      ;;
+    --restore)
+      restore=true
+      shift 1
+      ;;
+    --sign)
+      sign=true
+      shift 1
+      ;;
+    --solution)
+      solution=$2
+      shift 2
+      ;;
+    --projects)
+      projects=$2
+      shift 2
+      ;;
+    --test)
+      test=true
+      shift 1
+      ;;
+    --integrationtest)
+      integration_test=true
+      shift 1
+      ;;
+    --performancetest)
+      performance_test=true
+      shift 1
+      ;;
+    --publish)
+      publish=true
+      shift 1
+      ;;
+    --verbosity)
+      verbosity=$2
+      shift 2
+      ;;
+    --warnaserror)
+      warnaserror=$2
+      shift 2
+      ;;
+    --nodereuse)
+      nodereuse=$2
+      shift 2
+      ;;
+      *)
+      properties="$properties $1"
+      shift 1
+      ;;
+  esac
+done
+
+. "$scriptroot/tools.sh"
+
+if [[ -z $projects ]]; then
+  projects="$repo_root/*.sln"
+fi
+
+InitializeTools
+
+build_log="$log_dir/Build.binlog"
+
+MSBuild "$toolset_build_proj" \
+  /bl:"$build_log" \
+  /p:Configuration=$configuration \
+  /p:Projects="$projects" \
+  /p:RepoRoot="$repo_root" \
+  /p:Restore=$restore \
+  /p:Build=$build \
+  /p:Rebuild=$rebuild \
+  /p:Test=$test \
+  /p:Pack=$pack \
+  /p:IntegrationTest=$integration_test \
+  /p:PerformanceTest=$performance_test \
+  /p:Sign=$sign \
+  /p:Publish=$publish \
+  /p:ContinuousIntegrationBuild=$ci \
+  $properties
+
+lastexitcode=$?
+
+if [[ $lastexitcode != 0 ]]; then
+  echo "Build failed (exit code '$lastexitcode'). See log: $build_log"
+fi
+
+ExitWithExitCode $lastexitcode
diff --git a/eng/common/cibuild.sh b/eng/common/cibuild.sh
new file mode 100755
index 0000000..1a02c0d
--- /dev/null
+++ b/eng/common/cibuild.sh
@@ -0,0 +1,16 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+
+# resolve $SOURCE until the file is no longer a symlink
+while [[ -h $source ]]; do
+  scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+  source="$(readlink "$source")"
+
+  # if $source was a relative symlink, we need to resolve it relative to the path where 
+  # the symlink file was located
+  [[ $source != /* ]] && source="$scriptroot/$source"
+done
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+
+. "$scriptroot/build.sh" --restore --build --test --pack --publish --ci $@
\ No newline at end of file
diff --git a/eng/common/cross/android/arm/toolchain.cmake b/eng/common/cross/android/arm/toolchain.cmake
new file mode 100644
index 0000000..a7e1c73
--- /dev/null
+++ b/eng/common/cross/android/arm/toolchain.cmake
@@ -0,0 +1,41 @@
+set(CROSS_NDK_TOOLCHAIN $ENV{ROOTFS_DIR}/../)
+set(CROSS_ROOTFS ${CROSS_NDK_TOOLCHAIN}/sysroot)
+set(CLR_CMAKE_PLATFORM_ANDROID "Android")
+
+set(CMAKE_SYSTEM_NAME Linux)
+set(CMAKE_SYSTEM_VERSION 1)
+set(CMAKE_SYSTEM_PROCESSOR arm)
+
+## Specify the toolchain
+set(TOOLCHAIN "arm-linux-androideabi")
+set(CMAKE_PREFIX_PATH ${CROSS_NDK_TOOLCHAIN})
+set(TOOLCHAIN_PREFIX ${TOOLCHAIN}-)
+
+find_program(CMAKE_C_COMPILER ${TOOLCHAIN_PREFIX}clang)
+find_program(CMAKE_CXX_COMPILER ${TOOLCHAIN_PREFIX}clang++)
+find_program(CMAKE_ASM_COMPILER ${TOOLCHAIN_PREFIX}clang)
+find_program(CMAKE_AR ${TOOLCHAIN_PREFIX}ar)
+find_program(CMAKE_LD ${TOOLCHAIN_PREFIX}ar)
+find_program(CMAKE_OBJCOPY ${TOOLCHAIN_PREFIX}objcopy)
+find_program(CMAKE_OBJDUMP ${TOOLCHAIN_PREFIX}objdump)
+
+add_compile_options(--sysroot=${CROSS_ROOTFS})
+add_compile_options(-fPIE)
+add_compile_options(-mfloat-abi=soft)
+include_directories(SYSTEM ${CROSS_NDK_TOOLCHAIN}/include/c++/4.9.x/)
+include_directories(SYSTEM ${CROSS_NDK_TOOLCHAIN}/include/c++/4.9.x/arm-linux-androideabi/)
+
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} -B ${CROSS_ROOTFS}/usr/lib/gcc/${TOOLCHAIN}")
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} -L${CROSS_ROOTFS}/lib/${TOOLCHAIN}")
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} --sysroot=${CROSS_ROOTFS}")
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} -fPIE -pie")
+
+set(CMAKE_EXE_LINKER_FLAGS    "${CMAKE_EXE_LINKER_FLAGS}    ${CROSS_LINK_FLAGS}" CACHE STRING "" FORCE)
+set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${CROSS_LINK_FLAGS}" CACHE STRING "" FORCE)
+set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${CROSS_LINK_FLAGS}" CACHE STRING "" FORCE)
+
+set(CMAKE_FIND_ROOT_PATH "${CROSS_ROOTFS}")
+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
diff --git a/eng/common/cross/android/arm64/toolchain.cmake b/eng/common/cross/android/arm64/toolchain.cmake
new file mode 100644
index 0000000..2941589
--- /dev/null
+++ b/eng/common/cross/android/arm64/toolchain.cmake
@@ -0,0 +1,42 @@
+set(CROSS_NDK_TOOLCHAIN $ENV{ROOTFS_DIR}/../)
+set(CROSS_ROOTFS ${CROSS_NDK_TOOLCHAIN}/sysroot)
+set(CLR_CMAKE_PLATFORM_ANDROID "Android")
+
+set(CMAKE_SYSTEM_NAME Linux)
+set(CMAKE_SYSTEM_VERSION 1)
+set(CMAKE_SYSTEM_PROCESSOR aarch64)
+
+## Specify the toolchain
+set(TOOLCHAIN "aarch64-linux-android")
+set(CMAKE_PREFIX_PATH ${CROSS_NDK_TOOLCHAIN})
+set(TOOLCHAIN_PREFIX ${TOOLCHAIN}-)
+
+find_program(CMAKE_C_COMPILER ${TOOLCHAIN_PREFIX}clang)
+find_program(CMAKE_CXX_COMPILER ${TOOLCHAIN_PREFIX}clang++)
+find_program(CMAKE_ASM_COMPILER ${TOOLCHAIN_PREFIX}clang)
+find_program(CMAKE_AR ${TOOLCHAIN_PREFIX}ar)
+find_program(CMAKE_LD ${TOOLCHAIN_PREFIX}ar)
+find_program(CMAKE_OBJCOPY ${TOOLCHAIN_PREFIX}objcopy)
+find_program(CMAKE_OBJDUMP ${TOOLCHAIN_PREFIX}objdump)
+
+add_compile_options(--sysroot=${CROSS_ROOTFS})
+add_compile_options(-fPIE)
+
+## Needed for Android or bionic specific conditionals
+add_compile_options(-D__ANDROID__)
+add_compile_options(-D__BIONIC__)
+
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} -B ${CROSS_ROOTFS}/usr/lib/gcc/${TOOLCHAIN}")
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} -L${CROSS_ROOTFS}/lib/${TOOLCHAIN}")
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} --sysroot=${CROSS_ROOTFS}")
+set(CROSS_LINK_FLAGS "${CROSS_LINK_FLAGS} -fPIE -pie")
+
+set(CMAKE_EXE_LINKER_FLAGS    "${CMAKE_EXE_LINKER_FLAGS}    ${CROSS_LINK_FLAGS}" CACHE STRING "" FORCE)
+set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${CROSS_LINK_FLAGS}" CACHE STRING "" FORCE)
+set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${CROSS_LINK_FLAGS}" CACHE STRING "" FORCE)
+
+set(CMAKE_FIND_ROOT_PATH "${CROSS_ROOTFS}")
+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
diff --git a/eng/common/cross/arm/sources.list.bionic b/eng/common/cross/arm/sources.list.bionic
new file mode 100644
index 0000000..2109557
--- /dev/null
+++ b/eng/common/cross/arm/sources.list.bionic
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted universe multiverse
diff --git a/eng/common/cross/arm/sources.list.jessie b/eng/common/cross/arm/sources.list.jessie
new file mode 100644
index 0000000..4d142ac
--- /dev/null
+++ b/eng/common/cross/arm/sources.list.jessie
@@ -0,0 +1,3 @@
+# Debian (sid)   # UNSTABLE
+deb http://ftp.debian.org/debian/ sid main contrib non-free
+deb-src http://ftp.debian.org/debian/ sid main contrib non-free
diff --git a/eng/common/cross/arm/sources.list.trusty b/eng/common/cross/arm/sources.list.trusty
new file mode 100644
index 0000000..07d8f88
--- /dev/null
+++ b/eng/common/cross/arm/sources.list.trusty
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm/sources.list.vivid b/eng/common/cross/arm/sources.list.vivid
new file mode 100644
index 0000000..0b1215e
--- /dev/null
+++ b/eng/common/cross/arm/sources.list.vivid
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm/sources.list.wily b/eng/common/cross/arm/sources.list.wily
new file mode 100644
index 0000000..e23d1e0
--- /dev/null
+++ b/eng/common/cross/arm/sources.list.wily
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ wily main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ wily-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ wily-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ wily-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm/sources.list.xenial b/eng/common/cross/arm/sources.list.xenial
new file mode 100644
index 0000000..eacd86b
--- /dev/null
+++ b/eng/common/cross/arm/sources.list.xenial
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm/sources.list.zesty b/eng/common/cross/arm/sources.list.zesty
new file mode 100644
index 0000000..ea2c14a
--- /dev/null
+++ b/eng/common/cross/arm/sources.list.zesty
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty-security main restricted universe multiverse
diff --git a/eng/common/cross/arm/trusty-lttng-2.4.patch b/eng/common/cross/arm/trusty-lttng-2.4.patch
new file mode 100644
index 0000000..8e4dd7a
--- /dev/null
+++ b/eng/common/cross/arm/trusty-lttng-2.4.patch
@@ -0,0 +1,71 @@
+From e72c9d7ead60e3317bd6d1fade995c07021c947b Mon Sep 17 00:00:00 2001
+From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+Date: Thu, 7 May 2015 13:25:04 -0400
+Subject: [PATCH] Fix: building probe providers with C++ compiler
+
+Robert Daniels wrote:
+> > I'm attempting to use lttng userspace tracing with a C++ application
+> > on an ARM platform. I'm using GCC 4.8.4 on Linux 3.14 with the 2.6
+> > release of lttng. I've compiled lttng-modules, lttng-ust, and
+> > lttng-tools and have been able to get a simple test working with C
+> > code.  When I attempt to run the hello.cxx test on my target it will
+> > segfault.
+>
+>
+> I spent a little time digging into this issue and finally discovered the
+> cause of my segfault with ARM C++ tracepoints.
+>
+> There is a struct called 'lttng_event' in ust-events.h which contains an
+> empty union 'u'.  This was the cause of my issue.  Under C, this empty union
+> compiles to a zero byte member while under C++ it compiles to a one byte
+> member, and in my case was four-byte aligned which caused my C++ code to
+> have the 'cds_list_head node' offset incorrectly by four bytes.  This lead
+> to an incorrect linked list structure which caused my issue.
+>
+> Since this union is empty, I simply removed it from the struct and everything
+> worked correctly.
+>
+> I don't know the history or purpose behind this empty union so I'd like to
+> know if this is a safe fix.  If it is I can submit a patch with the union
+> removed.
+
+That's a very nice catch!
+
+We do not support building tracepoint probe provider with
+g++ yet, as stated in lttng-ust(3):
+
+"- Note for C++ support: although an application instrumented with
+   tracepoints can be compiled with g++, tracepoint probes should be
+   compiled with gcc (only tested with gcc so far)."
+
+However, if it works fine with this fix, then I'm tempted to take it,
+especially because removing the empty union does not appear to affect
+the layout of struct lttng_event as seen from liblttng-ust, which must
+be compiled with a C compiler,  and from probe providers compiled with
+a C compiler. So all we are changing is the layout of a probe provider
+compiled with a C++ compiler, which is anyway buggy at the moment,
+because it is not compatible with the layout expected by liblttng-ust
+compiled with a C compiler.
+
+Reported-by: Robert Daniels <robert.daniels@vantagecontrols.com>
+Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+---
+ include/lttng/ust-events.h | 2 --
+ 1 file changed, 2 deletions(-)
+
+diff --git a/usr/include/lttng/ust-events.h b/usr/include/lttng/ust-events.h
+index 328a875..3d7a274 100644
+--- a/usr/include/lttng/ust-events.h
++++ b/usr/include/lttng/ust-events.h
+@@ -407,8 +407,6 @@ struct lttng_event {
+ 	void *_deprecated1;
+ 	struct lttng_ctx *ctx;
+ 	enum lttng_ust_instrumentation instrumentation;
+-	union {
+-	} u;
+ 	struct cds_list_head node;		/* Event list in session */
+ 	struct cds_list_head _deprecated2;
+ 	void *_deprecated3;
+-- 
+2.7.4
+
diff --git a/eng/common/cross/arm/trusty.patch b/eng/common/cross/arm/trusty.patch
new file mode 100644
index 0000000..2f2972f
--- /dev/null
+++ b/eng/common/cross/arm/trusty.patch
@@ -0,0 +1,97 @@
+diff -u -r a/usr/include/urcu/uatomic/generic.h b/usr/include/urcu/uatomic/generic.h
+--- a/usr/include/urcu/uatomic/generic.h	2014-03-28 06:04:42.000000000 +0900
++++ b/usr/include/urcu/uatomic/generic.h	2017-02-13 10:35:21.189927116 +0900
+@@ -65,17 +65,17 @@
+ 	switch (len) {
+ #ifdef UATOMIC_HAS_ATOMIC_BYTE
+ 	case 1:
+-		return __sync_val_compare_and_swap_1(addr, old, _new);
++		return __sync_val_compare_and_swap_1((uint8_t *) addr, old, _new);
+ #endif
+ #ifdef UATOMIC_HAS_ATOMIC_SHORT
+ 	case 2:
+-		return __sync_val_compare_and_swap_2(addr, old, _new);
++		return __sync_val_compare_and_swap_2((uint16_t *) addr, old, _new);
+ #endif
+ 	case 4:
+-		return __sync_val_compare_and_swap_4(addr, old, _new);
++		return __sync_val_compare_and_swap_4((uint32_t *) addr, old, _new);
+ #if (CAA_BITS_PER_LONG == 64)
+ 	case 8:
+-		return __sync_val_compare_and_swap_8(addr, old, _new);
++		return __sync_val_compare_and_swap_8((uint64_t *) addr, old, _new);
+ #endif
+ 	}
+ 	_uatomic_link_error();
+@@ -100,20 +100,20 @@
+ 	switch (len) {
+ #ifdef UATOMIC_HAS_ATOMIC_BYTE
+ 	case 1:
+-		__sync_and_and_fetch_1(addr, val);
++		__sync_and_and_fetch_1((uint8_t *) addr, val);
+ 		return;
+ #endif
+ #ifdef UATOMIC_HAS_ATOMIC_SHORT
+ 	case 2:
+-		__sync_and_and_fetch_2(addr, val);
++		__sync_and_and_fetch_2((uint16_t *) addr, val);
+ 		return;
+ #endif
+ 	case 4:
+-		__sync_and_and_fetch_4(addr, val);
++		__sync_and_and_fetch_4((uint32_t *) addr, val);
+ 		return;
+ #if (CAA_BITS_PER_LONG == 64)
+ 	case 8:
+-		__sync_and_and_fetch_8(addr, val);
++		__sync_and_and_fetch_8((uint64_t *) addr, val);
+ 		return;
+ #endif
+ 	}
+@@ -139,20 +139,20 @@
+ 	switch (len) {
+ #ifdef UATOMIC_HAS_ATOMIC_BYTE
+ 	case 1:
+-		__sync_or_and_fetch_1(addr, val);
++		__sync_or_and_fetch_1((uint8_t *) addr, val);
+ 		return;
+ #endif
+ #ifdef UATOMIC_HAS_ATOMIC_SHORT
+ 	case 2:
+-		__sync_or_and_fetch_2(addr, val);
++		__sync_or_and_fetch_2((uint16_t *) addr, val);
+ 		return;
+ #endif
+ 	case 4:
+-		__sync_or_and_fetch_4(addr, val);
++		__sync_or_and_fetch_4((uint32_t *) addr, val);
+ 		return;
+ #if (CAA_BITS_PER_LONG == 64)
+ 	case 8:
+-		__sync_or_and_fetch_8(addr, val);
++		__sync_or_and_fetch_8((uint64_t *) addr, val);
+ 		return;
+ #endif
+ 	}
+@@ -180,17 +180,17 @@
+ 	switch (len) {
+ #ifdef UATOMIC_HAS_ATOMIC_BYTE
+ 	case 1:
+-		return __sync_add_and_fetch_1(addr, val);
++		return __sync_add_and_fetch_1((uint8_t *) addr, val);
+ #endif
+ #ifdef UATOMIC_HAS_ATOMIC_SHORT
+ 	case 2:
+-		return __sync_add_and_fetch_2(addr, val);
++		return __sync_add_and_fetch_2((uint16_t *) addr, val);
+ #endif
+ 	case 4:
+-		return __sync_add_and_fetch_4(addr, val);
++		return __sync_add_and_fetch_4((uint32_t *) addr, val);
+ #if (CAA_BITS_PER_LONG == 64)
+ 	case 8:
+-		return __sync_add_and_fetch_8(addr, val);
++		return __sync_add_and_fetch_8((uint64_t *) addr, val);
+ #endif
+ 	}
+ 	_uatomic_link_error();
diff --git a/eng/common/cross/arm64/sources.list.bionic b/eng/common/cross/arm64/sources.list.bionic
new file mode 100644
index 0000000..2109557
--- /dev/null
+++ b/eng/common/cross/arm64/sources.list.bionic
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted universe multiverse
diff --git a/eng/common/cross/arm64/sources.list.trusty b/eng/common/cross/arm64/sources.list.trusty
new file mode 100644
index 0000000..07d8f88
--- /dev/null
+++ b/eng/common/cross/arm64/sources.list.trusty
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ trusty-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm64/sources.list.vivid b/eng/common/cross/arm64/sources.list.vivid
new file mode 100644
index 0000000..0b1215e
--- /dev/null
+++ b/eng/common/cross/arm64/sources.list.vivid
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ vivid-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ vivid-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm64/sources.list.wily b/eng/common/cross/arm64/sources.list.wily
new file mode 100644
index 0000000..e23d1e0
--- /dev/null
+++ b/eng/common/cross/arm64/sources.list.wily
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ wily main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ wily-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ wily-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ wily-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ wily-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm64/sources.list.xenial b/eng/common/cross/arm64/sources.list.xenial
new file mode 100644
index 0000000..eacd86b
--- /dev/null
+++ b/eng/common/cross/arm64/sources.list.xenial
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ xenial-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-security main restricted universe multiverse
\ No newline at end of file
diff --git a/eng/common/cross/arm64/sources.list.zesty b/eng/common/cross/arm64/sources.list.zesty
new file mode 100644
index 0000000..ea2c14a
--- /dev/null
+++ b/eng/common/cross/arm64/sources.list.zesty
@@ -0,0 +1,11 @@
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty-updates main restricted universe
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty-updates main restricted universe
+
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty-backports main restricted
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty-backports main restricted
+
+deb http://ports.ubuntu.com/ubuntu-ports/ zesty-security main restricted universe multiverse
+deb-src http://ports.ubuntu.com/ubuntu-ports/ zesty-security main restricted universe multiverse
diff --git a/eng/common/cross/armel/sources.list.jessie b/eng/common/cross/armel/sources.list.jessie
new file mode 100644
index 0000000..3d9c305
--- /dev/null
+++ b/eng/common/cross/armel/sources.list.jessie
@@ -0,0 +1,3 @@
+# Debian (jessie)   # Stable
+deb http://ftp.debian.org/debian/ jessie main contrib non-free
+deb-src http://ftp.debian.org/debian/ jessie main contrib non-free
diff --git a/eng/common/cross/armel/tizen-build-rootfs.sh b/eng/common/cross/armel/tizen-build-rootfs.sh
new file mode 100644
index 0000000..87c48e7
--- /dev/null
+++ b/eng/common/cross/armel/tizen-build-rootfs.sh
@@ -0,0 +1,44 @@
+#!/usr/bin/env bash
+set -e
+
+__ARM_SOFTFP_CrossDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
+__TIZEN_CROSSDIR="$__ARM_SOFTFP_CrossDir/tizen"
+
+if [[ -z "$ROOTFS_DIR" ]]; then
+    echo "ROOTFS_DIR is not defined."
+    exit 1;
+fi
+
+# Clean-up (TODO-Cleanup: We may already delete  $ROOTFS_DIR at ./cross/build-rootfs.sh.)
+# hk0110
+if [ -d "$ROOTFS_DIR" ]; then
+    umount $ROOTFS_DIR/*
+    rm -rf $ROOTFS_DIR
+fi
+
+TIZEN_TMP_DIR=$ROOTFS_DIR/tizen_tmp
+mkdir -p $TIZEN_TMP_DIR
+
+# Download files
+echo ">>Start downloading files"
+VERBOSE=1 $__ARM_SOFTFP_CrossDir/tizen-fetch.sh $TIZEN_TMP_DIR
+echo "<<Finish downloading files"
+
+echo ">>Start constructing Tizen rootfs"
+TIZEN_RPM_FILES=`ls $TIZEN_TMP_DIR/*.rpm`
+cd $ROOTFS_DIR
+for f in $TIZEN_RPM_FILES; do
+    rpm2cpio $f  | cpio -idm --quiet
+done
+echo "<<Finish constructing Tizen rootfs"
+
+# Cleanup tmp
+rm -rf $TIZEN_TMP_DIR
+
+# Configure Tizen rootfs
+echo ">>Start configuring Tizen rootfs"
+rm ./usr/lib/libunwind.so
+ln -s libunwind.so.8 ./usr/lib/libunwind.so
+ln -sfn asm-arm ./usr/include/asm
+patch -p1 < $__TIZEN_CROSSDIR/tizen.patch
+echo "<<Finish configuring Tizen rootfs"
diff --git a/eng/common/cross/armel/tizen-fetch.sh b/eng/common/cross/armel/tizen-fetch.sh
new file mode 100644
index 0000000..ba16e99
--- /dev/null
+++ b/eng/common/cross/armel/tizen-fetch.sh
@@ -0,0 +1,171 @@
+#!/usr/bin/env bash
+set -e
+
+if [[ -z "${VERBOSE// }" ]] || [ "$VERBOSE" -ne "$VERBOSE" ] 2>/dev/null; then
+	VERBOSE=0
+fi
+
+Log()
+{
+	if [ $VERBOSE -ge $1 ]; then
+		echo ${@:2}
+	fi
+}
+
+Inform()
+{
+	Log 1 -e "\x1B[0;34m$@\x1B[m"
+}
+
+Debug()
+{
+	Log 2 -e "\x1B[0;32m$@\x1B[m"
+}
+
+Error()
+{
+	>&2 Log 0 -e "\x1B[0;31m$@\x1B[m"
+}
+
+Fetch()
+{
+	URL=$1
+	FILE=$2
+	PROGRESS=$3
+	if [ $VERBOSE -ge 1 ] && [ $PROGRESS ]; then
+		CURL_OPT="--progress-bar"
+	else
+		CURL_OPT="--silent"
+	fi
+	curl $CURL_OPT $URL > $FILE
+}
+
+hash curl 2> /dev/null || { Error "Require 'curl' Aborting."; exit 1; }
+hash xmllint 2> /dev/null || { Error "Require 'xmllint' Aborting."; exit 1; }
+hash sha256sum 2> /dev/null || { Error "Require 'sha256sum' Aborting."; exit 1; }
+
+TMPDIR=$1
+if [ ! -d $TMPDIR ]; then
+	TMPDIR=./tizen_tmp
+	Debug "Create temporary directory : $TMPDIR"
+	mkdir -p $TMPDIR 
+fi
+
+TIZEN_URL=http://download.tizen.org/releases/milestone/tizen
+BUILD_XML=build.xml
+REPOMD_XML=repomd.xml
+PRIMARY_XML=primary.xml
+TARGET_URL="http://__not_initialized"
+
+Xpath_get()
+{
+	XPATH_RESULT=''
+	XPATH=$1
+	XML_FILE=$2
+	RESULT=$(xmllint --xpath $XPATH $XML_FILE)
+	if [[ -z ${RESULT// } ]]; then
+		Error "Can not find target from $XML_FILE"
+		Debug "Xpath = $XPATH"
+		exit 1
+	fi
+	XPATH_RESULT=$RESULT
+}
+
+fetch_tizen_pkgs_init()
+{
+	TARGET=$1
+	PROFILE=$2
+	Debug "Initialize TARGET=$TARGET, PROFILE=$PROFILE"
+
+	TMP_PKG_DIR=$TMPDIR/tizen_${PROFILE}_pkgs
+	if [ -d $TMP_PKG_DIR ]; then rm -rf $TMP_PKG_DIR; fi
+	mkdir -p $TMP_PKG_DIR
+
+	PKG_URL=$TIZEN_URL/$PROFILE/latest
+
+	BUILD_XML_URL=$PKG_URL/$BUILD_XML
+	TMP_BUILD=$TMP_PKG_DIR/$BUILD_XML
+	TMP_REPOMD=$TMP_PKG_DIR/$REPOMD_XML
+	TMP_PRIMARY=$TMP_PKG_DIR/$PRIMARY_XML
+	TMP_PRIMARYGZ=${TMP_PRIMARY}.gz
+
+	Fetch $BUILD_XML_URL $TMP_BUILD
+
+	Debug "fetch $BUILD_XML_URL to $TMP_BUILD"
+
+	TARGET_XPATH="//build/buildtargets/buildtarget[@name=\"$TARGET\"]/repo[@type=\"binary\"]/text()"
+	Xpath_get $TARGET_XPATH $TMP_BUILD
+	TARGET_PATH=$XPATH_RESULT
+	TARGET_URL=$PKG_URL/$TARGET_PATH
+
+	REPOMD_URL=$TARGET_URL/repodata/repomd.xml
+	PRIMARY_XPATH='string(//*[local-name()="data"][@type="primary"]/*[local-name()="location"]/@href)'
+
+	Fetch $REPOMD_URL $TMP_REPOMD
+
+	Debug "fetch $REPOMD_URL to $TMP_REPOMD"
+
+	Xpath_get $PRIMARY_XPATH $TMP_REPOMD
+	PRIMARY_XML_PATH=$XPATH_RESULT
+	PRIMARY_URL=$TARGET_URL/$PRIMARY_XML_PATH
+
+	Fetch $PRIMARY_URL $TMP_PRIMARYGZ
+
+	Debug "fetch $PRIMARY_URL to $TMP_PRIMARYGZ"
+
+	gunzip $TMP_PRIMARYGZ 
+
+	Debug "unzip $TMP_PRIMARYGZ to $TMP_PRIMARY" 
+}
+
+fetch_tizen_pkgs()
+{
+	ARCH=$1
+	PACKAGE_XPATH_TPL='string(//*[local-name()="metadata"]/*[local-name()="package"][*[local-name()="name"][text()="_PKG_"]][*[local-name()="arch"][text()="_ARCH_"]]/*[local-name()="location"]/@href)'
+
+	PACKAGE_CHECKSUM_XPATH_TPL='string(//*[local-name()="metadata"]/*[local-name()="package"][*[local-name()="name"][text()="_PKG_"]][*[local-name()="arch"][text()="_ARCH_"]]/*[local-name()="checksum"]/text())'
+
+	for pkg in ${@:2}
+	do
+		Inform "Fetching... $pkg"
+		XPATH=${PACKAGE_XPATH_TPL/_PKG_/$pkg}
+		XPATH=${XPATH/_ARCH_/$ARCH}
+		Xpath_get $XPATH $TMP_PRIMARY
+		PKG_PATH=$XPATH_RESULT
+
+		XPATH=${PACKAGE_CHECKSUM_XPATH_TPL/_PKG_/$pkg}
+		XPATH=${XPATH/_ARCH_/$ARCH}
+		Xpath_get $XPATH $TMP_PRIMARY
+		CHECKSUM=$XPATH_RESULT
+
+		PKG_URL=$TARGET_URL/$PKG_PATH
+		PKG_FILE=$(basename $PKG_PATH)
+		PKG_PATH=$TMPDIR/$PKG_FILE
+
+		Debug "Download $PKG_URL to $PKG_PATH"
+		Fetch $PKG_URL $PKG_PATH true
+
+		echo "$CHECKSUM $PKG_PATH" | sha256sum -c - > /dev/null
+		if [ $? -ne 0 ]; then
+			Error "Fail to fetch $PKG_URL to $PKG_PATH"
+			Debug "Checksum = $CHECKSUM"
+			exit 1
+		fi
+	done
+}
+
+Inform "Initialize arm base"
+fetch_tizen_pkgs_init standard base
+Inform "fetch common packages"
+fetch_tizen_pkgs armv7l gcc glibc glibc-devel libicu libicu-devel
+fetch_tizen_pkgs noarch linux-glibc-devel
+Inform "fetch coreclr packages"
+fetch_tizen_pkgs armv7l lldb lldb-devel libgcc libstdc++ libstdc++-devel libunwind libunwind-devel tizen-release lttng-ust-devel lttng-ust userspace-rcu-devel userspace-rcu
+Inform "fetch corefx packages"
+fetch_tizen_pkgs armv7l libcom_err libcom_err-devel zlib zlib-devel libopenssl libopenssl-devel krb5 krb5-devel libcurl libcurl-devel
+
+Inform "Initialize standard unified"
+fetch_tizen_pkgs_init standard unified
+Inform "fetch corefx packages"
+fetch_tizen_pkgs armv7l gssdp gssdp-devel
+
diff --git a/eng/common/cross/armel/tizen/tizen-dotnet.ks b/eng/common/cross/armel/tizen/tizen-dotnet.ks
new file mode 100644
index 0000000..506d455
--- /dev/null
+++ b/eng/common/cross/armel/tizen/tizen-dotnet.ks
@@ -0,0 +1,50 @@
+lang en_US.UTF-8
+keyboard us
+timezone --utc Asia/Seoul
+
+part / --fstype="ext4" --size=3500 --ondisk=mmcblk0 --label rootfs --fsoptions=defaults,noatime
+
+rootpw tizen
+desktop --autologinuser=root
+user --name root  --groups audio,video --password 'tizen'
+
+repo --name=standard  --baseurl=http://download.tizen.org/releases/milestone/tizen/unified/latest/repos/standard/packages/ --ssl_verify=no
+repo --name=base      --baseurl=http://download.tizen.org/releases/milestone/tizen/base/latest/repos/standard/packages/ --ssl_verify=no
+
+%packages
+tar
+gzip
+
+sed
+grep
+gawk
+perl
+
+binutils
+findutils
+util-linux
+lttng-ust
+userspace-rcu
+procps-ng
+tzdata
+ca-certificates
+
+
+### Core FX
+libicu
+libunwind
+iputils
+zlib
+krb5
+libcurl
+libopenssl
+
+%end
+
+%post
+
+### Update /tmp privilege
+chmod 777 /tmp
+####################################
+
+%end
diff --git a/eng/common/cross/armel/tizen/tizen.patch b/eng/common/cross/armel/tizen/tizen.patch
new file mode 100644
index 0000000..d223427
--- /dev/null
+++ b/eng/common/cross/armel/tizen/tizen.patch
@@ -0,0 +1,18 @@
+diff -u -r a/usr/lib/libc.so b/usr/lib/libc.so
+--- a/usr/lib/libc.so	2016-12-30 23:00:08.284951863 +0900
++++ b/usr/lib/libc.so	2016-12-30 23:00:32.140951815 +0900
+@@ -2,4 +2,4 @@
+    Use the shared library, but some functions are only in
+    the static library, so try that secondarily.  */
+ OUTPUT_FORMAT(elf32-littlearm)
+-GROUP ( /lib/libc.so.6 /usr/lib/libc_nonshared.a  AS_NEEDED ( /lib/ld-linux.so.3 ) )
++GROUP ( libc.so.6 libc_nonshared.a  AS_NEEDED ( ld-linux.so.3 ) )
+diff -u -r a/usr/lib/libpthread.so b/usr/lib/libpthread.so
+--- a/usr/lib/libpthread.so	2016-12-30 23:00:19.408951841 +0900
++++ b/usr/lib/libpthread.so	2016-12-30 23:00:39.068951801 +0900
+@@ -2,4 +2,4 @@
+    Use the shared library, but some functions are only in
+    the static library, so try that secondarily.  */
+ OUTPUT_FORMAT(elf32-littlearm)
+-GROUP ( /lib/libpthread.so.0 /usr/lib/libpthread_nonshared.a )
++GROUP ( libpthread.so.0 libpthread_nonshared.a )
diff --git a/eng/common/cross/build-android-rootfs.sh b/eng/common/cross/build-android-rootfs.sh
new file mode 100644
index 0000000..adceda8
--- /dev/null
+++ b/eng/common/cross/build-android-rootfs.sh
@@ -0,0 +1,137 @@
+#!/usr/bin/env bash
+set -e
+__NDK_Version=r14
+
+usage()
+{
+    echo "Creates a toolchain and sysroot used for cross-compiling for Android."
+    echo.
+    echo "Usage: $0 [BuildArch] [ApiLevel]"
+    echo.
+    echo "BuildArch is the target architecture of Android. Currently only arm64 is supported."
+    echo "ApiLevel is the target Android API level. API levels usually match to Android releases. See https://source.android.com/source/build-numbers.html"
+    echo.
+    echo "By default, the toolchain and sysroot will be generated in cross/android-rootfs/toolchain/[BuildArch]. You can change this behavior"
+    echo "by setting the TOOLCHAIN_DIR environment variable"
+    echo.
+    echo "By default, the NDK will be downloaded into the cross/android-rootfs/android-ndk-$__NDK_Version directory. If you already have an NDK installation,"
+    echo "you can set the NDK_DIR environment variable to have this script use that installation of the NDK."
+    echo "By default, this script will generate a file, android_platform, in the root of the ROOTFS_DIR directory that contains the RID for the supported and tested Android build: android.21-arm64. This file is to replace '/etc/os-release', which is not available for Android."
+    exit 1
+}
+
+__ApiLevel=21 # The minimum platform for arm64 is API level 21
+__BuildArch=arm64
+__AndroidArch=aarch64
+__AndroidToolchain=aarch64-linux-android
+
+for i in "$@"
+    do
+        lowerI="$(echo $i | awk '{print tolower($0)}')"
+        case $lowerI in
+        -?|-h|--help)
+            usage
+            exit 1
+            ;;
+        arm64)
+            __BuildArch=arm64
+            __AndroidArch=aarch64
+            __AndroidToolchain=aarch64-linux-android
+            ;;
+        arm)
+            __BuildArch=arm
+            __AndroidArch=arm
+            __AndroidToolchain=arm-linux-androideabi
+            ;;
+        *[0-9])
+            __ApiLevel=$i
+            ;;
+        *)
+            __UnprocessedBuildArgs="$__UnprocessedBuildArgs $i"
+            ;;
+    esac
+done
+
+# Obtain the location of the bash script to figure out where the root of the repo is.
+__CrossDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
+
+__Android_Cross_Dir="$__CrossDir/android-rootfs"
+__NDK_Dir="$__Android_Cross_Dir/android-ndk-$__NDK_Version"
+__libunwind_Dir="$__Android_Cross_Dir/libunwind"
+__lldb_Dir="$__Android_Cross_Dir/lldb"
+__ToolchainDir="$__Android_Cross_Dir/toolchain/$__BuildArch"
+
+if [[ -n "$TOOLCHAIN_DIR" ]]; then
+    __ToolchainDir=$TOOLCHAIN_DIR
+fi
+
+if [[ -n "$NDK_DIR" ]]; then
+    __NDK_Dir=$NDK_DIR
+fi
+
+echo "Target API level: $__ApiLevel"
+echo "Target architecture: $__BuildArch"
+echo "NDK location: $__NDK_Dir"
+echo "Target Toolchain location: $__ToolchainDir"
+
+# Download the NDK if required
+if [ ! -d $__NDK_Dir ]; then
+    echo Downloading the NDK into $__NDK_Dir
+    mkdir -p $__NDK_Dir
+    wget -nv -nc --show-progress https://dl.google.com/android/repository/android-ndk-$__NDK_Version-linux-x86_64.zip -O $__Android_Cross_Dir/android-ndk-$__NDK_Version-linux-x86_64.zip
+    unzip -q $__Android_Cross_Dir/android-ndk-$__NDK_Version-linux-x86_64.zip -d $__Android_Cross_Dir
+fi
+
+if [ ! -d $__lldb_Dir ]; then
+    mkdir -p $__lldb_Dir
+    echo Downloading LLDB into $__lldb_Dir
+    wget -nv -nc --show-progress https://dl.google.com/android/repository/lldb-2.3.3614996-linux-x86_64.zip -O $__Android_Cross_Dir/lldb-2.3.3614996-linux-x86_64.zip
+    unzip -q $__Android_Cross_Dir/lldb-2.3.3614996-linux-x86_64.zip -d $__lldb_Dir
+fi
+
+# Create the RootFS for both arm64 as well as aarch
+rm -rf $__Android_Cross_Dir/toolchain
+
+echo Generating the $__BuildArch toolchain
+$__NDK_Dir/build/tools/make_standalone_toolchain.py --arch $__BuildArch --api $__ApiLevel --install-dir $__ToolchainDir
+
+# Install the required packages into the toolchain
+# TODO: Add logic to get latest pkg version instead of specific version number
+rm -rf $__Android_Cross_Dir/deb/
+rm -rf $__Android_Cross_Dir/tmp
+
+mkdir -p $__Android_Cross_Dir/deb/
+mkdir -p $__Android_Cross_Dir/tmp/$arch/
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libicu_60.2_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/libicu_60.2_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libicu-dev_60.2_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/libicu-dev_60.2_$__AndroidArch.deb
+
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libandroid-glob-dev_0.4_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/libandroid-glob-dev_0.4_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libandroid-glob_0.4_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/libandroid-glob_0.4_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libandroid-support-dev_22_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/libandroid-support-dev_22_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libandroid-support_22_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/libandroid-support_22_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/liblzma-dev_5.2.3_$__AndroidArch.deb  -O $__Android_Cross_Dir/deb/liblzma-dev_5.2.3_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/liblzma_5.2.3_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/liblzma_5.2.3_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libunwind-dev_1.2.20170304_$__AndroidArch.deb  -O $__Android_Cross_Dir/deb/libunwind-dev_1.2.20170304_$__AndroidArch.deb
+wget -nv -nc http://termux.net/dists/stable/main/binary-$__AndroidArch/libunwind_1.2.20170304_$__AndroidArch.deb -O $__Android_Cross_Dir/deb/libunwind_1.2.20170304_$__AndroidArch.deb
+
+echo Unpacking Termux packages
+dpkg -x $__Android_Cross_Dir/deb/libicu_60.2_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/libicu-dev_60.2_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/libandroid-glob-dev_0.4_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/libandroid-glob_0.4_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/libandroid-support-dev_22_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/libandroid-support_22_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/liblzma-dev_5.2.3_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/liblzma_5.2.3_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/libunwind-dev_1.2.20170304_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+dpkg -x $__Android_Cross_Dir/deb/libunwind_1.2.20170304_$__AndroidArch.deb $__Android_Cross_Dir/tmp/$__AndroidArch/
+
+cp -R $__Android_Cross_Dir/tmp/$__AndroidArch/data/data/com.termux/files/usr/* $__ToolchainDir/sysroot/usr/
+
+# Generate platform file for build.sh script to assign to __DistroRid
+echo "Generating platform file..."
+
+echo "RID=android.21-arm64" > $__ToolchainDir/sysroot/android_platform
+echo Now run:
+echo CONFIG_DIR=\`realpath cross/android/$__BuildArch\` ROOTFS_DIR=\`realpath $__ToolchainDir/sysroot\` ./build.sh cross $__BuildArch skipgenerateversion skipnuget cmakeargs -DENABLE_LLDBPLUGIN=0
+
diff --git a/eng/common/cross/build-rootfs.sh b/eng/common/cross/build-rootfs.sh
new file mode 100644
index 0000000..805948c
--- /dev/null
+++ b/eng/common/cross/build-rootfs.sh
@@ -0,0 +1,210 @@
+#!/usr/bin/env bash
+
+usage()
+{
+    echo "Usage: $0 [BuildArch] [LinuxCodeName] [lldbx.y] [--skipunmount]"
+    echo "BuildArch can be: arm(default), armel, arm64, x86"
+    echo "LinuxCodeName - optional, Code name for Linux, can be: trusty(default), vivid, wily, xenial, zesty, bionic, alpine. If BuildArch is armel, LinuxCodeName is jessie(default) or tizen."
+    echo "lldbx.y - optional, LLDB version, can be: lldb3.6(default), lldb3.8, lldb3.9, lldb4.0, no-lldb. Ignored for alpine"
+    echo "--skipunmount - optional, will skip the unmount of rootfs folder."
+    exit 1
+}
+
+__LinuxCodeName=trusty
+__CrossDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
+__InitialDir=$PWD
+__BuildArch=arm
+__UbuntuArch=armhf
+__UbuntuRepo="http://ports.ubuntu.com/"
+__LLDB_Package="lldb-3.6-dev"
+__SkipUnmount=0
+
+# base development support
+__UbuntuPackages="build-essential"
+
+__AlpinePackages="alpine-base"
+__AlpinePackages+=" build-base"
+__AlpinePackages+=" linux-headers"
+__AlpinePackages+=" lldb-dev"
+__AlpinePackages+=" llvm-dev"
+
+# symlinks fixer
+__UbuntuPackages+=" symlinks"
+
+# CoreCLR and CoreFX dependencies
+__UbuntuPackages+=" libicu-dev"
+__UbuntuPackages+=" liblttng-ust-dev"
+__UbuntuPackages+=" libunwind8-dev"
+
+__AlpinePackages+=" gettext-dev"
+__AlpinePackages+=" icu-dev"
+__AlpinePackages+=" libunwind-dev"
+__AlpinePackages+=" lttng-ust-dev"
+
+# CoreFX dependencies
+__UbuntuPackages+=" libcurl4-openssl-dev"
+__UbuntuPackages+=" libkrb5-dev"
+__UbuntuPackages+=" libssl-dev"
+__UbuntuPackages+=" zlib1g-dev"
+
+__AlpinePackages+=" curl-dev"
+__AlpinePackages+=" krb5-dev"
+__AlpinePackages+=" openssl-dev"
+__AlpinePackages+=" zlib-dev"
+
+__UnprocessedBuildArgs=
+for i in "$@" ; do
+    lowerI="$(echo $i | awk '{print tolower($0)}')"
+    case $lowerI in
+        -?|-h|--help)
+            usage
+            exit 1
+            ;;
+        arm)
+            __BuildArch=arm
+            __UbuntuArch=armhf
+            __AlpineArch=armhf
+            __QEMUArch=arm
+            ;;
+        arm64)
+            __BuildArch=arm64
+            __UbuntuArch=arm64
+            __AlpineArch=aarch64
+            __QEMUArch=aarch64
+            ;;
+        armel)
+            __BuildArch=armel
+            __UbuntuArch=armel
+            __UbuntuRepo="http://ftp.debian.org/debian/"
+            __LinuxCodeName=jessie
+            ;;
+        x86)
+            __BuildArch=x86
+            __UbuntuArch=i386
+            __UbuntuRepo="http://archive.ubuntu.com/ubuntu/"
+            ;;
+        lldb3.6)
+            __LLDB_Package="lldb-3.6-dev"
+            ;;
+        lldb3.8)
+            __LLDB_Package="lldb-3.8-dev"
+            ;;
+        lldb3.9)
+            __LLDB_Package="liblldb-3.9-dev"
+            ;;
+        lldb4.0)
+            __LLDB_Package="liblldb-4.0-dev"
+            ;;
+        no-lldb)
+            unset __LLDB_Package
+            ;;
+        vivid)
+            if [ "$__LinuxCodeName" != "jessie" ]; then
+                __LinuxCodeName=vivid
+            fi
+            ;;
+        wily)
+            if [ "$__LinuxCodeName" != "jessie" ]; then
+                __LinuxCodeName=wily
+            fi
+            ;;
+        xenial)
+            if [ "$__LinuxCodeName" != "jessie" ]; then
+                __LinuxCodeName=xenial
+            fi
+            ;;
+        zesty)
+            if [ "$__LinuxCodeName" != "jessie" ]; then
+                __LinuxCodeName=zesty
+            fi
+            ;;
+        bionic)
+            if [ "$__LinuxCodeName" != "jessie" ]; then
+                __LinuxCodeName=bionic
+            fi
+            ;;
+        jessie)
+            __LinuxCodeName=jessie
+            __UbuntuRepo="http://ftp.debian.org/debian/"
+            ;;
+        tizen)
+            if [ "$__BuildArch" != "armel" ]; then
+                echo "Tizen is available only for armel."
+                usage;
+                exit 1;
+            fi
+            __LinuxCodeName=
+            __UbuntuRepo=
+            __Tizen=tizen
+            ;;
+        alpine)
+            __LinuxCodeName=alpine
+            __UbuntuRepo=
+            ;;
+        --skipunmount)
+            __SkipUnmount=1
+            ;;
+        *)
+            __UnprocessedBuildArgs="$__UnprocessedBuildArgs $i"
+            ;;
+    esac
+done
+
+if [ "$__BuildArch" == "armel" ]; then
+    __LLDB_Package="lldb-3.5-dev"
+fi
+__UbuntuPackages+=" ${__LLDB_Package:-}"
+
+__RootfsDir="$__CrossDir/rootfs/$__BuildArch"
+
+if [[ -n "$ROOTFS_DIR" ]]; then
+    __RootfsDir=$ROOTFS_DIR
+fi
+
+if [ -d "$__RootfsDir" ]; then
+    if [ $__SkipUnmount == 0 ]; then
+        umount $__RootfsDir/*
+    fi
+    rm -rf $__RootfsDir
+fi
+
+if [[ "$__LinuxCodeName" == "alpine" ]]; then
+    __ApkToolsVersion=2.9.1
+    __AlpineVersion=3.7
+    __ApkToolsDir=$(mktemp -d)
+    wget https://github.com/alpinelinux/apk-tools/releases/download/v$__ApkToolsVersion/apk-tools-$__ApkToolsVersion-x86_64-linux.tar.gz -P $__ApkToolsDir
+    tar -xf $__ApkToolsDir/apk-tools-$__ApkToolsVersion-x86_64-linux.tar.gz -C $__ApkToolsDir
+    mkdir -p $__RootfsDir/usr/bin
+    cp -v /usr/bin/qemu-$__QEMUArch-static $__RootfsDir/usr/bin
+    $__ApkToolsDir/apk-tools-$__ApkToolsVersion/apk \
+      -X http://dl-cdn.alpinelinux.org/alpine/v$__AlpineVersion/main \
+      -X http://dl-cdn.alpinelinux.org/alpine/v$__AlpineVersion/community \
+      -X http://dl-cdn.alpinelinux.org/alpine/edge/testing \
+      -U --allow-untrusted --root $__RootfsDir --arch $__AlpineArch --initdb \
+      add $__AlpinePackages
+    rm -r $__ApkToolsDir
+elif [[ -n $__LinuxCodeName ]]; then
+    qemu-debootstrap --arch $__UbuntuArch $__LinuxCodeName $__RootfsDir $__UbuntuRepo
+    cp $__CrossDir/$__BuildArch/sources.list.$__LinuxCodeName $__RootfsDir/etc/apt/sources.list
+    chroot $__RootfsDir apt-get update
+    chroot $__RootfsDir apt-get -f -y install
+    chroot $__RootfsDir apt-get -y install $__UbuntuPackages
+    chroot $__RootfsDir symlinks -cr /usr
+
+    if [ $__SkipUnmount == 0 ]; then
+        umount $__RootfsDir/*
+    fi
+
+    if [[ "$__BuildArch" == "arm" && "$__LinuxCodeName" == "trusty" ]]; then
+        pushd $__RootfsDir
+        patch -p1 < $__CrossDir/$__BuildArch/trusty.patch
+        patch -p1 < $__CrossDir/$__BuildArch/trusty-lttng-2.4.patch
+        popd
+    fi
+elif [ "$__Tizen" == "tizen" ]; then
+    ROOTFS_DIR=$__RootfsDir $__CrossDir/$__BuildArch/tizen-build-rootfs.sh
+else
+    echo "Unsupported target platform."
+    usage;
+    exit 1
+fi
diff --git a/eng/common/cross/toolchain.cmake b/eng/common/cross/toolchain.cmake
new file mode 100644
index 0000000..071d411
--- /dev/null
+++ b/eng/common/cross/toolchain.cmake
@@ -0,0 +1,138 @@
+set(CROSS_ROOTFS $ENV{ROOTFS_DIR})
+
+set(TARGET_ARCH_NAME $ENV{TARGET_BUILD_ARCH})
+set(CMAKE_SYSTEM_NAME Linux)
+set(CMAKE_SYSTEM_VERSION 1)
+
+if(TARGET_ARCH_NAME STREQUAL "armel")
+  set(CMAKE_SYSTEM_PROCESSOR armv7l)
+  set(TOOLCHAIN "arm-linux-gnueabi")
+  if("$ENV{__DistroRid}" MATCHES "tizen.*")
+    set(TIZEN_TOOLCHAIN "armv7l-tizen-linux-gnueabi/6.2.1")
+  endif()
+elseif(TARGET_ARCH_NAME STREQUAL "arm")
+  set(CMAKE_SYSTEM_PROCESSOR armv7l)
+  if(EXISTS ${CROSS_ROOTFS}/usr/lib/gcc/armv6-alpine-linux-musleabihf)
+    set(TOOLCHAIN "armv6-alpine-linux-musleabihf")
+  else()
+    set(TOOLCHAIN "arm-linux-gnueabihf")
+  endif()
+elseif(TARGET_ARCH_NAME STREQUAL "arm64")
+  set(CMAKE_SYSTEM_PROCESSOR aarch64)
+  if(EXISTS ${CROSS_ROOTFS}/usr/lib/gcc/aarch64-alpine-linux-musl)
+    set(TOOLCHAIN "aarch64-alpine-linux-musl")
+  else()
+    set(TOOLCHAIN "aarch64-linux-gnu")
+  endif()
+elseif(TARGET_ARCH_NAME STREQUAL "x86")
+  set(CMAKE_SYSTEM_PROCESSOR i686)
+  set(TOOLCHAIN "i686-linux-gnu")
+else()
+  message(FATAL_ERROR "Arch is ${TARGET_ARCH_NAME}. Only armel, arm, arm64 and x86 are supported!")
+endif()
+
+# Specify include paths
+if(TARGET_ARCH_NAME STREQUAL "armel")
+  if(DEFINED TIZEN_TOOLCHAIN)
+    include_directories(SYSTEM ${CROSS_ROOTFS}/usr/lib/gcc/${TIZEN_TOOLCHAIN}/include/c++/)
+    include_directories(SYSTEM ${CROSS_ROOTFS}/usr/lib/gcc/${TIZEN_TOOLCHAIN}/include/c++/armv7l-tizen-linux-gnueabi)
+  endif()
+endif()
+
+# add_compile_param - adds only new options without duplicates.
+# arg0 - list with result options, arg1 - list with new options.
+# arg2 - optional argument, quick summary string for optional using CACHE FORCE mode.
+macro(add_compile_param)
+  if(NOT ${ARGC} MATCHES "^(2|3)$")
+    message(FATAL_ERROR "Wrong using add_compile_param! Two or three parameters must be given! See add_compile_param description.")
+  endif()
+  foreach(OPTION ${ARGV1})
+    if(NOT ${ARGV0} MATCHES "${OPTION}($| )")
+      set(${ARGV0} "${${ARGV0}} ${OPTION}")
+      if(${ARGC} EQUAL "3") # CACHE FORCE mode
+        set(${ARGV0} "${${ARGV0}}" CACHE STRING "${ARGV2}" FORCE)
+      endif()
+    endif()
+  endforeach()
+endmacro()
+
+# Specify link flags
+add_compile_param(CROSS_LINK_FLAGS "--sysroot=${CROSS_ROOTFS}")
+add_compile_param(CROSS_LINK_FLAGS "--gcc-toolchain=${CROSS_ROOTFS}/usr")
+add_compile_param(CROSS_LINK_FLAGS "--target=${TOOLCHAIN}")
+add_compile_param(CROSS_LINK_FLAGS "-fuse-ld=gold")
+
+if(TARGET_ARCH_NAME STREQUAL "armel")
+  if(DEFINED TIZEN_TOOLCHAIN) # For Tizen only
+    add_compile_param(CROSS_LINK_FLAGS "-B${CROSS_ROOTFS}/usr/lib/gcc/${TIZEN_TOOLCHAIN}")
+    add_compile_param(CROSS_LINK_FLAGS "-L${CROSS_ROOTFS}/lib")
+    add_compile_param(CROSS_LINK_FLAGS "-L${CROSS_ROOTFS}/usr/lib")
+    add_compile_param(CROSS_LINK_FLAGS "-L${CROSS_ROOTFS}/usr/lib/gcc/${TIZEN_TOOLCHAIN}")
+  endif()
+elseif(TARGET_ARCH_NAME STREQUAL "x86")
+  add_compile_param(CROSS_LINK_FLAGS "-m32")
+endif()
+
+add_compile_param(CMAKE_EXE_LINKER_FLAGS "${CROSS_LINK_FLAGS}" "TOOLCHAIN_EXE_LINKER_FLAGS")
+add_compile_param(CMAKE_SHARED_LINKER_FLAGS "${CROSS_LINK_FLAGS}" "TOOLCHAIN_EXE_LINKER_FLAGS")
+add_compile_param(CMAKE_MODULE_LINKER_FLAGS "${CROSS_LINK_FLAGS}" "TOOLCHAIN_EXE_LINKER_FLAGS")
+
+# Specify compile options
+add_compile_options("--sysroot=${CROSS_ROOTFS}")
+add_compile_options("--target=${TOOLCHAIN}")
+add_compile_options("--gcc-toolchain=${CROSS_ROOTFS}/usr")
+
+if(TARGET_ARCH_NAME MATCHES "^(arm|armel|arm64)$")
+  set(CMAKE_C_COMPILER_TARGET ${TOOLCHAIN})
+  set(CMAKE_CXX_COMPILER_TARGET ${TOOLCHAIN})
+  set(CMAKE_ASM_COMPILER_TARGET ${TOOLCHAIN})
+endif()
+
+if(TARGET_ARCH_NAME MATCHES "^(arm|armel)$")
+  add_compile_options(-mthumb)
+  add_compile_options(-mfpu=vfpv3)
+  if(TARGET_ARCH_NAME STREQUAL "armel")
+    add_compile_options(-mfloat-abi=softfp)
+    if(DEFINED TIZEN_TOOLCHAIN)
+      add_compile_options(-Wno-deprecated-declarations) # compile-time option
+      add_compile_options(-D__extern_always_inline=inline) # compile-time option
+    endif()
+  endif()
+elseif(TARGET_ARCH_NAME STREQUAL "x86")
+  add_compile_options(-m32)
+  add_compile_options(-Wno-error=unused-command-line-argument)
+endif()
+
+# Set LLDB include and library paths
+if(TARGET_ARCH_NAME MATCHES "^(arm|armel|x86)$")
+  if(TARGET_ARCH_NAME STREQUAL "x86")
+    set(LLVM_CROSS_DIR "$ENV{LLVM_CROSS_HOME}")
+  else() # arm/armel case
+    set(LLVM_CROSS_DIR "$ENV{LLVM_ARM_HOME}")
+  endif()
+  if(LLVM_CROSS_DIR)
+    set(WITH_LLDB_LIBS "${LLVM_CROSS_DIR}/lib/" CACHE STRING "")
+    set(WITH_LLDB_INCLUDES "${LLVM_CROSS_DIR}/include" CACHE STRING "")
+    set(LLDB_H "${WITH_LLDB_INCLUDES}" CACHE STRING "")
+    set(LLDB "${LLVM_CROSS_DIR}/lib/liblldb.so" CACHE STRING "")
+  else()
+    if(TARGET_ARCH_NAME STREQUAL "x86")
+      set(WITH_LLDB_LIBS "${CROSS_ROOTFS}/usr/lib/i386-linux-gnu" CACHE STRING "")
+      set(CHECK_LLVM_DIR "${CROSS_ROOTFS}/usr/lib/llvm-3.8/include")
+      if(EXISTS "${CHECK_LLVM_DIR}" AND IS_DIRECTORY "${CHECK_LLVM_DIR}")
+        set(WITH_LLDB_INCLUDES "${CHECK_LLVM_DIR}")
+      else()
+        set(WITH_LLDB_INCLUDES "${CROSS_ROOTFS}/usr/lib/llvm-3.6/include")
+      endif()
+    else() # arm/armel case
+      set(WITH_LLDB_LIBS "${CROSS_ROOTFS}/usr/lib/${TOOLCHAIN}" CACHE STRING "")
+      set(WITH_LLDB_INCLUDES "${CROSS_ROOTFS}/usr/lib/llvm-3.6/include" CACHE STRING "")
+    endif()
+  endif()
+endif()
+
+set(CMAKE_FIND_ROOT_PATH "${CROSS_ROOTFS}")
+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
diff --git a/eng/common/darc-init.ps1 b/eng/common/darc-init.ps1
new file mode 100644
index 0000000..af182d8
--- /dev/null
+++ b/eng/common/darc-init.ps1
@@ -0,0 +1,21 @@
+$verbosity = "m"
+. $PSScriptRoot\tools.ps1
+
+function InstallDarcCli {
+  $darcCliPackageName = "microsoft.dotnet.darc"
+  $dotnet = "$env:DOTNET_INSTALL_DIR\dotnet.exe"
+  $toolList = Invoke-Expression "& `"$dotnet`" tool list -g"
+
+  if ($toolList -like "*$darcCliPackageName*") {
+    Invoke-Expression "& `"$dotnet`" tool uninstall $darcCliPackageName -g"
+  }
+
+  $toolsetVersion = $GlobalJson.'msbuild-sdks'.'Microsoft.DotNet.Arcade.Sdk'
+
+  Write-Host "Installing Darc CLI version $toolsetVersion..."
+  Write-Host "You may need to restart your command window if this is the first dotnet tool you have installed."
+  Invoke-Expression "& `"$dotnet`" tool install $darcCliPackageName --version $toolsetVersion -v $verbosity -g"
+}
+
+InitializeTools
+InstallDarcCli
diff --git a/eng/common/darc-init.sh b/eng/common/darc-init.sh
new file mode 100755
index 0000000..a0c733a
--- /dev/null
+++ b/eng/common/darc-init.sh
@@ -0,0 +1,35 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+
+# resolve $source until the file is no longer a symlink
+while [[ -h "$source" ]]; do
+  scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+  source="$(readlink "$source")"
+  # if $source was a relative symlink, we need to resolve it relative to the path where the
+  # symlink file was located
+  [[ $source != /* ]] && source="$scriptroot/$source"
+done
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+verbosity=m
+
+. "$scriptroot/tools.sh"
+
+function InstallDarcCli {
+  local darc_cli_package_name="microsoft.dotnet.darc"
+  local uninstall_command=`$DOTNET_INSTALL_DIR/dotnet tool uninstall $darc_cli_package_name -g`
+  local tool_list=$($DOTNET_INSTALL_DIR/dotnet tool list -g)
+  if [[ $tool_list = *$darc_cli_package_name* ]]; then
+    echo $($DOTNET_INSTALL_DIR/dotnet tool uninstall $darc_cli_package_name -g)
+  fi
+
+  ReadGlobalVersion "Microsoft.DotNet.Arcade.Sdk"
+  local toolset_version=$_ReadGlobalVersion
+
+  echo "Installing Darc CLI version $toolset_version..."
+  echo "You may need to restart your command shell if this is the first dotnet tool you have installed."
+  echo $($DOTNET_INSTALL_DIR/dotnet tool install $darc_cli_package_name --version $toolset_version -v $verbosity -g)
+}
+
+InitializeTools
+InstallDarcCli
diff --git a/eng/common/helixpublish.proj b/eng/common/helixpublish.proj
new file mode 100644
index 0000000..364af77
--- /dev/null
+++ b/eng/common/helixpublish.proj
@@ -0,0 +1,15 @@
+<Project Sdk="Microsoft.DotNet.Helix.Sdk">
+
+  <ItemGroup>
+    <HelixCorrelationPayload Include="$(CorrelationPayloadDirectory)">
+      <PayloadDirectory>%(Identity)</PayloadDirectory>
+    </HelixCorrelationPayload>
+  </ItemGroup>
+
+  <ItemGroup>
+    <HelixWorkItem Include="WorkItem" Condition="'$(WorkItemDirectory)' != ''">
+      <PayloadDirectory>$(WorkItemDirectory)</PayloadDirectory>
+      <Command>$(WorkItemCommand)</Command>
+    </HelixWorkItem>
+  </ItemGroup>
+</Project>
diff --git a/eng/common/init-tools-native.cmd b/eng/common/init-tools-native.cmd
new file mode 100644
index 0000000..438cd54
--- /dev/null
+++ b/eng/common/init-tools-native.cmd
@@ -0,0 +1,3 @@
+@echo off
+powershell -NoProfile -NoLogo -ExecutionPolicy ByPass -command "& """%~dp0init-tools-native.ps1""" %*"
+exit /b %ErrorLevel%
\ No newline at end of file
diff --git a/eng/common/init-tools-native.ps1 b/eng/common/init-tools-native.ps1
new file mode 100644
index 0000000..e25c60f
--- /dev/null
+++ b/eng/common/init-tools-native.ps1
@@ -0,0 +1,128 @@
+<#
+.SYNOPSIS
+Entry point script for installing native tools
+
+.DESCRIPTION
+Reads $RepoRoot\global.json file to determine native assets to install
+and executes installers for those tools
+
+.PARAMETER BaseUri
+Base file directory or Url from which to acquire tool archives
+
+.PARAMETER InstallDirectory
+Directory to install native toolset.  This is a command-line override for the default
+Install directory precedence order:
+- InstallDirectory command-line override
+- NETCOREENG_INSTALL_DIRECTORY environment variable
+- (default) %USERPROFILE%/.netcoreeng/native
+
+.PARAMETER Clean
+Switch specifying to not install anything, but cleanup native asset folders
+
+.PARAMETER Force
+Clean and then install tools
+
+.PARAMETER DownloadRetries
+Total number of retry attempts
+
+.PARAMETER RetryWaitTimeInSeconds
+Wait time between retry attempts in seconds
+
+.PARAMETER GlobalJsonFile
+File path to global.json file
+
+.NOTES
+#>
+[CmdletBinding(PositionalBinding=$false)]
+Param (
+  [string] $BaseUri = "https://netcorenativeassets.blob.core.windows.net/resource-packages/external",
+  [string] $InstallDirectory,
+  [switch] $Clean = $False,
+  [switch] $Force = $False,
+  [int] $DownloadRetries = 5,
+  [int] $RetryWaitTimeInSeconds = 30,
+  [string] $GlobalJsonFile = "$PSScriptRoot\..\..\global.json"
+)
+
+Set-StrictMode -version 2.0
+$ErrorActionPreference="Stop"
+
+Import-Module -Name (Join-Path $PSScriptRoot "native\CommonLibrary.psm1")
+
+try {
+  # Define verbose switch if undefined
+  $Verbose = $VerbosePreference -Eq "Continue"
+
+  $EngCommonBaseDir = Join-Path $PSScriptRoot "native\"
+  $NativeBaseDir = $InstallDirectory
+  if (!$NativeBaseDir) {
+    $NativeBaseDir = CommonLibrary\Get-NativeInstallDirectory
+  }
+  $Env:CommonLibrary_NativeInstallDir = $NativeBaseDir
+  $InstallBin = Join-Path $NativeBaseDir "bin"
+  $InstallerPath = Join-Path $EngCommonBaseDir "install-tool.ps1"
+
+  # Process tools list
+  Write-Host "Processing $GlobalJsonFile"
+  If (-Not (Test-Path $GlobalJsonFile)) {
+    Write-Host "Unable to find '$GlobalJsonFile'"
+    exit 0
+  }
+  $NativeTools = Get-Content($GlobalJsonFile) -Raw |
+                    ConvertFrom-Json |
+                    Select-Object -Expand "native-tools" -ErrorAction SilentlyContinue
+  if ($NativeTools) {
+    $NativeTools.PSObject.Properties | ForEach-Object {
+      $ToolName = $_.Name
+      $ToolVersion = $_.Value
+      $LocalInstallerCommand = $InstallerPath
+      $LocalInstallerCommand += " -ToolName $ToolName"
+      $LocalInstallerCommand += " -InstallPath $InstallBin"
+      $LocalInstallerCommand += " -BaseUri $BaseUri"
+      $LocalInstallerCommand += " -CommonLibraryDirectory $EngCommonBaseDir"
+      $LocalInstallerCommand += " -Version $ToolVersion"
+
+      if ($Verbose) {
+        $LocalInstallerCommand += " -Verbose"
+      }
+      if (Get-Variable 'Force' -ErrorAction 'SilentlyContinue') {
+        if($Force) {
+          $LocalInstallerCommand += " -Force"
+        }
+      }
+      if ($Clean) {
+        $LocalInstallerCommand += " -Clean"
+      }
+
+      Write-Verbose "Installing $ToolName version $ToolVersion"
+      Write-Verbose "Executing '$LocalInstallerCommand'"
+      Invoke-Expression "$LocalInstallerCommand"
+      if ($LASTEXITCODE -Ne "0") {
+        Write-Error "Execution failed"
+        exit 1
+      }
+    }
+  }
+  else {
+    Write-Host "No native tools defined in global.json"
+    exit 0
+  }
+
+  if ($Clean) {
+    exit 0
+  }
+  if (Test-Path $InstallBin) {
+    Write-Host "Native tools are available from" (Convert-Path -Path $InstallBin)
+    Write-Host "##vso[task.prependpath]$(Convert-Path -Path $InstallBin)"
+  }
+  else {
+    Write-Error "Native tools install directory does not exist, installation failed"
+    exit 1
+  }
+  exit 0
+}
+catch {
+  Write-Host $_
+  Write-Host $_.Exception
+  exit 1
+}
diff --git a/eng/common/init-tools-native.sh b/eng/common/init-tools-native.sh
new file mode 100644
index 0000000..54b70f6
--- /dev/null
+++ b/eng/common/init-tools-native.sh
@@ -0,0 +1,145 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+
+base_uri='https://netcorenativeassets.blob.core.windows.net/resource-packages/external'
+install_directory=''
+clean=false
+force=false
+download_retries=5
+retry_wait_time_seconds=30
+global_json_file="${scriptroot}/../../global.json"
+declare -A native_assets
+
+. $scriptroot/native/common-library.sh
+
+while (($# > 0)); do
+  lowerI="$(echo $1 | awk '{print tolower($0)}')"
+  case $lowerI in
+    --baseuri)
+      base_uri=$2
+      shift 2
+      ;;
+    --installdirectory)
+      install_directory=$2
+      shift 2
+      ;;
+    --clean)
+      clean=true
+      shift 1
+      ;;
+    --force)
+      force=true
+      shift 1
+      ;;
+    --downloadretries)
+      download_retries=$2
+      shift 2
+      ;;
+    --retrywaittimeseconds)
+      retry_wait_time_seconds=$2
+      shift 2
+      ;;
+    --help)
+      echo "Common settings:"
+      echo "  --installdirectory                  Directory to install native toolset."
+      echo "                                      This is a command-line override for the default"
+      echo "                                      Install directory precedence order:"
+      echo "                                          - InstallDirectory command-line override"
+      echo "                                          - NETCOREENG_INSTALL_DIRECTORY environment variable"
+      echo "                                          - (default) %USERPROFILE%/.netcoreeng/native"
+      echo ""
+      echo "  --clean                             Switch specifying not to install anything, but cleanup native asset folders"
+      echo "  --force                             Clean and then install tools"
+      echo "  --help                              Print help and exit"
+      echo ""
+      echo "Advanced settings:"
+      echo "  --baseuri <value>                   Base URI for where to download native tools from"
+      echo "  --downloadretries <value>           Number of times a download should be attempted"
+      echo "  --retrywaittimeseconds <value>      Wait time between download attempts"
+      echo ""
+      exit 0
+      ;;
+  esac
+done
+
+function ReadGlobalJsonNativeTools {
+  # Get the native-tools section from the global.json.
+  local native_tools_section=$(cat $global_json_file | awk '/"native-tools"/,/}/')
+  # Only extract the contents of the object.
+  local native_tools_list=$(echo $native_tools_section | awk -F"[{}]" '{print $2}')
+  native_tools_list=${native_tools_list//[\" ]/}
+  native_tools_list=${native_tools_list//,/$'\n'}
+
+  local old_IFS=$IFS
+  while read -r line; do
+    # Lines are of the form: 'tool:version'
+    IFS=:
+    while read -r key value; do
+     native_assets[$key]=$value
+    done <<< "$line"
+  done <<< "$native_tools_list"
+  IFS=$old_IFS
+
+  return 0;
+}
+
+native_base_dir=$install_directory
+if [[ -z $install_directory ]]; then
+  native_base_dir=$(GetNativeInstallDirectory)
+fi
+
+install_bin="${native_base_dir}/bin"
+
+ReadGlobalJsonNativeTools
+
+if [[ ${#native_assets[@]} -eq 0 ]]; then
+  echo "No native tools defined in global.json"
+  exit 0;
+else
+  native_installer_dir="$scriptroot/native"
+  for tool in "${!native_assets[@]}"
+  do
+    tool_version=${native_assets[$tool]}
+    installer_name="install-$tool.sh"
+    installer_command="$native_installer_dir/$installer_name"
+    installer_command+=" --baseuri $base_uri"
+    installer_command+=" --installpath $install_bin"
+    installer_command+=" --version $tool_version"
+
+    if [[ $force = true ]]; then
+      installer_command+=" --force"
+    fi
+
+    if [[ $clean = true ]]; then
+      installer_command+=" --clean"
+    fi
+
+    echo "Installing $tool version $tool_version"
+    echo "Executing '$installer_command'"
+    $installer_command
+
+    if [[ $? != 0 ]]; then
+      echo "Execution Failed" >&2
+      exit 1
+    fi
+  done
+fi
+
+if [[ ! -z $clean ]]; then
+  exit 0
+fi
+
+if [[ -d $install_bin ]]; then
+  echo "Native tools are available from $install_bin"
+  if [[ !-z BUILD_BUILDNUMBER ]]; then
+    echo "##vso[task.prependpath]$install_bin"
+  fi
+else
+  echo "Native tools install directory does not exist, installation failed" >&2
+  exit 1
+fi
+
+exit 0
+
diff --git a/eng/common/msbuild.ps1 b/eng/common/msbuild.ps1
new file mode 100644
index 0000000..43b837f
--- /dev/null
+++ b/eng/common/msbuild.ps1
@@ -0,0 +1,23 @@
+[CmdletBinding(PositionalBinding=$false)]
+Param(
+  [string] $verbosity = "minimal",
+  [bool] $warnaserror = $true,
+  [bool] $nodereuse = $true,
+  [switch] $ci,
+  [switch] $prepareMachine,
+  [Parameter(ValueFromRemainingArguments=$true)][String[]]$extraArgs
+)
+
+. $PSScriptRoot\tools.ps1
+
+try {
+  InitializeTools
+  MSBuild @extraArgs
+  ExitWithExitCode $lastExitCode
+}
+catch {
+  Write-Host $_
+  Write-Host $_.Exception
+  Write-Host $_.ScriptStackTrace
+  ExitWithExitCode 1
+}
diff --git a/eng/common/msbuild.sh b/eng/common/msbuild.sh
new file mode 100755
index 0000000..b102448
--- /dev/null
+++ b/eng/common/msbuild.sh
@@ -0,0 +1,55 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+
+# resolve $source until the file is no longer a symlink
+while [[ -h "$source" ]]; do
+  scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+  source="$(readlink "$source")"
+  # if $source was a relative symlink, we need to resolve it relative to the path where the
+  # symlink file was located
+  [[ $source != /* ]] && source="$scriptroot/$source"
+done
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+
+verbosity='minimal'
+warnaserror=true
+nodereuse=true
+prepare_machine=false
+extraargs=''
+
+while (($# > 0)); do
+  lowerI="$(echo $1 | awk '{print tolower($0)}')"
+  case $lowerI in
+    --verbosity)
+      verbosity=$2
+      shift 2
+      ;;
+    --warnaserror)
+      warnaserror=$2
+      shift 2
+      ;;
+    --nodereuse)
+      nodereuse=$2
+      shift 2
+      ;;
+    --ci)
+      ci=true
+      shift 1
+      ;;
+    --preparemachine)
+      prepare_machine=true
+      shift 1
+      ;;
+      *)
+      extraargs="$extraargs $1"
+      shift 1
+      ;;
+  esac
+done
+
+. "$scriptroot/tools.sh"
+
+InitializeTools
+MSBuild $extraargs
+ExitWithExitCode $?
diff --git a/eng/common/native/CommonLibrary.psm1 b/eng/common/native/CommonLibrary.psm1
new file mode 100644
index 0000000..f286ae0
--- /dev/null
+++ b/eng/common/native/CommonLibrary.psm1
@@ -0,0 +1,358 @@
+<#
+.SYNOPSIS
+Helper module to install an archive to a directory
+
+.DESCRIPTION
+Helper module to download and extract an archive to a specified directory
+
+.PARAMETER Uri
+Uri of artifact to download
+
+.PARAMETER InstallDirectory
+Directory to extract artifact contents to
+
+.PARAMETER Force
+Force download / extraction if file or contents already exist. Default = False
+
+.PARAMETER DownloadRetries
+Total number of retry attempts. Default = 5
+
+.PARAMETER RetryWaitTimeInSeconds
+Wait time between retry attempts in seconds. Default = 30
+
+.NOTES
+Returns False if download or extraction fail, True otherwise
+#>
+function DownloadAndExtract {
+  [CmdletBinding(PositionalBinding=$false)]
+  Param (
+    [Parameter(Mandatory=$True)]
+    [string] $Uri,
+    [Parameter(Mandatory=$True)]
+    [string] $InstallDirectory,
+    [switch] $Force = $False,
+    [int] $DownloadRetries = 5,
+    [int] $RetryWaitTimeInSeconds = 30
+  )
+  # Define verbose switch if undefined
+  $Verbose = $VerbosePreference -Eq "Continue"
+
+  $TempToolPath = CommonLibrary\Get-TempPathFilename -Path $Uri
+
+  # Download native tool
+  $DownloadStatus = CommonLibrary\Get-File -Uri $Uri `
+                                           -Path $TempToolPath `
+                                           -DownloadRetries $DownloadRetries `
+                                           -RetryWaitTimeInSeconds $RetryWaitTimeInSeconds `
+                                           -Force:$Force `
+                                           -Verbose:$Verbose
+
+  if ($DownloadStatus -Eq $False) {
+    Write-Error "Download failed"
+    return $False
+  }
+
+  # Extract native tool
+  $UnzipStatus = CommonLibrary\Expand-Zip -ZipPath $TempToolPath `
+                                          -OutputDirectory $InstallDirectory `
+                                          -Force:$Force `
+                                          -Verbose:$Verbose
+
+  if ($UnzipStatus -Eq $False) {
+    Write-Error "Unzip failed"
+    return $False
+  }
+  return $True
+}
+
+<#
+.SYNOPSIS
+Download a file, retry on failure
+
+.DESCRIPTION
+Download specified file and retry if attempt fails
+
+.PARAMETER Uri
+Uri of file to download. If Uri is a local path, the file will be copied instead of downloaded
+
+.PARAMETER Path
+Path to download or copy uri file to
+
+.PARAMETER Force
+Overwrite existing file if present. Default = False
+
+.PARAMETER DownloadRetries
+Total number of retry attempts. Default = 5
+
+.PARAMETER RetryWaitTimeInSeconds
+Wait time between retry attempts in seconds Default = 30
+
+#>
+function Get-File {
+  [CmdletBinding(PositionalBinding=$false)]
+  Param (
+    [Parameter(Mandatory=$True)]
+    [string] $Uri,
+    [Parameter(Mandatory=$True)]
+    [string] $Path,
+    [int] $DownloadRetries = 5,
+    [int] $RetryWaitTimeInSeconds = 30,
+    [switch] $Force = $False
+  )
+  $Attempt = 0
+
+  if ($Force) {
+    if (Test-Path $Path) {
+      Remove-Item $Path -Force
+    }
+  }
+  if (Test-Path $Path) {
+    Write-Host "File '$Path' already exists, skipping download"
+    return $True
+  }
+
+  $DownloadDirectory = Split-Path -ErrorAction Ignore -Path "$Path" -Parent
+  if (-Not (Test-Path $DownloadDirectory)) {
+    New-Item -path $DownloadDirectory -force -itemType "Directory" | Out-Null
+  }
+
+  if (Test-Path -IsValid -Path $Uri) {
+    Write-Verbose "'$Uri' is a file path, copying file to '$Path'"
+    Copy-Item -Path $Uri -Destination $Path
+    return $?
+  }
+  else {
+    Write-Verbose "Downloading $Uri"
+    while($Attempt -Lt $DownloadRetries)
+    {
+      try {
+        Invoke-WebRequest -UseBasicParsing -Uri $Uri -OutFile $Path
+        Write-Verbose "Downloaded to '$Path'"
+        return $True
+      }
+      catch {
+        $Attempt++
+        if ($Attempt -Lt $DownloadRetries) {
+          $AttemptsLeft = $DownloadRetries - $Attempt
+          Write-Warning "Download failed, $AttemptsLeft attempts remaining, will retry in $RetryWaitTimeInSeconds seconds"
+          Start-Sleep -Seconds $RetryWaitTimeInSeconds
+        }
+        else {
+          Write-Error $_
+          Write-Error $_.Exception
+        }
+      }
+    }
+  }
+
+  return $False
+}
+
+<#
+.SYNOPSIS
+Generate a shim for a native tool
+
+.DESCRIPTION
+Creates a wrapper script (shim) that passes arguments forward to native tool assembly
+
+.PARAMETER ShimName
+The name of the shim
+
+.PARAMETER ShimDirectory
+The directory where shims are stored
+
+.PARAMETER ToolFilePath
+Path to file that shim forwards to
+
+.PARAMETER Force
+Replace shim if already present.  Default = False
+
+.NOTES
+Returns $True if generating shim succeeds, $False otherwise
+#>
+function New-ScriptShim {
+  [CmdletBinding(PositionalBinding=$false)]
+  Param (
+    [Parameter(Mandatory=$True)]
+    [string] $ShimName,
+    [Parameter(Mandatory=$True)]
+    [string] $ShimDirectory,
+    [Parameter(Mandatory=$True)]
+    [string] $ToolFilePath,
+    [Parameter(Mandatory=$True)]
+    [string] $BaseUri,
+    [switch] $Force
+  )
+  try {
+    Write-Verbose "Generating '$ShimName' shim"
+
+    if (-Not (Test-Path $ToolFilePath)){
+      Write-Error "Specified tool file path '$ToolFilePath' does not exist"
+      return $False
+    }
+
+    # WinShimmer is a small .NET Framework program that creates .exe shims to bootstrapped programs
+    # Many of the checks for installed programs expect a .exe extension for Windows tools, rather
+    # than a .bat or .cmd file.
+    # Source: https://github.com/dotnet/arcade/tree/master/src/WinShimmer
+    if (-Not (Test-Path "$ShimDirectory\WinShimmer\winshimmer.exe")) {
+      $InstallStatus = DownloadAndExtract -Uri "$BaseUri/windows/winshimmer/WinShimmer.zip" `
+                                          -InstallDirectory $ShimDirectory\WinShimmer `
+                                          -Force:$Force `
+                                          -DownloadRetries 2 `
+                                          -RetryWaitTimeInSeconds 5 `
+                                          -Verbose:$Verbose
+    }
+
+    if ((Test-Path (Join-Path $ShimDirectory "$ShimName.exe"))) {
+      Write-Host "$ShimName.exe already exists; replacing..."
+      Remove-Item (Join-Path $ShimDirectory "$ShimName.exe")
+    }
+
+    Invoke-Expression "$ShimDirectory\WinShimmer\winshimmer.exe $ShimName $ToolFilePath $ShimDirectory"
+    return $True
+  }
+  catch {
+    Write-Host $_
+    Write-Host $_.Exception
+    return $False
+  }
+}
+
+<#
+.SYNOPSIS
+Returns the machine architecture of the host machine
+
+.NOTES
+Returns 'x64' on 64 bit machines
+ Returns 'x86' on 32 bit machines
+#>
+function Get-MachineArchitecture {
+  $ProcessorArchitecture = $Env:PROCESSOR_ARCHITECTURE
+  $ProcessorArchitectureW6432 = $Env:PROCESSOR_ARCHITEW6432
+  if($ProcessorArchitecture -Eq "X86")
+  {
+    if(($ProcessorArchitectureW6432 -Eq "") -Or
+       ($ProcessorArchitectureW6432 -Eq "X86")) {
+        return "x86"
+    }
+    $ProcessorArchitecture = $ProcessorArchitectureW6432
+  }
+  if (($ProcessorArchitecture -Eq "AMD64") -Or
+      ($ProcessorArchitecture -Eq "IA64") -Or
+      ($ProcessorArchitecture -Eq "ARM64")) {
+    return "x64"
+  }
+  return "x86"
+}
+
+<#
+.SYNOPSIS
+Get the name of a temporary folder under the native install directory
+#>
+function Get-TempDirectory {
+  return Join-Path (Get-NativeInstallDirectory) "temp/"
+}
+
+function Get-TempPathFilename {
+  [CmdletBinding(PositionalBinding=$false)]
+  Param (
+    [Parameter(Mandatory=$True)]
+    [string] $Path
+  )
+  $TempDir = CommonLibrary\Get-TempDirectory
+  $TempFilename = Split-Path $Path -leaf
+  $TempPath = Join-Path $TempDir $TempFilename
+  return $TempPath
+}
+
+<#
+.SYNOPSIS
+Returns the base directory to use for native tool installation
+
+.NOTES
+Returns the value of the NETCOREENG_INSTALL_DIRECTORY if that environment variable
+is set, or otherwise returns an install directory under the %USERPROFILE%
+#>
+function Get-NativeInstallDirectory {
+  $InstallDir = $Env:NETCOREENG_INSTALL_DIRECTORY
+  if (!$InstallDir) {
+    $InstallDir = Join-Path $Env:USERPROFILE ".netcoreeng/native/"
+  }
+  return $InstallDir
+}
+
+<#
+.SYNOPSIS
+Unzip an archive
+
+.DESCRIPTION
+Powershell module to unzip an archive to a specified directory
+
+.PARAMETER ZipPath (Required)
+Path to archive to unzip
+
+.PARAMETER OutputDirectory (Required)
+Output directory for archive contents
+
+.PARAMETER Force
+Overwrite output directory contents if they already exist
+
+.NOTES
+- Returns True and does not perform an extraction if output directory already exists but Overwrite is not True.
+- Returns True if unzip operation is successful
+- Returns False if Overwrite is True and it is unable to remove contents of OutputDirectory
+- Returns False if unable to extract zip archive
+#>
+function Expand-Zip {
+  [CmdletBinding(PositionalBinding=$false)]
+  Param (
+    [Parameter(Mandatory=$True)]
+    [string] $ZipPath,
+    [Parameter(Mandatory=$True)]
+    [string] $OutputDirectory,
+    [switch] $Force
+  )
+
+  Write-Verbose "Extracting '$ZipPath' to '$OutputDirectory'"
+  try {
+    if ((Test-Path $OutputDirectory) -And (-Not $Force)) {
+      Write-Host "Directory '$OutputDirectory' already exists, skipping extract"
+      return $True
+    }
+    if (Test-Path $OutputDirectory) {
+      Write-Verbose "'Force' is 'True', but '$OutputDirectory' exists, removing directory"
+      Remove-Item $OutputDirectory -Force -Recurse
+      if ($? -Eq $False) {
+        Write-Error "Unable to remove '$OutputDirectory'"
+        return $False
+      }
+    }
+    if (-Not (Test-Path $OutputDirectory)) {
+      New-Item -path $OutputDirectory -Force -itemType "Directory" | Out-Null
+    }
+
+    Add-Type -assembly "system.io.compression.filesystem"
+    [io.compression.zipfile]::ExtractToDirectory("$ZipPath", "$OutputDirectory")
+    if ($? -Eq $False) {
+      Write-Error "Unable to extract '$ZipPath'"
+      return $False
+    }
+  }
+  catch {
+    Write-Host $_
+    Write-Host $_.Exception
+
+    return $False
+  }
+  return $True
+}
+
+export-modulemember -function DownloadAndExtract
+export-modulemember -function Expand-Zip
+export-modulemember -function Get-File
+export-modulemember -function Get-MachineArchitecture
+export-modulemember -function Get-NativeInstallDirectory
+export-modulemember -function Get-TempDirectory
+export-modulemember -function Get-TempPathFilename
+export-modulemember -function New-ScriptShim
diff --git a/eng/common/native/common-library.sh b/eng/common/native/common-library.sh
new file mode 100644
index 0000000..271bddf
--- /dev/null
+++ b/eng/common/native/common-library.sh
@@ -0,0 +1,168 @@
+#!/usr/bin/env bash
+
+function GetNativeInstallDirectory {
+  local install_dir
+
+  if [[ -z $NETCOREENG_INSTALL_DIRECTORY ]]; then
+    install_dir=$HOME/.netcoreeng/native/
+  else
+    install_dir=$NETCOREENG_INSTALL_DIRECTORY
+  fi
+
+  echo $install_dir
+  return 0
+}
+
+function GetTempDirectory {
+
+  echo $(GetNativeInstallDirectory)temp/
+  return 0
+}
+
+function ExpandZip {
+  local zip_path=$1
+  local output_directory=$2
+  local force=${3:-false}
+
+  echo "Extracting $zip_path to $output_directory"
+  if [[ -d $output_directory ]] && [[ $force = false ]]; then
+    echo "Directory '$output_directory' already exists, skipping extract"
+    return 0
+  fi
+
+  if [[ -d $output_directory ]]; then
+    echo "'Force flag enabled, but '$output_directory' exists. Removing directory"
+    rm -rf $output_directory
+    if [[ $? != 0 ]]; then
+      echo Unable to remove '$output_directory'>&2
+      return 1
+    fi
+  fi
+
+  echo "Creating directory: '$output_directory'"
+  mkdir -p $output_directory
+
+  echo "Extracting archive"
+  tar -xf $zip_path -C $output_directory
+  if [[ $? != 0 ]]; then
+    echo "Unable to extract '$zip_path'" >&2
+    return 1
+  fi
+
+  return 0
+}
+
+function GetCurrentOS {
+  local unameOut="$(uname -s)"
+  case $unameOut in
+    Linux*)     echo "Linux";;
+    Darwin*)    echo "MacOS";;
+  esac
+  return 0
+}
+
+function GetFile {
+  local uri=$1
+  local path=$2
+  local force=${3:-false}
+  local download_retries=${4:-5}
+  local retry_wait_time_seconds=${5:-30}
+
+  if [[ -f $path ]]; then
+    if [[ $force = false ]]; then
+      echo "File '$path' already exists. Skipping download"
+      return 0
+    else
+      rm -rf $path
+    fi
+  fi
+
+  if [[ -f $uri ]]; then
+    echo "'$uri' is a file path, copying file to '$path'"
+    cp $uri $path
+    return $?
+  fi
+
+  echo "Downloading $uri"
+  # Use curl if available, otherwise use wget
+  if command -v curl > /dev/null; then
+    curl "$uri" -sSL --retry $download_retries --retry-delay $retry_wait_time_seconds --create-dirs -o "$path" --fail
+  else
+    wget -q -O "$path" "$uri" --tries="$download_retries"
+  fi
+
+  return $?
+}
+
+function GetTempPathFileName {
+  local path=$1
+
+  local temp_dir=$(GetTempDirectory)
+  local temp_file_name=$(basename $path)
+  echo $temp_dir$temp_file_name
+  return 0
+}
+
+function DownloadAndExtract {
+  local uri=$1
+  local installDir=$2
+  local force=${3:-false}
+  local download_retries=${4:-5}
+  local retry_wait_time_seconds=${5:-30}
+
+  local temp_tool_path=$(GetTempPathFileName $uri)
+
+  echo "downloading to: $temp_tool_path"
+
+  # Download file
+  GetFile "$uri" "$temp_tool_path" $force $download_retries $retry_wait_time_seconds
+  if [[ $? != 0 ]]; then
+    echo "Failed to download '$uri' to '$temp_tool_path'." >&2
+    return 1
+  fi
+
+  # Extract File
+  echo "extracting from  $temp_tool_path to $installDir"
+  ExpandZip "$temp_tool_path" "$installDir" $force $download_retries $retry_wait_time_seconds
+  if [[ $? != 0 ]]; then
+    echo "Failed to extract '$temp_tool_path' to '$installDir'." >&2
+    return 1
+  fi
+
+  return 0
+}
+
+function NewScriptShim {
+  local shimpath=$1
+  local tool_file_path=$2
+  local force=${3:-false}
+
+  echo "Generating '$shimpath' shim"
+  if [[ -f $shimpath ]]; then
+    if [[ $force = false ]]; then
+      echo "File '$shimpath' already exists." >&2
+      return 1
+    else
+      rm -rf $shimpath
+    fi
+  fi
+  
+  if [[ ! -f $tool_file_path ]]; then
+    echo "Specified tool file path:'$tool_file_path' does not exist" >&2
+    return 1
+  fi
+
+  local shim_contents=$'#!/usr/bin/env bash\n'
+  shim_contents+="SHIMARGS="$'$1\n'
+  shim_contents+="$tool_file_path"$' $SHIMARGS\n'
+
+  # Write shim file
+  echo "$shim_contents" > $shimpath
+
+  chmod +x $shimpath
+
+  echo "Finished generating shim '$shimpath'"
+
+  return $?
+}
+
diff --git a/eng/common/native/install-cmake.sh b/eng/common/native/install-cmake.sh
new file mode 100644
index 0000000..293af60
--- /dev/null
+++ b/eng/common/native/install-cmake.sh
@@ -0,0 +1,117 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+
+. $scriptroot/common-library.sh
+
+base_uri=
+install_path=
+version=
+clean=false
+force=false
+download_retries=5
+retry_wait_time_seconds=30
+
+while (($# > 0)); do
+  lowerI="$(echo $1 | awk '{print tolower($0)}')"
+  case $lowerI in
+    --baseuri)
+      base_uri=$2
+      shift 2
+      ;;
+    --installpath)
+      install_path=$2
+      shift 2
+      ;;
+    --version)
+      version=$2
+      shift 2
+      ;;
+    --clean)
+      clean=true
+      shift 1
+      ;;
+    --force)
+      force=true
+      shift 1
+      ;;
+    --downloadretries)
+      download_retries=$2
+      shift 2
+      ;;
+    --retrywaittimeseconds)
+      retry_wait_time_seconds=$2
+      shift 2
+      ;;
+    --help)
+      echo "Common settings:"
+      echo "  --baseuri <value>        Base file directory or Url wrom which to acquire tool archives"
+      echo "  --installpath <value>    Base directory to install native tool to"
+      echo "  --clean                  Don't install the tool, just clean up the current install of the tool"
+      echo "  --force                  Force install of tools even if they previously exist"
+      echo "  --help                   Print help and exit"
+      echo ""
+      echo "Advanced settings:"
+      echo "  --downloadretries        Total number of retry attempts"
+      echo "  --retrywaittimeseconds   Wait time between retry attempts in seconds"
+      echo ""
+      exit 0
+      ;;
+  esac
+done
+
+tool_name="cmake"
+tool_os=$(GetCurrentOS)
+tool_folder=$(echo $tool_os | awk '{print tolower($0)}')
+tool_arch="x86_64"
+tool_name_moniker="$tool_name-$version-$tool_os-$tool_arch"
+tool_install_directory="$install_path/$tool_name/$version"
+tool_file_path="$tool_install_directory/$tool_name_moniker/bin/$tool_name"
+shim_path="$install_path/$tool_name.sh"
+uri="${base_uri}/$tool_folder/cmake/$tool_name_moniker.tar.gz"
+
+# Clean up tool and installers
+if [[ $clean = true ]]; then
+  echo "Cleaning $tool_install_directory"
+  if [[ -d $tool_install_directory ]]; then
+    rm -rf $tool_install_directory
+  fi
+
+  echo "Cleaning $shim_path"
+  if [[ -f $shim_path ]]; then
+    rm -rf $shim_path
+  fi
+
+  tool_temp_path=$(GetTempPathFileName $uri)
+  echo "Cleaning $tool_temp_path"
+  if [[ -f $tool_temp_path ]]; then
+    rm -rf $tool_temp_path
+  fi
+
+  exit 0
+fi
+
+# Install tool
+if [[ -f $tool_file_path ]] && [[ $force = false ]]; then
+  echo "$tool_name ($version) already exists, skipping install"
+  exit 0
+fi
+
+DownloadAndExtract $uri $tool_install_directory $force $download_retries $retry_wait_time_seconds
+
+if [[ $? != 0 ]]; then
+  echo "Installation failed" >&2
+  exit 1
+fi
+
+# Generate Shim
+# Always rewrite shims so that we are referencing the expected version
+NewScriptShim $shim_path $tool_file_path true
+
+if [[ $? != 0 ]]; then
+  echo "Shim generation failed" >&2
+  exit 1
+fi
+
+exit 0
\ No newline at end of file
diff --git a/eng/common/native/install-tool.ps1 b/eng/common/native/install-tool.ps1
new file mode 100644
index 0000000..635ab3f
--- /dev/null
+++ b/eng/common/native/install-tool.ps1
@@ -0,0 +1,130 @@
+<#
+.SYNOPSIS
+Install native tool
+
+.DESCRIPTION
+Install cmake native tool from Azure blob storage
+
+.PARAMETER InstallPath
+Base directory to install native tool to
+
+.PARAMETER BaseUri
+Base file directory or Url from which to acquire tool archives
+
+.PARAMETER CommonLibraryDirectory
+Path to folder containing common library modules
+
+.PARAMETER Force
+Force install of tools even if they previously exist
+
+.PARAMETER Clean
+Don't install the tool, just clean up the current install of the tool
+
+.PARAMETER DownloadRetries
+Total number of retry attempts
+
+.PARAMETER RetryWaitTimeInSeconds
+Wait time between retry attempts in seconds
+
+.NOTES
+Returns 0 if install succeeds, 1 otherwise
+#>
+[CmdletBinding(PositionalBinding=$false)]
+Param (
+  [Parameter(Mandatory=$True)]
+  [string] $ToolName,
+  [Parameter(Mandatory=$True)]
+  [string] $InstallPath,
+  [Parameter(Mandatory=$True)]
+  [string] $BaseUri,
+  [Parameter(Mandatory=$True)]
+  [string] $Version,
+  [string] $CommonLibraryDirectory = $PSScriptRoot,
+  [switch] $Force = $False,
+  [switch] $Clean = $False,
+  [int] $DownloadRetries = 5,
+  [int] $RetryWaitTimeInSeconds = 30
+)
+
+# Import common library modules
+Import-Module -Name (Join-Path $CommonLibraryDirectory "CommonLibrary.psm1")
+
+try {
+  # Define verbose switch if undefined
+  $Verbose = $VerbosePreference -Eq "Continue"
+
+  $Arch = CommonLibrary\Get-MachineArchitecture
+  $ToolOs = "win64"
+  if($Arch -Eq "x32") {
+    $ToolOs = "win32"
+  }
+  $ToolNameMoniker = "$ToolName-$Version-$ToolOs-$Arch"
+  $ToolInstallDirectory = Join-Path $InstallPath "$ToolName\$Version\"
+  $Uri = "$BaseUri/windows/$ToolName/$ToolNameMoniker.zip"
+  $ShimPath = Join-Path $InstallPath "$ToolName.exe"
+
+  if ($Clean) {
+    Write-Host "Cleaning $ToolInstallDirectory"
+    if (Test-Path $ToolInstallDirectory) {
+      Remove-Item $ToolInstallDirectory -Force -Recurse
+    }
+    Write-Host "Cleaning $ShimPath"
+    if (Test-Path $ShimPath) {
+      Remove-Item $ShimPath -Force
+    }
+    $ToolTempPath = CommonLibrary\Get-TempPathFilename -Path $Uri
+    Write-Host "Cleaning $ToolTempPath"
+    if (Test-Path $ToolTempPath) {
+      Remove-Item $ToolTempPath -Force
+    }
+    exit 0
+  }
+
+  # Install tool
+  if ((Test-Path $ToolInstallDirectory) -And (-Not $Force)) {
+    Write-Verbose "$ToolName ($Version) already exists, skipping install"
+  }
+  else {
+    $InstallStatus = CommonLibrary\DownloadAndExtract -Uri $Uri `
+                                                      -InstallDirectory $ToolInstallDirectory `
+                                                      -Force:$Force `
+                                                      -DownloadRetries $DownloadRetries `
+                                                      -RetryWaitTimeInSeconds $RetryWaitTimeInSeconds `
+                                                      -Verbose:$Verbose
+
+    if ($InstallStatus -Eq $False) {
+      Write-Error "Installation failed"
+      exit 1
+    }
+  }
+
+  $ToolFilePath = Get-ChildItem $ToolInstallDirectory -Recurse -Filter "$ToolName.exe" | % { $_.FullName }
+  if (@($ToolFilePath).Length -Gt 1) {
+    Write-Error "There are multiple copies of $ToolName in $($ToolInstallDirectory): `n$(@($ToolFilePath | out-string))"
+    exit 1
+  } elseif (@($ToolFilePath).Length -Lt 1) {
+    Write-Error "$ToolName was not found in $ToolFilePath."
+    exit 1
+  }
+
+  # Generate shim
+  # Always rewrite shims so that we are referencing the expected version
+  $GenerateShimStatus = CommonLibrary\New-ScriptShim -ShimName $ToolName `
+                                                     -ShimDirectory $InstallPath `
+                                                     -ToolFilePath "$ToolFilePath" `
+                                                     -BaseUri $BaseUri `
+                                                     -Force:$Force `
+                                                     -Verbose:$Verbose
+
+  if ($GenerateShimStatus -Eq $False) {
+    Write-Error "Generate shim failed"
+    return 1
+  }
+
+  exit 0
+}
+catch {
+  Write-Host $_
+  Write-Host $_.Exception
+  exit 1
+}
diff --git a/eng/common/templates/phases/base.yml b/eng/common/templates/phases/base.yml
new file mode 100644
index 0000000..e075e8b
--- /dev/null
+++ b/eng/common/templates/phases/base.yml
@@ -0,0 +1,131 @@
+parameters:
+  # Optional: Clean sources before building
+  clean: true
+
+  # Optional: Git fetch depth
+  fetchDepth: ''
+
+  # Optional: name of the phase (not specifying phase name may cause name collisions)
+  name: ''
+  # Optional: display name of the phase
+  displayName: ''
+
+  # Optional: condition for the job to run
+  condition: ''
+
+  # Optional: dependencies of the phase
+  dependsOn: ''
+
+  # Required: A defined YAML queue
+  queue: {}
+
+  # Required: build steps
+  steps: []
+
+  # Optional: variables
+  variables: {}
+
+  # Optional: should run as a public build even in the internal project
+  #           if 'true', the build won't run any of the internal only steps, even if it is running in non-public projects.
+  runAsPublic: false
+
+  ## Telemetry variables
+
+  # Optional: enable sending telemetry
+  #           if 'true', these "variables" must be specified in the variables object or as part of the queue matrix
+  #             _HelixBuildConfig - differentiate between Debug, Release, other
+  #             _HelixSource - Example: build/product
+  #             _HelixType - Example: official/dotnet/arcade/$(Build.SourceBranch)
+  enableTelemetry: false
+
+  # Optional: Enable installing Microbuild plugin
+  #           if 'true', these "variables" must be specified in the variables object or as part of the queue matrix
+  #             _TeamName - the name of your team
+  #             _SignType - 'test' or 'real'
+  enableMicrobuild: false
+
+# Internal resources (telemetry, microbuild) can only be accessed from non-public projects,
+# and some (Microbuild) should only be applied to non-PR cases for internal builds.
+
+phases:
+- phase: ${{ parameters.name }}
+
+  ${{ if ne(parameters.displayName, '') }}:
+    displayName: ${{ parameters.displayName }}
+
+  ${{ if ne(parameters.condition, '') }}:
+    condition: ${{ parameters.condition }}
+
+  ${{ if ne(parameters.dependsOn, '') }}:
+    dependsOn: ${{ parameters.dependsOn }}
+
+  queue: ${{ parameters.queue }}
+
+  ${{ if ne(parameters.variables, '') }}:
+    variables:
+      ${{ insert }}: ${{ parameters.variables }}
+
+  steps:
+  - checkout: self
+    clean: ${{ parameters.clean }}
+    ${{ if ne(parameters.fetchDepth, '') }}:
+      fetchDepth: ${{ parameters.fetchDepth }}
+
+  - ${{ if eq(parameters.enableTelemetry, 'true') }}:
+    - template: /eng/common/templates/steps/telemetry-start.yml
+      parameters:
+        buildConfig: $(_HelixBuildConfig)
+        helixSource: $(_HelixSource)
+        helixType: $(_HelixType)
+        runAsPublic: ${{ parameters.runAsPublic }}
+
+  - ${{ if eq(parameters.enableMicrobuild, 'true') }}:
+    # Internal only resource, and Microbuild signing shouldn't be applied to PRs.
+    - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+      - task: MicroBuildSigningPlugin@2
+        displayName: Install MicroBuild plugin
+        inputs:
+          version: 1.1.35
+          signType: $(_SignType)
+          zipSources: false
+          feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json
+          
+        env:
+          TeamName: $(_TeamName)
+        continueOnError: false
+        condition: and(succeeded(), in(variables['_SignType'], 'real', 'test'), eq(variables['Agent.Os'], 'Windows_NT'))
+
+  # Run provided build steps
+  - ${{ parameters.steps }}
+
+  - ${{ if eq(parameters.enableMicrobuild, 'true') }}:
+    # Internal only resources
+    - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+      - task: MicroBuildCleanup@1
+        displayName: Execute Microbuild cleanup tasks  
+        condition: and(always(), in(variables['_SignType'], 'real', 'test'), eq(variables['Agent.Os'], 'Windows_NT'))
+        env:
+          TeamName: $(_TeamName)
+
+  - ${{ if eq(parameters.enableTelemetry, 'true') }}:
+    - template: /eng/common/templates/steps/telemetry-end.yml
+      parameters:
+        helixSource: $(_HelixSource)
+        helixType: $(_HelixType)
+
+  - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+    - task: CopyFiles@2
+      displayName: Gather Asset Manifests
+      inputs:
+        SourceFolder: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/AssetManifest'
+        TargetFolder: '$(Build.StagingDirectory)/AssetManifests'
+      continueOnError: false
+      condition: and(succeeded(), eq(variables['_DotNetPublishToBlobFeed'], 'true'))
+    - task: PublishBuildArtifacts@1
+      displayName: Push Asset Manifests
+      inputs:
+        PathtoPublish: '$(Build.StagingDirectory)/AssetManifests'
+        PublishLocation: Container
+        ArtifactName: AssetManifests
+      continueOnError: false
+      condition: and(succeeded(), eq(variables['_DotNetPublishToBlobFeed'], 'true'))
diff --git a/eng/common/templates/phases/publish-build-assets.yml b/eng/common/templates/phases/publish-build-assets.yml
new file mode 100644
index 0000000..0df6203
--- /dev/null
+++ b/eng/common/templates/phases/publish-build-assets.yml
@@ -0,0 +1,46 @@
+parameters:
+  dependsOn: ''
+  queue: {}
+  configuration: 'Debug'
+  condition: succeeded()
+  continueOnError: false
+  runAsPublic: false
+phases:
+  - phase: Asset_Registry_Publish
+    displayName: Publish to Build Asset Registry
+    dependsOn: ${{ parameters.dependsOn }}
+    queue: ${{ parameters.queue }}
+    variables:
+      _BuildConfig: ${{ parameters.configuration }}
+    steps:
+      - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
+        - task: DownloadBuildArtifacts@0
+          displayName: Download artifact
+          inputs:
+            artifactName: AssetManifests
+            downloadPath: '$(Build.StagingDirectory)/Download'
+          condition: ${{ parameters.condition }}
+          continueOnError: ${{ parameters.continueOnError }}
+        - task: AzureKeyVault@1
+          inputs:
+            azureSubscription: 'DotNet-Engineering-Services_KeyVault'
+            KeyVaultName: EngKeyVault
+            SecretsFilter: 'MaestroAccessToken'
+          condition: ${{ parameters.condition }}
+          continueOnError: ${{ parameters.continueOnError }}
+        - script: eng\common\publishbuildassets.cmd
+            -configuration $(_BuildConfig)
+            /p:ManifestsPath='$(Build.StagingDirectory)/Download/AssetManifests'
+            /p:BuildAssetRegistryToken=$(MaestroAccessToken)
+            /p:MaestroApiEndpoint=https://maestro-prod.westus2.cloudapp.azure.com
+          displayName: Publish Build Assets
+          condition: ${{ parameters.condition }}
+          continueOnError: ${{ parameters.continueOnError }}
+        - task: PublishBuildArtifacts@1
+          displayName: Publish Logs to VSTS
+          inputs:
+            PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
+            PublishLocation: Container
+            ArtifactName: $(Agent.Os)_Asset_Registry_Publish
+          continueOnError: true
+          condition: always()
diff --git a/eng/common/templates/steps/build-reason.yml b/eng/common/templates/steps/build-reason.yml
new file mode 100644
index 0000000..eba5810
--- /dev/null
+++ b/eng/common/templates/steps/build-reason.yml
@@ -0,0 +1,12 @@
+# build-reason.yml
+# Description: runs steps if build.reason condition is valid.  conditions is a string of valid build reasons 
+# to include steps (',' separated).
+parameters:
+  conditions: ''
+  steps: []
+
+steps:
+  - ${{ if and( not(startsWith(parameters.conditions, 'not')), contains(parameters.conditions, variables['build.reason'])) }}:
+    - ${{ parameters.steps }}
+  - ${{ if and( startsWith(parameters.conditions, 'not'), not(contains(parameters.conditions, variables['build.reason']))) }}:
+    - ${{ parameters.steps }}
diff --git a/eng/common/templates/steps/helix-publish.yml b/eng/common/templates/steps/helix-publish.yml
new file mode 100644
index 0000000..6bbebd3
--- /dev/null
+++ b/eng/common/templates/steps/helix-publish.yml
@@ -0,0 +1,50 @@
+parameters:
+  HelixSource: 'pr/dotnet-github-anon-kaonashi-bot'
+  HelixType: ̓'tests/default'
+  HelixBuild: $(Build.BuildNumber)
+  HelixTargetQueues: ''
+  HelixAccessToken: ''
+  HelixPreCommands: ''
+  HelixPostCommands: ''
+  WorkItemDirectory: ''
+  WorkItemCommand: ''
+  CorrelationPayloadDirectory: ''
+  XUnitProjects: ''
+  XUnitTargetFramework: ''
+  XUnitRunnerVersion: ''
+  IncludeDotNetCli: false
+  DotNetCliPackageType: ''
+  DotNetCliVersion: ''
+  EnableXUnitReporter: false
+  WaitForWorkItemCompletion: true
+  condition: succeeded()
+  continueOnError: false
+
+steps:
+  - task: DotNetCoreCLI@2
+    inputs:
+      command: custom
+      projects: eng/common/helixpublish.proj
+      custom: msbuild
+      arguments: '/t:test /p:Language=msbuild /bl:$(Build.SourcesDirectory)\artifacts\log\$(_BuildConfig)\SendToHelix.binlog'
+    displayName: Send job to Helix
+    env:
+      HelixSource: ${{ parameters.HelixSource }}
+      HelixType: ${{ parameters.HelixType }}
+      HelixBuild: ${{ parameters.HelixBuild }}
+      HelixTargetQueues: ${{ parameters.HelixTargetQueues }}
+      HelixAccessToken: ${{ parameters.HelixAccessToken }}
+      HelixPreCommands: ${{ parameters.HelixPreCommands }}
+      HelixPostCommands: ${{ parameters.HelixPostCommands }}
+      WorkItemDirectory: ${{ parameters.WorkItemDirectory }}
+      WorkItemCommand: ${{ parameters.WorkItemCommand }}
+      CorrelationPayloadDirectory: ${{ parameters.CorrelationPayloadDirectory }}
+      XUnitProjects: ${{ parameters.XUnitProjects }}
+      XUnitTargetFramework: ${{ parameters.XUnitTargetFramework }}
+      IncludeDotNetCli: ${{ parameters.IncludeDotNetCli }}
+      DotNetCliPackageType: ${{ parameters.DotNetCliPackageType }}
+      DotNetCliVersion: ${{ parameters.DotNetCliVersion }}
+      EnableXUnitReporter: ${{ parameters.EnableXUnitReporter }}
+      WaitForWorkItemCompletion: ${{ parameters.WaitForWorkItemCompletion }}
+    condition: ${{ parameters.condition }}
+    continueOnError: ${{ parameters.continueOnError }}
diff --git a/eng/common/templates/steps/run-on-unix.yml b/eng/common/templates/steps/run-on-unix.yml
new file mode 100644
index 0000000..e173381
--- /dev/null
+++ b/eng/common/templates/steps/run-on-unix.yml
@@ -0,0 +1,7 @@
+parameters:
+  agentOs: ''
+  steps: []
+
+steps:
+- ${{ if ne(parameters.agentOs, 'Windows_NT') }}:
+  - ${{ parameters.steps }}
diff --git a/eng/common/templates/steps/run-on-windows.yml b/eng/common/templates/steps/run-on-windows.yml
new file mode 100644
index 0000000..73e7e9c
--- /dev/null
+++ b/eng/common/templates/steps/run-on-windows.yml
@@ -0,0 +1,7 @@
+parameters:
+  agentOs: ''
+  steps: []
+
+steps:
+- ${{ if eq(parameters.agentOs, 'Windows_NT') }}:
+  - ${{ parameters.steps }}
diff --git a/eng/common/templates/steps/run-script-ifequalelse.yml b/eng/common/templates/steps/run-script-ifequalelse.yml
new file mode 100644
index 0000000..3d1242f
--- /dev/null
+++ b/eng/common/templates/steps/run-script-ifequalelse.yml
@@ -0,0 +1,33 @@
+parameters:
+  # if parameter1 equals parameter 2, run 'ifScript' command, else run 'elsescript' command
+  parameter1: ''
+  parameter2: ''
+  ifScript: ''
+  elseScript: ''
+
+  # name of script step
+  name: Script
+
+  # display name of script step
+  displayName: If-Equal-Else Script
+
+  # environment
+  env: {}
+
+  # conditional expression for step execution
+  condition: ''
+
+steps:
+- ${{ if and(ne(parameters.ifScript, ''), eq(parameters.parameter1, parameters.parameter2)) }}:
+  - script: ${{ parameters.ifScript }}
+    name: ${{ parameters.name }}
+    displayName: ${{ parameters.displayName }}
+    env: ${{ parameters.env }}
+    condition: ${{ parameters.condition }}
+
+- ${{ if and(ne(parameters.elseScript, ''), ne(parameters.parameter1, parameters.parameter2)) }}:
+  - script: ${{ parameters.elseScript }}
+    name: ${{ parameters.name }}
+    displayName: ${{ parameters.displayName }}
+    env: ${{ parameters.env }}
+    condition: ${{ parameters.condition }}
\ No newline at end of file
diff --git a/eng/common/templates/steps/telemetry-end.yml b/eng/common/templates/steps/telemetry-end.yml
new file mode 100644
index 0000000..9cfe360
--- /dev/null
+++ b/eng/common/templates/steps/telemetry-end.yml
@@ -0,0 +1,67 @@
+parameters:
+  helixSource: 'undefined_defaulted_in_telemetry.yml'
+  helixType: 'undefined_defaulted_in_telemetry.yml'
+
+steps:
+- bash: |
+    if [ "$AGENT_JOBSTATUS" = "Succeeded" ] || [ "$AGENT_JOBSTATUS" = "PartiallySucceeded" ]; then
+      errorCount=0
+    else
+      errorCount=1
+    fi
+    warningCount=0
+
+    # create a temporary file for curl output
+    res=`mktemp`
+
+    curlResult=`
+      curl --verbose --output $res --write-out "%{http_code}"\
+      -H 'Content-Type: application/json' \
+      -H "X-Helix-Job-Token: $Helix_JobToken" \
+      -H 'Content-Length: 0' \
+      -X POST -G "https://helix.dot.net/api/2018-03-14/telemetry/job/build/$Helix_WorkItemId/finish" \
+      --data-urlencode "errorCount=$errorCount" \
+      --data-urlencode "warningCount=$warningCount"`
+    curlStatus=$?
+
+    if [ $curlStatus -eq 0 ]; then
+      if [ $curlResult -gt 299 ] || [ $curlResult -lt 200 ]; then
+        curlStatus=$curlResult
+      fi
+    fi
+
+    if [ $curlStatus -ne 0 ]; then
+      echo "Failed to Send Build Finish information"
+      vstsLogOutput="vso[task.logissue type=error;sourcepath=templates/steps/telemetry-end.yml;code=1;]Failed to Send Build Finish information: $curlStatus"
+      echo "##$vstsLogOutput"
+      exit 1
+    fi
+  displayName: Send Unix Build End Telemetry
+  env:
+    # defined via VSTS variables in start-job.sh
+    Helix_JobToken: $(Helix_JobToken)
+    Helix_WorkItemId: $(Helix_WorkItemId)
+  condition: and(always(), ne(variables['Agent.Os'], 'Windows_NT'))
+- powershell: |
+    if (($env:Agent_JobStatus -eq 'Succeeded') -or ($env:Agent_JobStatus -eq 'PartiallySucceeded')) {
+      $ErrorCount = 0
+    } else {
+      $ErrorCount = 1
+    }
+    $WarningCount = 0
+
+    try {
+      Invoke-RestMethod -Uri "https://helix.dot.net/api/2018-03-14/telemetry/job/build/$env:Helix_WorkItemId/finish?errorCount=$ErrorCount&warningCount=$WarningCount" -Method Post -ContentType "application/json" -Body "" `
+        -Headers @{ 'X-Helix-Job-Token'=$env:Helix_JobToken }
+    }
+    catch {
+      Write-Error $_
+      Write-Error $_.Exception
+      exit 1
+    }
+  displayName: Send Windows Build End Telemetry
+  env:
+    # defined via VSTS variables in start-job.ps1
+    Helix_JobToken: $(Helix_JobToken)
+    Helix_WorkItemId: $(Helix_WorkItemId)
+  condition: and(always(),eq(variables['Agent.Os'], 'Windows_NT'))
diff --git a/eng/common/templates/steps/telemetry-start.yml b/eng/common/templates/steps/telemetry-start.yml
new file mode 100644
index 0000000..07f1185
--- /dev/null
+++ b/eng/common/templates/steps/telemetry-start.yml
@@ -0,0 +1,155 @@
+parameters:
+  helixSource: 'undefined_defaulted_in_telemetry.yml'
+  helixType: 'undefined_defaulted_in_telemetry.yml'
+  buildConfig: ''
+  runAsPublic: false
+
+steps:
+- ${{ if and(eq(parameters.runAsPublic, 'false'), not(eq(variables['System.TeamProject'], 'public'))) }}:
+  - task: AzureKeyVault@1
+    inputs:
+      azureSubscription: 'HelixProd_KeyVault'
+      KeyVaultName: HelixProdKV
+      SecretsFilter: 'HelixApiAccessToken'
+    condition: always()
+- bash: |
+    # create a temporary file
+    jobInfo=`mktemp`
+
+    # write job info content to temporary file
+    cat > $jobInfo <<JobListStuff
+    {
+      "QueueId": "$QueueId",
+      "Source": "$Source",
+      "Type": "$Type",
+      "Build": "$Build",
+      "Attempt": "$Attempt",
+      "Properties": {
+        "operatingSystem": "$OperatingSystem",
+        "configuration": "$Configuration"
+      }
+    }
+    JobListStuff
+    
+    # create a temporary file for curl output
+    res=`mktemp`
+
+    accessTokenParameter=''
+    if [[ ! "$HelixApiAccessToken" == "" ]]; then
+      accessTokenParameter="?access_token=$HelixApiAccessToken"
+    fi
+
+    curlResult=`
+      cat $jobInfo |\
+      curl --verbose --output $res --write-out "%{http_code}" \
+      -H 'Content-Type: application/json' \
+      -X POST "https://helix.dot.net/api/2018-03-14/telemetry/job$accessTokenParameter" -d @-`
+    curlStatus=$?
+
+    if [ $curlStatus -eq 0 ]; then
+      if [ $curlResult -gt 299 ] || [ $curlResult -lt 200 ]; then
+        curlStatus=$curlResult
+      fi
+    fi
+
+    curlResult=`cat $res`
+    
+    # validate status of curl command
+    if [ $curlStatus -ne 0 ]; then
+      echo "Failed To Send Job Start information"
+      # We have to append the ## vso prefix or vso will pick up the command when it dumps the inline script into the shell
+      vstsLogOutput="vso[task.logissue type=error;sourcepath=telemetry/start-job.sh;code=1;]Failed to Send Job Start information: $curlStatus"
+      echo "##$vstsLogOutput"
+      exit 1
+    fi
+    
+    # Set the Helix_JobToken variable
+    export Helix_JobToken=`echo $curlResult | xargs echo` # Strip Quotes
+    echo "##vso[task.setvariable variable=Helix_JobToken;issecret=true;]$Helix_JobToken"
+  displayName: Send Unix Job Start Telemetry
+  env:
+    HelixApiAccessToken: $(HelixApiAccessToken)
+    Source: ${{ parameters.helixSource }}
+    Type: ${{ parameters.helixType }}
+    Build: $(Build.BuildNumber)
+    QueueId: $(Agent.Os)
+    Attempt: 1
+    OperatingSystem: $(Agent.Os)
+    Configuration: ${{ parameters.buildConfig }}
+  condition: and(always(), ne(variables['Agent.Os'], 'Windows_NT'))
+- bash: |
+    res=`mktemp`
+    curlResult=`
+      curl --verbose --output $res --write-out "%{http_code}"\
+      -H 'Content-Type: application/json' \
+      -H "X-Helix-Job-Token: $Helix_JobToken" \
+      -H 'Content-Length: 0' \
+      -X POST -G "https://helix.dot.net/api/2018-03-14/telemetry/job/build" \
+      --data-urlencode "buildUri=$BuildUri"`
+    curlStatus=$?
+
+    if [ $curlStatus -eq 0 ]; then
+      if [ $curlResult -gt 299 ] || [ $curlResult -lt 200 ]; then
+        curlStatus=$curlResult
+      fi
+    fi
+
+    curlResult=`cat $res`
+
+    # validate status of curl command
+    if [ $curlStatus -ne 0 ]; then
+      echo "Failed to Send Build Start information"
+      vstsLogOutput="vso[task.logissue type=error;sourcepath=telemetry/build/start.sh;code=1;]Failed to Send Build Start information: $curlStatus"
+      echo "##$vstsLogOutput"
+      exit 1
+    fi
+
+    export Helix_WorkItemId=`echo $curlResult | xargs echo` # Strip Quotes
+    echo "##vso[task.setvariable variable=Helix_WorkItemId]$Helix_WorkItemId"
+  displayName: Send Unix Build Start Telemetry
+  env:
+    BuildUri: $(System.TaskDefinitionsUri)$(System.TeamProject)/_build/index?buildId=$(Build.BuildId)&_a=summary
+    Helix_JobToken: $(Helix_JobToken)
+  condition: and(always(), ne(variables['Agent.Os'], 'Windows_NT'))
+  
+- powershell: |
+    $jobInfo = [pscustomobject]@{
+      QueueId=$env:QueueId;
+      Source=$env:Source;
+      Type=$env:Type;
+      Build=$env:Build;
+      Attempt=$env:Attempt;
+      Properties=[pscustomobject]@{ operatingSystem=$env:OperatingSystem; configuration=$env:Configuration };
+    }
+    
+    $jobInfoJson = $jobInfo | ConvertTo-Json
+
+    if ($env:HelixApiAccessToken) {
+      $accessTokenParameter="?access_token=$($env:HelixApiAccessToken)"
+    }
+    Write-Host "Job Info: $jobInfoJson"
+    $jobToken = Invoke-RestMethod -Uri "https://helix.dot.net/api/2018-03-14/telemetry/job$($accessTokenParameter)" -Method Post -ContentType "application/json" -Body $jobInfoJson
+    $env:Helix_JobToken = $jobToken
+    Write-Host "##vso[task.setvariable variable=Helix_JobToken;issecret=true;]$env:Helix_JobToken"
+  displayName: Send Windows Job Start Telemetry
+  env:
+    HelixApiAccessToken: $(HelixApiAccessToken)
+    Source: ${{ parameters.helixSource }}
+    Type: ${{ parameters.helixType }}
+    Build: $(Build.BuildNumber)
+    QueueId: $(Agent.Os)
+    Attempt: 1
+    OperatingSystem: $(Agent.Os)
+    Configuration: ${{ parameters.buildConfig }}
+  condition: and(always(), eq(variables['Agent.Os'], 'Windows_NT'))
+- powershell: |
+    $workItemId = Invoke-RestMethod -Uri "https://helix.dot.net/api/2018-03-14/telemetry/job/build?buildUri=$([Net.WebUtility]::UrlEncode($env:BuildUri))" -Method Post -ContentType "application/json" -Body "" `
+      -Headers @{ 'X-Helix-Job-Token'=$env:Helix_JobToken }
+  
+    $env:Helix_WorkItemId = $workItemId
+    Write-Host "##vso[task.setvariable variable=Helix_WorkItemId]$env:Helix_WorkItemId"
+  displayName: Send Windows Build Start Telemetry
+  env:
+    BuildUri: $(System.TaskDefinitionsUri)$(System.TeamProject)/_build/index?buildId=$(Build.BuildId)&_a=summary
+    Helix_JobToken: $(Helix_JobToken)
+  condition: and(always(), eq(variables['Agent.Os'], 'Windows_NT'))
diff --git a/eng/common/tools.ps1 b/eng/common/tools.ps1
new file mode 100644
index 0000000..734576e
--- /dev/null
+++ b/eng/common/tools.ps1
@@ -0,0 +1,283 @@
+# Initialize variables if they aren't already defined
+
+$ci = if (Test-Path variable:ci) { $ci } else { $false }
+$configuration = if (Test-Path variable:configuration) { $configuration } else { "Debug" }
+$nodereuse = if (Test-Path variable:nodereuse) { $nodereuse } else { !$ci }
+$prepareMachine = if (Test-Path variable:prepareMachine) { $prepareMachine } else { $false }
+$restore = if (Test-Path variable:restore) { $restore } else { $true }
+$verbosity = if (Test-Path variable:verbosity) { $verbosity } else { "minimal" }
+$warnaserror = if (Test-Path variable:warnaserror) { $warnaserror } else { $true }
+$msbuildEngine = if (Test-Path variable:msbuildEngine) { $msbuildEngine } else { $null }
+$useInstalledDotNetCli = if (Test-Path variable:useInstalledDotNetCli) { $useInstalledDotNetCli } else { $true }
+
+set-strictmode -version 2.0
+$ErrorActionPreference = "Stop"
+[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
+
+function Create-Directory([string[]] $path) {
+  if (!(Test-Path $path)) {
+    New-Item -path $path -force -itemType "Directory" | Out-Null
+  }
+}
+
+function InitializeDotNetCli([bool]$install) {
+  # Don't resolve runtime, shared framework, or SDK from other locations to ensure build determinism
+  $env:DOTNET_MULTILEVEL_LOOKUP=0
+
+  # Disable first run since we do not need all ASP.NET packages restored.
+  $env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
+
+  # Source Build uses DotNetCoreSdkDir variable
+  if ($env:DotNetCoreSdkDir -ne $null) {
+    $env:DOTNET_INSTALL_DIR = $env:DotNetCoreSdkDir
+  }
+
+  # Find the first path on %PATH% that contains the dotnet.exe
+  if ($useInstalledDotNetCli -and ($env:DOTNET_INSTALL_DIR -eq $null)) {
+    $env:DOTNET_INSTALL_DIR = ${env:PATH}.Split(';') | where { ($_ -ne "") -and (Test-Path (Join-Path $_ "dotnet.exe")) }
+  }
+
+  $dotnetSdkVersion = $GlobalJson.tools.dotnet
+
+  # Use dotnet installation specified in DOTNET_INSTALL_DIR if it contains the required SDK version,
+  # otherwise install the dotnet CLI and SDK to repo local .dotnet directory to avoid potential permission issues.
+  if (($env:DOTNET_INSTALL_DIR -ne $null) -and (Test-Path(Join-Path $env:DOTNET_INSTALL_DIR "sdk\$dotnetSdkVersion"))) {
+    $dotnetRoot = $env:DOTNET_INSTALL_DIR
+  } else {
+    $dotnetRoot = Join-Path $RepoRoot ".dotnet"
+    $env:DOTNET_INSTALL_DIR = $dotnetRoot
+
+    if (-not (Test-Path(Join-Path $env:DOTNET_INSTALL_DIR "sdk\$dotnetSdkVersion"))) {
+      if ($install) {
+        InstallDotNetSdk $dotnetRoot $dotnetSdkVersion
+      } else {
+        Write-Host "Unable to find dotnet with SDK version '$dotnetSdkVersion'" -ForegroundColor Red
+        ExitWithExitCode 1
+      }
+    }
+  }
+
+  return $dotnetRoot
+}
+
+function GetDotNetInstallScript([string] $dotnetRoot) {
+  $installScript = "$dotnetRoot\dotnet-install.ps1"
+  if (!(Test-Path $installScript)) {
+    Create-Directory $dotnetRoot
+    Invoke-WebRequest "https://dot.net/v1/dotnet-install.ps1" -OutFile $installScript
+  }
+
+  return $installScript
+}
+
+function InstallDotNetSdk([string] $dotnetRoot, [string] $version) {
+  $installScript = GetDotNetInstallScript $dotnetRoot
+  & $installScript -Version $version -InstallDir $dotnetRoot
+  if ($lastExitCode -ne 0) {
+    Write-Host "Failed to install dotnet cli (exit code '$lastExitCode')." -ForegroundColor Red
+    ExitWithExitCode $lastExitCode
+  }
+}
+
+function InitializeVisualStudioBuild {
+  $vsToolsPath = $env:VS150COMNTOOLS
+  if ($vsToolsPath -eq $null) { 
+    $vsToolsPath = $env:VS160COMNTOOLS
+  }
+
+  if (($vsToolsPath -ne $null) -and (Test-Path $vsToolsPath)) {
+    $vsInstallDir = [System.IO.Path]::GetFullPath((Join-Path $vsToolsPath "..\.."))
+  } else {
+    $vsInfo = LocateVisualStudio
+
+    $vsInstallDir = $vsInfo.installationPath
+    $vsSdkInstallDir = Join-Path $vsInstallDir "VSSDK\"
+    $vsVersion = $vsInfo.installationVersion.Split('.')[0] + "0"
+
+    Set-Item "env:VS$($vsVersion)COMNTOOLS" (Join-Path $vsInstallDir "Common7\Tools\")    
+    Set-Item "env:VSSDK$($vsVersion)Install" $vsSdkInstallDir
+    $env:VSSDKInstall = $vsSdkInstallDir
+  }
+
+  return $vsInstallDir
+}
+
+function LocateVisualStudio {
+  $vswhereVersion = $GlobalJson.tools.vswhere
+
+  if (!$vsWhereVersion) {
+    Write-Host "vswhere version must be specified in /global.json." -ForegroundColor Red
+    ExitWithExitCode 1
+  }
+
+  $toolsRoot = Join-Path $RepoRoot ".tools"
+  $vsWhereDir = Join-Path $toolsRoot "vswhere\$vswhereVersion"
+  $vsWhereExe = Join-Path $vsWhereDir "vswhere.exe"
+
+  if (!(Test-Path $vsWhereExe)) {
+    Create-Directory $vsWhereDir
+    Write-Host "Downloading vswhere"
+    Invoke-WebRequest "https://github.com/Microsoft/vswhere/releases/download/$vswhereVersion/vswhere.exe" -OutFile $vswhereExe
+  }
+
+  $vsInfo = & $vsWhereExe `
+    -latest `
+    -prerelease `
+    -format json `
+    -requires Microsoft.Component.MSBuild `
+    -requires Microsoft.VisualStudio.Component.VSSDK `
+    -requires Microsoft.VisualStudio.Component.Roslyn.Compiler | ConvertFrom-Json
+
+  if ($lastExitCode -ne 0) {
+    Write-Host "Failed to locate Visual Studio (exit code '$lastExitCode')." -ForegroundColor Red
+    ExitWithExitCode $lastExitCode
+  }
+
+  # use first matching instance
+  return $vsInfo[0]
+}
+
+function ConfigureTools { 
+  # Include custom tools configuration
+  $script = Join-Path $EngRoot "configure-toolset.ps1"
+
+  if (Test-Path $script) {
+    . $script
+  }
+}
+
+function InitializeTools() {
+  ConfigureTools
+
+  $tools = $GlobalJson.tools
+
+  # Initialize dotnet cli if listed in 'tools'
+  $dotnetRoot = $null
+  if ((Get-Member -InputObject $tools -Name "dotnet") -ne $null) {
+    $dotnetRoot = InitializeDotNetCli -install:$restore
+  }
+
+  if (-not $msbuildEngine) {
+    # Presence of vswhere.version indicates the repo needs to build using VS msbuild.
+    if ((Get-Member -InputObject $tools -Name "vswhere") -ne $null) {
+      $msbuildEngine = "vs"
+    } elseif ($dotnetRoot -ne $null) {
+      $msbuildEngine = "dotnet"
+    } else {
+      Write-Host "-msbuildEngine must be specified, or /global.json must specify 'tools.dotnet' or 'tools.vswhere'." -ForegroundColor Red
+      ExitWithExitCode 1
+    }
+  }
+
+  if ($msbuildEngine -eq "dotnet") {
+    if (!$dotnetRoot) {
+      Write-Host "/global.json must specify 'tools.dotnet'." -ForegroundColor Red
+      ExitWithExitCode 1
+    }
+
+    $script:buildDriver = Join-Path $dotnetRoot "dotnet.exe"
+    $script:buildArgs = "msbuild"
+  } elseif ($msbuildEngine -eq "vs") {
+    $vsInstallDir = InitializeVisualStudioBuild
+
+    $script:buildDriver = Join-Path $vsInstallDir "MSBuild\15.0\Bin\msbuild.exe"
+    $script:buildArgs = ""
+  } else {
+    Write-Host "Unexpected value of -msbuildEngine: '$msbuildEngine'." -ForegroundColor Red
+    ExitWithExitCode 1
+  }
+
+  InitializeToolSet $script:buildDriver $script:buildArgs
+  InitializeCustomToolset
+}
+
+function InitializeToolset([string] $buildDriver, [string]$buildArgs) {
+  $toolsetVersion = $GlobalJson.'msbuild-sdks'.'Microsoft.DotNet.Arcade.Sdk'
+  $toolsetLocationFile = Join-Path $ToolsetDir "$toolsetVersion.txt"
+
+  if (Test-Path $toolsetLocationFile) {
+    $path = Get-Content $toolsetLocationFile -TotalCount 1
+    if (Test-Path $path) {
+      $script:ToolsetBuildProj = $path
+      return
+    }
+  }
+
+  if (-not $restore) {
+    Write-Host  "Toolset version $toolsetVersion has not been restored."
+    ExitWithExitCode 1
+  }
+
+  $ToolsetRestoreLog = Join-Path $LogDir "ToolsetRestore.binlog"
+  $proj = Join-Path $ToolsetDir "restore.proj"
+
+  '<Project Sdk="Microsoft.DotNet.Arcade.Sdk"/>' | Set-Content $proj
+  MSBuild $proj /t:__WriteToolsetLocation /clp:None /bl:$ToolsetRestoreLog /p:__ToolsetLocationOutputFile=$toolsetLocationFile
+
+  if ($lastExitCode -ne 0) {
+    Write-Host "Failed to restore toolset (exit code '$lastExitCode'). See log: $ToolsetRestoreLog" -ForegroundColor Red
+    ExitWithExitCode $lastExitCode
+  }
+
+  $path = Get-Content $toolsetLocationFile -TotalCount 1
+  if (!(Test-Path $path)) {
+    throw "Invalid toolset path: $path"
+  }
+
+  $script:ToolsetBuildProj = $path
+}
+
+function InitializeCustomToolset {
+  if (-not $restore) {
+    return
+  }
+
+  $script = Join-Path $EngRoot "restore-toolset.ps1"
+
+  if (Test-Path $script) {
+    . $script
+  }
+}
+
+function ExitWithExitCode([int] $exitCode) {
+  if ($ci -and $prepareMachine) {
+    Stop-Processes
+  }
+  exit $exitCode
+}
+
+function Stop-Processes() {
+  Write-Host "Killing running build processes..."
+  Get-Process -Name "msbuild" -ErrorAction SilentlyContinue | Stop-Process
+  Get-Process -Name "dotnet" -ErrorAction SilentlyContinue | Stop-Process
+  Get-Process -Name "vbcscompiler" -ErrorAction SilentlyContinue | Stop-Process
+}
+
+function MsBuild() {
+  $warnaserrorSwitch = if ($warnaserror) { "/warnaserror" } else { "" }
+  & $buildDriver $buildArgs $warnaserrorSwitch /m /nologo /clp:Summary /v:$verbosity /nr:$nodereuse $args
+}
+
+$RepoRoot = Resolve-Path (Join-Path $PSScriptRoot "..\..")
+$EngRoot = Resolve-Path (Join-Path $PSScriptRoot "..")
+$ArtifactsDir = Join-Path $RepoRoot "artifacts"
+$ToolsetDir = Join-Path $ArtifactsDir "toolset"
+$LogDir = Join-Path (Join-Path $ArtifactsDir "log") $configuration
+$TempDir = Join-Path (Join-Path $ArtifactsDir "tmp") $configuration
+$GlobalJson = Get-Content -Raw -Path (Join-Path $RepoRoot "global.json") | ConvertFrom-Json
+
+if ($env:NUGET_PACKAGES -eq $null) {
+  # Use local cache on CI to ensure deterministic build,
+  # use global cache in dev builds to avoid cost of downloading packages.
+  $env:NUGET_PACKAGES = if ($ci) { Join-Path $RepoRoot ".packages" }
+                        else { Join-Path $env:UserProfile ".nuget\packages" }
+}
+
+Create-Directory $ToolsetDir
+Create-Directory $LogDir
+
+if ($ci) {
+  Create-Directory $TempDir
+  $env:TEMP = $TempDir
+  $env:TMP = $TempDir
+}
diff --git a/eng/common/tools.sh b/eng/common/tools.sh
new file mode 100644
index 0000000..c7d03ee
--- /dev/null
+++ b/eng/common/tools.sh
@@ -0,0 +1,258 @@
+#!/usr/bin/env bash
+
+# Stop script if unbound variable found (use ${var:-} if intentional)
+set -u
+
+ci=${ci:-false}
+configuration=${configuration:-'Debug'}
+nodereuse=${nodereuse:-true}
+prepare_machine=${prepare_machine:-false}
+restore=${restore:-true}
+verbosity=${verbosity:-'minimal'}
+warnaserror=${warnaserror:-true}
+useInstalledDotNetCli=${useInstalledDotNetCli:-true}
+
+repo_root="$scriptroot/../.."
+eng_root="$scriptroot/.."
+artifacts_dir="$repo_root/artifacts"
+toolset_dir="$artifacts_dir/toolset"
+log_dir="$artifacts_dir/log/$configuration"
+temp_dir="$artifacts_dir/tmp/$configuration"
+
+global_json_file="$repo_root/global.json"
+build_driver=""
+toolset_build_proj=""
+
+function ResolvePath {
+  local path=$1
+
+  # resolve $path until the file is no longer a symlink
+  while [[ -h $path ]]; do
+    local dir="$( cd -P "$( dirname "$path" )" && pwd )"
+    path="$(readlink "$path")"
+
+    # if $path was a relative symlink, we need to resolve it relative to the path where the
+    # symlink file was located
+    [[ $path != /* ]] && path="$dir/$path"
+  done
+
+  # return value
+  _ResolvePath="$path"
+}
+
+# ReadVersionFromJson [json key]
+function ReadGlobalVersion {
+  local key=$1
+
+  local line=`grep -m 1 "$key" "$global_json_file"`
+  local pattern="\"$key\" *: *\"(.*)\""
+
+  if [[ ! $line =~ $pattern ]]; then
+    echo "Error: Cannot find \"$key\" in $global_json_file" >&2
+    ExitWithExitCode 1
+  fi
+
+  # return value
+  _ReadGlobalVersion=${BASH_REMATCH[1]}
+}
+
+function InitializeDotNetCli {
+  local install=$1
+
+  # Don't resolve runtime, shared framework, or SDK from other locations to ensure build determinism
+  export DOTNET_MULTILEVEL_LOOKUP=0
+
+  # Disable first run since we want to control all package sources
+  export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
+
+  # Source Build uses DotNetCoreSdkDir variable
+  if [[ -n "${DotNetCoreSdkDir:-}" ]]; then
+    export DOTNET_INSTALL_DIR="$DotNetCoreSdkDir"
+  fi
+
+  # Find the first path on $PATH that contains the dotnet.exe
+  if [[ "$useInstalledDotNetCli" == true && -z "${DOTNET_INSTALL_DIR:-}" ]]; then
+    local dotnet_path=`command -v dotnet`
+    if [[ -n "$dotnet_path" ]]; then
+      ResolvePath "$dotnet_path"
+      export DOTNET_INSTALL_DIR=`dirname "$_ResolvePath"`
+    fi
+  fi
+
+  ReadGlobalVersion "dotnet"
+  local dotnet_sdk_version=$_ReadGlobalVersion
+  local dotnet_root=""
+
+  # Use dotnet installation specified in DOTNET_INSTALL_DIR if it contains the required SDK version,
+  # otherwise install the dotnet CLI and SDK to repo local .dotnet directory to avoid potential permission issues.
+  if [[ -n "${DOTNET_INSTALL_DIR:-}" && -d "$DOTNET_INSTALL_DIR/sdk/$dotnet_sdk_version" ]]; then
+    dotnet_root="$DOTNET_INSTALL_DIR"
+  else
+    dotnet_root="$repo_root/.dotnet"
+    export DOTNET_INSTALL_DIR="$dotnet_root"
+
+    if [[ ! -d "$DOTNET_INSTALL_DIR/sdk/$dotnet_sdk_version" ]]; then
+      if [[ "$install" == true ]]; then
+        InstallDotNetSdk "$dotnet_root" "$dotnet_sdk_version"
+      else
+        echo "Unable to find dotnet with SDK version '$dotnet_sdk_version'" >&2
+        ExitWithExitCode 1
+      fi
+    fi
+  fi
+
+  # return value
+  _InitializeDotNetCli="$dotnet_root"
+}
+
+function InstallDotNetSdk {
+  local root=$1
+  local version=$2
+
+  GetDotNetInstallScript "$root"
+  local install_script=$_GetDotNetInstallScript
+
+  bash "$install_script" --version $version --install-dir "$root"
+  local lastexitcode=$?
+
+  if [[ $lastexitcode != 0 ]]; then
+    echo "Failed to install dotnet SDK (exit code '$lastexitcode')." >&2
+    ExitWithExitCode $lastexitcode
+  fi
+}
+
+function GetDotNetInstallScript {
+  local root=$1
+  local install_script="$root/dotnet-install.sh"
+  local install_script_url="https://dot.net/v1/dotnet-install.sh"
+
+  if [[ ! -a "$install_script" ]]; then
+    mkdir -p "$root"
+
+    echo "Downloading '$install_script_url'"
+
+    # Use curl if available, otherwise use wget
+    if command -v curl > /dev/null; then
+      curl "$install_script_url" -sSL --retry 10 --create-dirs -o "$install_script"
+    else
+      wget -q -O "$install_script" "$install_script_url"
+    fi
+  fi
+
+  # return value
+  _GetDotNetInstallScript="$install_script"
+}
+
+function InitializeToolset {
+  ReadGlobalVersion "Microsoft.DotNet.Arcade.Sdk"
+
+  local toolset_version=$_ReadGlobalVersion
+  local toolset_location_file="$toolset_dir/$toolset_version.txt"
+
+  if [[ -a "$toolset_location_file" ]]; then
+    local path=`cat "$toolset_location_file"`
+    if [[ -a "$path" ]]; then
+      toolset_build_proj="$path"
+      return
+    fi
+  fi
+
+  if [[ "$restore" != true ]]; then
+    echo "Toolset version $toolsetVersion has not been restored." >&2
+    ExitWithExitCode 2
+  fi
+
+  local toolset_restore_log="$log_dir/ToolsetRestore.binlog"
+  local proj="$toolset_dir/restore.proj"
+
+  echo '<Project Sdk="Microsoft.DotNet.Arcade.Sdk"/>' > "$proj"
+
+  MSBuild "$proj" /t:__WriteToolsetLocation /clp:None /bl:"$toolset_restore_log" /p:__ToolsetLocationOutputFile="$toolset_location_file"
+  local lastexitcode=$?
+
+  if [[ $lastexitcode != 0 ]]; then
+    echo "Failed to restore toolset (exit code '$lastexitcode'). See log: $toolset_restore_log" >&2
+    ExitWithExitCode $lastexitcode
+  fi
+
+  toolset_build_proj=`cat "$toolset_location_file"`
+
+  if [[ ! -a "$toolset_build_proj" ]]; then
+    echo "Invalid toolset path: $toolset_build_proj" >&2
+    ExitWithExitCode 3
+  fi
+}
+
+function InitializeCustomToolset {
+  local script="$eng_root/restore-toolset.sh"
+
+  if [[ -a "$script" ]]; then
+    . "$script"
+  fi
+}
+
+function ConfigureTools {
+  local script="$eng_root/configure-toolset.sh"
+
+  if [[ -a "$script" ]]; then
+    . "$script"
+  fi
+}
+
+function InitializeTools {
+  ConfigureTools
+
+  InitializeDotNetCli $restore
+  build_driver="$_InitializeDotNetCli/dotnet"
+
+  InitializeToolset
+  InitializeCustomToolset
+}
+
+function ExitWithExitCode {
+  if [[ "$ci" == true && "$prepare_machine" == true ]]; then
+    StopProcesses
+  fi
+  exit $1
+}
+
+function StopProcesses {
+  echo "Killing running build processes..."
+  pkill -9 "dotnet"
+  pkill -9 "vbcscompiler"
+  return 0
+}
+
+function MSBuild {
+  local warnaserror_switch=""
+  if [[ $warnaserror == true ]]; then
+    warnaserror_switch="/warnaserror"
+  fi
+
+  "$build_driver" msbuild /m /nologo /clp:Summary /v:$verbosity /nr:$nodereuse $warnaserror_switch "$@"
+
+  return $?
+}
+
+# HOME may not be defined in some scenarios, but it is required by NuGet
+if [[ -z $HOME ]]; then
+  export HOME="$repo_root/artifacts/.home/"
+  mkdir -p "$HOME"
+fi
+
+if [[ -z ${NUGET_PACKAGES:-} ]]; then
+  if [[ $ci == true ]]; then
+    export NUGET_PACKAGES="$repo_root/.packages"
+  else
+    export NUGET_PACKAGES="$HOME/.nuget/packages"
+  fi
+fi
+
+mkdir -p "$toolset_dir"
+mkdir -p "$log_dir"
+
+if [[ $ci == true ]]; then
+  mkdir -p "$temp_dir"
+  export TEMP="$temp_dir"
+  export TMP="$temp_dir"
+fi
diff --git a/eng/configure-toolset.ps1 b/eng/configure-toolset.ps1
new file mode 100644
index 0000000..df9fe3a
--- /dev/null
+++ b/eng/configure-toolset.ps1
@@ -0,0 +1,5 @@
+# We depend on a local cli for a number of our buildtool
+# commands like init-tools so for now we need to disable
+# using the globally installed dotnet
+
+$script:useInstalledDotNetCli = $false
\ No newline at end of file
diff --git a/external/docs/docs.depproj b/external/docs/docs.depproj
index 3d9a28e..c0e3629 100644
--- a/external/docs/docs.depproj
+++ b/external/docs/docs.depproj
@@ -1,12 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
 
   <PropertyGroup>
     <NuGetRuntimeIdentifier>none</NuGetRuntimeIdentifier>
     <OutputPath>$(XmlDocDir)</OutputPath>
     <RestoreOutputPath>$(IntermediateOutputPath)</RestoreOutputPath>
     <ContainsPackageReferences>true</ContainsPackageReferences>
+    <TargetFrameworkIdentifier>.NETStandard</TargetFrameworkIdentifier>
   </PropertyGroup>
 
   <ItemGroup>
@@ -51,5 +52,5 @@
     <Error Condition="'%(DocFile.Culture)' == 'unknown'" Text="Unknown language folder '%(LCID)' for doc files '@(DocFile)'" />
   </Target>
 
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
\ No newline at end of file
diff --git a/global.json b/global.json
new file mode 100644
index 0000000..d13014c
--- /dev/null
+++ b/global.json
@@ -0,0 +1,8 @@
+{
+  "tools": {
+    "dotnet": "2.1.401"
+  },
+  "msbuild-sdks": {
+    "Microsoft.DotNet.Arcade.Sdk": "1.0.0-beta.18563.21"
+  }
+}
diff --git a/init-tools.cmd b/init-tools.cmd
deleted file mode 100644
index 0c3ca90..0000000
--- a/init-tools.cmd
+++ /dev/null
@@ -1,85 +0,0 @@
-@if not defined _echo @echo off
-setlocal
-
-set INIT_TOOLS_LOG=%~dp0init-tools.log
-if [%PACKAGES_DIR%]==[] set PACKAGES_DIR=%~dp0packages\
-if [%TOOLRUNTIME_DIR%]==[] set TOOLRUNTIME_DIR=%~dp0Tools
-set DOTNET_PATH=%TOOLRUNTIME_DIR%\dotnetcli\
-if [%DOTNET_CMD%]==[] set DOTNET_CMD=%DOTNET_PATH%dotnet.exe
-if [%BUILDTOOLS_SOURCE%]==[] set BUILDTOOLS_SOURCE=https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json
-set /P BUILDTOOLS_VERSION=< "%~dp0BuildToolsVersion.txt"
-set BUILD_TOOLS_PATH=%PACKAGES_DIR%Microsoft.DotNet.BuildTools\%BUILDTOOLS_VERSION%\lib\
-set INIT_TOOLS_RESTORE_PROJECT=%~dp0init-tools.msbuild
-set BUILD_TOOLS_SEMAPHORE=%TOOLRUNTIME_DIR%\%BUILDTOOLS_VERSION%\init-tools.completed
-
-:: if force option is specified then clean the tool runtime and build tools package directory to force it to get recreated
-if [%1]==[force] (
-  if exist "%TOOLRUNTIME_DIR%" rmdir /S /Q "%TOOLRUNTIME_DIR%"
-  if exist "%PACKAGES_DIR%Microsoft.DotNet.BuildTools" rmdir /S /Q "%PACKAGES_DIR%Microsoft.DotNet.BuildTools"
-)
-
-:: If sempahore exists do nothing
-if exist "%BUILD_TOOLS_SEMAPHORE%" (
-  echo Tools are already initialized.
-  goto :EOF
-)
-
-if exist "%TOOLRUNTIME_DIR%" rmdir /S /Q "%TOOLRUNTIME_DIR%"
-
-if exist "%DotNetBuildToolsDir%" (
-  echo Using tools from '%DotNetBuildToolsDir%'.
-  mklink /j "%TOOLRUNTIME_DIR%" "%DotNetBuildToolsDir%"
-
-  if not exist "%DOTNET_CMD%" (
-    echo ERROR: Ensure that '%DotNetBuildToolsDir%' contains the .NET Core SDK at '%DOTNET_PATH%'
-    exit /b 1
-  )
-
-  echo Done initializing tools.
-  echo Using tools from '%DotNetBuildToolsDir%'. > "%BUILD_TOOLS_SEMAPHORE%"
-  exit /b 0
-)
-
-echo Running %0 > "%INIT_TOOLS_LOG%"
-
-set /p DOTNET_VERSION=< "%~dp0DotnetCLIVersion.txt"
-if exist "%DOTNET_CMD%" goto :afterdotnetrestore
-
-echo Installing dotnet cli...
-if NOT exist "%DOTNET_PATH%" mkdir "%DOTNET_PATH%"
-set DOTNET_ZIP_NAME=dotnet-sdk-%DOTNET_VERSION%-win-x64.zip
-set DOTNET_REMOTE_PATH=https://dotnetcli.azureedge.net/dotnet/Sdk/%DOTNET_VERSION%/%DOTNET_ZIP_NAME%
-set DOTNET_LOCAL_PATH=%DOTNET_PATH%%DOTNET_ZIP_NAME%
-echo Installing '%DOTNET_REMOTE_PATH%' to '%DOTNET_LOCAL_PATH%' >> "%INIT_TOOLS_LOG%"
-powershell -NoProfile -ExecutionPolicy unrestricted -Command "$retryCount = 0; $success = $false; do { try { (New-Object Net.WebClient).DownloadFile('%DOTNET_REMOTE_PATH%', '%DOTNET_LOCAL_PATH%'); $success = $true; } catch { if ($retryCount -ge 6) { throw; } else { $retryCount++; Start-Sleep -Seconds (5 * $retryCount); } } } while ($success -eq $false); Add-Type -Assembly 'System.IO.Compression.FileSystem' -ErrorVariable AddTypeErrors; if ($AddTypeErrors.Count -eq 0) { [System.IO.Compression.ZipFile]::ExtractToDirectory('%DOTNET_LOCAL_PATH%', '%DOTNET_PATH%') } else { (New-Object -com shell.application).namespace('%DOTNET_PATH%').CopyHere((new-object -com shell.application).namespace('%DOTNET_LOCAL_PATH%').Items(),16) }" >> "%INIT_TOOLS_LOG%"
-if NOT exist "%DOTNET_LOCAL_PATH%" (
-  echo ERROR: Could not install dotnet cli correctly. See '%INIT_TOOLS_LOG%' for more details. 1>&2
-  exit /b 1
-)
-
-:afterdotnetrestore
-
-if exist "%BUILD_TOOLS_PATH%" goto :afterbuildtoolsrestore
-echo Restoring BuildTools version %BUILDTOOLS_VERSION%...
-echo Running: "%DOTNET_CMD%" restore "%INIT_TOOLS_RESTORE_PROJECT%" --no-cache --packages %PACKAGES_DIR% --source "%BUILDTOOLS_SOURCE%" /p:BuildToolsPackageVersion=%BUILDTOOLS_VERSION% >> "%INIT_TOOLS_LOG%"
-call "%DOTNET_CMD%" restore "%INIT_TOOLS_RESTORE_PROJECT%" --no-cache --packages %PACKAGES_DIR% --source "%BUILDTOOLS_SOURCE%" /p:BuildToolsPackageVersion=%BUILDTOOLS_VERSION% >> "%INIT_TOOLS_LOG%"
-if NOT exist "%BUILD_TOOLS_PATH%init-tools.cmd" (
-  echo ERROR: Could not restore build tools correctly. See '%INIT_TOOLS_LOG%' for more details. 1>&2
-  exit /b 1
-)
-
-:afterbuildtoolsrestore
-
-echo Initializing BuildTools...
-echo Running: "%BUILD_TOOLS_PATH%init-tools.cmd" "%~dp0" "%DOTNET_CMD%" "%TOOLRUNTIME_DIR%" >> "%INIT_TOOLS_LOG%"
-call "%BUILD_TOOLS_PATH%init-tools.cmd" "%~dp0" "%DOTNET_CMD%" "%TOOLRUNTIME_DIR%" >> "%INIT_TOOLS_LOG%"
-set INIT_TOOLS_ERRORLEVEL=%ERRORLEVEL%
-if not [%INIT_TOOLS_ERRORLEVEL%]==[0] (
-  echo ERROR: An error occured when trying to initialize the tools. Please check '%INIT_TOOLS_LOG%' for more details. 1>&2
-  exit /b %INIT_TOOLS_ERRORLEVEL%
-)
-
-:: Create sempahore file
-echo Done initializing tools.
-echo Init-Tools.cmd completed for BuildTools Version: %BUILDTOOLS_VERSION% > "%BUILD_TOOLS_SEMAPHORE%"
-exit /b 0
diff --git a/init-tools.msbuild b/init-tools.msbuild
deleted file mode 100644
index 1ec33f6..0000000
--- a/init-tools.msbuild
+++ /dev/null
@@ -1,11 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk">
-  <PropertyGroup>
-    <TargetFramework>netcoreapp1.0</TargetFramework>
-    <EnableDefaultItems>false</EnableDefaultItems>
-    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
-    <BaseIntermediateOutputPath>$(MSBuildThisFileDirectory)Tools/$(BuildToolsPackageVersion)</BaseIntermediateOutputPath>
-  </PropertyGroup>
-  <ItemGroup>
-    <PackageReference Include="Microsoft.DotNet.BuildTools" Version="$(BuildToolsPackageVersion)" />
-  </ItemGroup>
-</Project>
\ No newline at end of file
diff --git a/init-tools.sh b/init-tools.sh
deleted file mode 100755
index 774c60b..0000000
--- a/init-tools.sh
+++ /dev/null
@@ -1,155 +0,0 @@
-#!/usr/bin/env bash
-
-__scriptpath=$(cd "$(dirname "$0")"; pwd -P)
-__init_tools_log=$__scriptpath/init-tools.log
-__PACKAGES_DIR=$__scriptpath/packages
-__TOOLRUNTIME_DIR=$__scriptpath/Tools
-__DOTNET_PATH=$__TOOLRUNTIME_DIR/dotnetcli
-__DOTNET_CMD=$__DOTNET_PATH/dotnet
-if [ -z "$__BUILDTOOLS_SOURCE" ]; then __BUILDTOOLS_SOURCE=https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json; fi
-export __BUILDTOOLS_USE_CSPROJ=true
-__BUILD_TOOLS_PACKAGE_VERSION=$(cat $__scriptpath/BuildToolsVersion.txt)
-__DOTNET_TOOLS_VERSION=$(cat $__scriptpath/DotnetCLIVersion.txt)
-__BUILD_TOOLS_PATH=$__PACKAGES_DIR/microsoft.dotnet.buildtools/$__BUILD_TOOLS_PACKAGE_VERSION/lib
-__INIT_TOOLS_RESTORE_PROJECT=$__scriptpath/init-tools.msbuild
-__BUILD_TOOLS_SEMAPHORE=$__TOOLRUNTIME_DIR/$__BUILD_TOOLS_PACKAGE_VERSION/init-tools.complete
-
-if [ -e $__BUILD_TOOLS_SEMAPHORE ]; then
-    echo "Tools are already initialized"
-    exit 0
-fi
-
-if [ -e $__TOOLRUNTIME_DIR ]; then rm -rf -- $__TOOLRUNTIME_DIR; fi
-
-if [ -d "$DotNetBuildToolsDir" ]; then
-    echo "Using tools from '$DotNetBuildToolsDir'."
-    ln -s "$DotNetBuildToolsDir" "$__TOOLRUNTIME_DIR"
-
-    if [ ! -e "$__DOTNET_CMD" ]; then
-        echo "ERROR: Ensure that $DotNetBuildToolsDir contains the .NET Core SDK at $__DOTNET_PATH"
-        exit 1
-    fi
-
-    echo "Done initializing tools."
-    mkdir -p "$(dirname "$__BUILD_TOOLS_SEMAPHORE")" && touch $__BUILD_TOOLS_SEMAPHORE
-    exit 0
-fi
-
-echo "Running: $__scriptpath/init-tools.sh" > $__init_tools_log
-
-display_error_message() {
-    echo "Please check the detailed log that follows." 1>&2
-    cat "$__init_tools_log" 1>&2
-}
-
-# Executes a command and retries if it fails.
-execute_with_retry() {
-    local count=0
-    local retries=${retries:-5}
-    local waitFactor=${waitFactor:-6} 
-    until "$@"; do
-        local exit=$?
-        count=$(( $count + 1 ))
-        if [ $count -lt $retries ]; then
-            local wait=$(( waitFactor ** (( count - 1 )) ))
-            echo "Retry $count/$retries exited $exit, retrying in $wait seconds..."
-            sleep $wait
-        else    
-            say_err "Retry $count/$retries exited $exit, no more retries left."
-            return $exit
-        fi
-    done
-
-    return 0
-}
-
-if [ ! -e $__DOTNET_PATH ]; then
-    if [ -z "$__DOTNET_PKG" ]; then
-        if [ "$(uname -m | grep "i[3456]86")" = "i686" ]; then
-            echo "Warning: build not supported on 32 bit Unix"
-        fi
-        OSName=$(uname -s)
-        case $OSName in
-            Darwin)
-                OS=OSX
-                __DOTNET_PKG=dotnet-sdk-${__DOTNET_TOOLS_VERSION}-osx-x64
-                ulimit -n 2048
-                ;;
-
-            Linux)
-                __DOTNET_PKG=dotnet-sdk-${__DOTNET_TOOLS_VERSION}-linux-x64
-                OS=Linux
-
-                if [ -e /etc/redhat-release ]; then
-                    redhatRelease=$(</etc/redhat-release)
-                    if [[ $redhatRelease == "CentOS release 6."* || $redhatRelease == "Red Hat Enterprise Linux Server release 6."* ]]; then
-                        __DOTNET_PKG=dotnet-sdk-${__DOTNET_TOOLS_VERSION}-rhel.6-x64
-                    fi
-                fi
-
-                ;;
-
-            *)
-                echo "Unsupported OS '$OSName' detected. Downloading linux-x64 tools."
-                OS=Linux
-                __DOTNET_PKG=dotnet-sdk-${__DOTNET_TOOLS_VERSION}-linux-x64
-                ;;
-      esac
-    fi
-
-    mkdir -p "$__DOTNET_PATH"
-
-    echo "Installing dotnet cli..."
-    __DOTNET_LOCATION="https://dotnetcli.azureedge.net/dotnet/Sdk/${__DOTNET_TOOLS_VERSION}/${__DOTNET_PKG}.tar.gz"
-
-    install_dotnet_cli() {
-        echo "Installing '${__DOTNET_LOCATION}' to '$__DOTNET_PATH/dotnet.tar'" >> "$__init_tools_log"
-        rm -rf -- "$__DOTNET_PATH/*"
-        # curl has HTTPS CA trust-issues less often than wget, so lets try that first.
-        which curl > /dev/null 2> /dev/null
-        if [ $? -ne 0 ]; then
-            wget -q -O $__DOTNET_PATH/dotnet.tar ${__DOTNET_LOCATION}
-        else
-            curl --retry 10 -sSL --create-dirs -o $__DOTNET_PATH/dotnet.tar ${__DOTNET_LOCATION}
-        fi
-        cd $__DOTNET_PATH
-        tar -xf $__DOTNET_PATH/dotnet.tar
-    }
-    execute_with_retry install_dotnet_cli >> "$__init_tools_log" 2>&1
-
-    cd $__scriptpath
-fi
-
-if [ ! -e $__BUILD_TOOLS_PATH ]; then
-    echo "Restoring BuildTools version $__BUILD_TOOLS_PACKAGE_VERSION..."
-    echo "Running: $__DOTNET_CMD restore \"$__INIT_TOOLS_RESTORE_PROJECT\" --no-cache --packages $__PACKAGES_DIR --source $__BUILDTOOLS_SOURCE /p:BuildToolsPackageVersion=$__BUILD_TOOLS_PACKAGE_VERSION" >> $__init_tools_log
-    $__DOTNET_CMD restore "$__INIT_TOOLS_RESTORE_PROJECT" --no-cache --packages $__PACKAGES_DIR --source $__BUILDTOOLS_SOURCE /p:BuildToolsPackageVersion=$__BUILD_TOOLS_PACKAGE_VERSION >> $__init_tools_log
-    if [ ! -e "$__BUILD_TOOLS_PATH/init-tools.sh" ]; then 
-        echo "ERROR: Could not restore build tools correctly." 1>&2 
-        display_error_message
-    fi
-fi
-
-echo "Initializing BuildTools..."
-echo "Running: $__BUILD_TOOLS_PATH/init-tools.sh $__scriptpath $__DOTNET_CMD $__TOOLRUNTIME_DIR $__PACKAGES_DIR" >> $__init_tools_log
-
-# Executables restored with .NET Core 2.0 do not have executable permission flags. https://github.com/NuGet/Home/issues/4424
-chmod +x $__BUILD_TOOLS_PATH/init-tools.sh
-$__BUILD_TOOLS_PATH/init-tools.sh $__scriptpath $__DOTNET_CMD $__TOOLRUNTIME_DIR $__PACKAGES_DIR >> $__init_tools_log
-if [ "$?" != "0" ]; then
-    echo "ERROR: An error occured when trying to initialize the tools." 1>&2
-    display_error_message
-    exit 1
-fi
-
-echo "Making all .sh files executable under Tools."
-# Executables restored with .NET Core 2.0 do not have executable permission flags. https://github.com/NuGet/Home/issues/4424
-ls $__scriptpath/Tools/*.sh | xargs chmod +x
-ls $__scriptpath/Tools/scripts/docker/*.sh | xargs chmod +x
-
-Tools/crossgen.sh $__scriptpath/Tools
-
-mkdir -p "$(dirname "$__BUILD_TOOLS_SEMAPHORE")" && touch $__BUILD_TOOLS_SEMAPHORE
-
-echo "Done initializing tools."
-
diff --git a/netstandard/pkg/NETStandard.Library.pkgproj b/netstandard/pkg/NETStandard.Library.pkgproj
index d0d1c23..62b154e 100644
--- a/netstandard/pkg/NETStandard.Library.pkgproj
+++ b/netstandard/pkg/NETStandard.Library.pkgproj
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
 
   <PropertyGroup>
-    <Version>2.0.3</Version>
+    <Version>2.1.0</Version>
     <HarvestStablePackage>false</HarvestStablePackage>
     <SkipPackageFileCheck>true</SkipPackageFileCheck>
     <OmitDependencies>true</OmitDependencies>
@@ -47,5 +47,10 @@
                       Overwrite="true" />
   </Target>
 
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+
+  <PropertyGroup>
+    <OutDir>$(BaseOutputPath)shims/$(ShimRelOutputPath)</OutDir>
+  </PropertyGroup>
+
 </Project>
diff --git a/netstandard/pkg/shims/Directory.Build.targets b/netstandard/pkg/shims/Directory.Build.targets
new file mode 100644
index 0000000..36b81c5
--- /dev/null
+++ b/netstandard/pkg/shims/Directory.Build.targets
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+
+  <!--
+    These shims need to have a higher file version then the last ones we shipped to ensure they win
+    the conflict resolution so setting major/minor to match what was shipped before. The patch version
+    is computed based on a date seed so it should always be higher then what we shipped previously.
+  -->
+  <PropertyGroup>
+    <MajorVersion>4</MajorVersion>
+    <MinorVersion>6</MinorVersion>
+  </PropertyGroup>
+
+  <!--
+    We want to use these shims at runtime as well in some cases so we need to not
+    have the ReferenceAssemblyAttribute or the AssemblyFlags 0x70 bit set otherwise
+    the runtime will block loading them.
+  -->
+  <Target Name="ClearReferenceAssemblyBits" BeforeTargets="GenerateAssemblyInfo">
+    <!--
+      Removes all the lines added before GenerateAssemblyInfo is called. In particular clears the
+      lines added by ReferenceAssemblies.targets.
+    -->
+    <ItemGroup>
+      <AssemblyInfoLines Remove="@(AssemblyInfoLines)" />
+    </ItemGroup>
+  </Target>
+
+  <Target Name="MarkProjectReferencesAsNotPrivate" BeforeTargets="AssignProjectConfiguration">
+    <ItemGroup>
+      <ProjectReference>
+        <Private>false</Private>
+      </ProjectReference>
+    </ItemGroup>
+  </Target>
+
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Build.targets))\Directory.Build.targets" />
+
+  <PropertyGroup>
+    <OutDir>$(BaseOutputPath)shims/$(ShimRelOutputPath)</OutDir>
+    <GenerateProjectSpecificOutputFolder>false</GenerateProjectSpecificOutputFolder>
+    <NoWarn>$(NoWarn);0618</NoWarn>
+    <!-- Leave TargetPath empty so it can be set by Microsoft.Common.CurrentVersion.targets -->
+    <TargetPath></TargetPath>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/Directory.Build.props b/netstandard/pkg/shims/netfx/Directory.Build.props
new file mode 100644
index 0000000..c90b9e6
--- /dev/null
+++ b/netstandard/pkg/shims/netfx/Directory.Build.props
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <ShimRelOutputPath>netfx</ShimRelOutputPath>
+    <TargetFramework>netstandard2.0</TargetFramework>
+    <!-- Treat this as a reference assembly because it needs to packaged in the ref folder -->
+    <IsReferenceAssembly>true</IsReferenceAssembly>
+  </PropertyGroup>
+
+  <!-- Disable code paths that require project.assets.json files to be present or to be computed. -->
+  <PropertyGroup>
+    <GenerateDependencyFile>false</GenerateDependencyFile>
+    <ComputeNETCoreBuildOutputFiles>false</ComputeNETCoreBuildOutputFiles>
+    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>
+  </PropertyGroup>
+
+   <ItemGroup>
+    <PackageDestination Include="build/$(TargetFramework)/ref">
+      <TargetFramework>$(TargetFramework)</TargetFramework>
+    </PackageDestination>
+  </ItemGroup>
+
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Build.props))\Directory.Build.props" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.ComponentModel.Composition.csproj b/netstandard/pkg/shims/netfx/System.ComponentModel.Composition.csproj
index c211796..3ee2953 100644
--- a/netstandard/pkg/shims/netfx/System.ComponentModel.Composition.csproj
+++ b/netstandard/pkg/shims/netfx/System.ComponentModel.Composition.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ComponentModel.Composition</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ComponentModel.Composition.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Core.csproj b/netstandard/pkg/shims/netfx/System.Core.csproj
index 354b150..0d13d7a 100644
--- a/netstandard/pkg/shims/netfx/System.Core.csproj
+++ b/netstandard/pkg/shims/netfx/System.Core.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Core</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Core.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Data.csproj b/netstandard/pkg/shims/netfx/System.Data.csproj
index fafb3ce..38e9352 100644
--- a/netstandard/pkg/shims/netfx/System.Data.csproj
+++ b/netstandard/pkg/shims/netfx/System.Data.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Data</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Data.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Drawing.csproj b/netstandard/pkg/shims/netfx/System.Drawing.csproj
index e1cb477..2e2372d 100644
--- a/netstandard/pkg/shims/netfx/System.Drawing.csproj
+++ b/netstandard/pkg/shims/netfx/System.Drawing.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Drawing</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Drawing.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.IO.Compression.FileSystem.csproj b/netstandard/pkg/shims/netfx/System.IO.Compression.FileSystem.csproj
index 5df3735..4bfc756 100644
--- a/netstandard/pkg/shims/netfx/System.IO.Compression.FileSystem.csproj
+++ b/netstandard/pkg/shims/netfx/System.IO.Compression.FileSystem.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.Compression.FileSystem.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Net.csproj b/netstandard/pkg/shims/netfx/System.Net.csproj
index 5c5e8e2..34823c9 100644
--- a/netstandard/pkg/shims/netfx/System.Net.csproj
+++ b/netstandard/pkg/shims/netfx/System.Net.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Numerics.csproj b/netstandard/pkg/shims/netfx/System.Numerics.csproj
index 1ecb31d..8a1c64a 100644
--- a/netstandard/pkg/shims/netfx/System.Numerics.csproj
+++ b/netstandard/pkg/shims/netfx/System.Numerics.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Numerics</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Numerics.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Runtime.Serialization.csproj b/netstandard/pkg/shims/netfx/System.Runtime.Serialization.csproj
index d4a62ff..27d94d8 100644
--- a/netstandard/pkg/shims/netfx/System.Runtime.Serialization.csproj
+++ b/netstandard/pkg/shims/netfx/System.Runtime.Serialization.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Serialization</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Serialization.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.ServiceModel.Web.csproj b/netstandard/pkg/shims/netfx/System.ServiceModel.Web.csproj
index 4e5a4b2..63adc1d 100644
--- a/netstandard/pkg/shims/netfx/System.ServiceModel.Web.csproj
+++ b/netstandard/pkg/shims/netfx/System.ServiceModel.Web.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ServiceModel.Web</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ServiceModel.Web.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Transactions.csproj b/netstandard/pkg/shims/netfx/System.Transactions.csproj
index 338cd8d..7e4a10c 100644
--- a/netstandard/pkg/shims/netfx/System.Transactions.csproj
+++ b/netstandard/pkg/shims/netfx/System.Transactions.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Transactions</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Transactions.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Web.csproj b/netstandard/pkg/shims/netfx/System.Web.csproj
index 9f4cad1..44b5a15 100644
--- a/netstandard/pkg/shims/netfx/System.Web.csproj
+++ b/netstandard/pkg/shims/netfx/System.Web.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Web</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Web.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Windows.csproj b/netstandard/pkg/shims/netfx/System.Windows.csproj
index 8f9af92..5507c99 100644
--- a/netstandard/pkg/shims/netfx/System.Windows.csproj
+++ b/netstandard/pkg/shims/netfx/System.Windows.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Windows</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Windows.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Xml.Linq.csproj b/netstandard/pkg/shims/netfx/System.Xml.Linq.csproj
index 52cd888..319d25a 100644
--- a/netstandard/pkg/shims/netfx/System.Xml.Linq.csproj
+++ b/netstandard/pkg/shims/netfx/System.Xml.Linq.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.Linq</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.Linq.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Xml.Serialization.csproj b/netstandard/pkg/shims/netfx/System.Xml.Serialization.csproj
index 031ff03..52414a5 100644
--- a/netstandard/pkg/shims/netfx/System.Xml.Serialization.csproj
+++ b/netstandard/pkg/shims/netfx/System.Xml.Serialization.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.Serialization</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.Serialization.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.Xml.csproj b/netstandard/pkg/shims/netfx/System.Xml.csproj
index 6ec29bb..f4a8487 100644
--- a/netstandard/pkg/shims/netfx/System.Xml.csproj
+++ b/netstandard/pkg/shims/netfx/System.Xml.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/System.csproj b/netstandard/pkg/shims/netfx/System.csproj
index fa082fa..78ae382 100644
--- a/netstandard/pkg/shims/netfx/System.csproj
+++ b/netstandard/pkg/shims/netfx/System.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -11,5 +9,5 @@
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
     <ProjectReference Include="..\..\..\..\platforms\extensions\System.CodeDom.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netfx/dir.builds b/netstandard/pkg/shims/netfx/dir.builds
index 1d47155..5e2dad7 100644
--- a/netstandard/pkg/shims/netfx/dir.builds
+++ b/netstandard/pkg/shims/netfx/dir.builds
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <ItemGroup>
     <Project Include="*.csproj" Exclude="@(ExcludeProject)" />
   </ItemGroup>
diff --git a/netstandard/pkg/shims/netfx/mscorlib.csproj b/netstandard/pkg/shims/netfx/mscorlib.csproj
index 6de2a5e..a2b13a8 100644
--- a/netstandard/pkg/shims/netfx/mscorlib.csproj
+++ b/netstandard/pkg/shims/netfx/mscorlib.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>mscorlib</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -13,5 +11,5 @@
     <ProjectReference Include="..\..\..\..\platforms\extensions\System.Security.AccessControl.csproj" />
     <ProjectReference Include="..\..\..\..\platforms\extensions\System.Security.Principal.Windows.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/Directory.Build.props b/netstandard/pkg/shims/netstandard/Directory.Build.props
new file mode 100644
index 0000000..d48e24c
--- /dev/null
+++ b/netstandard/pkg/shims/netstandard/Directory.Build.props
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <ShimRelOutputPath>netstandard</ShimRelOutputPath>
+    <TargetFramework>netstandard2.0</TargetFramework>
+    <!-- Treat this as a reference assembly because it needs to packaged in the ref folder -->
+    <IsReferenceAssembly>true</IsReferenceAssembly>
+  </PropertyGroup>
+
+  <!-- Disable code paths that require project.assets.json files to be present or to be computed. -->
+  <PropertyGroup>
+    <GenerateDependencyFile>false</GenerateDependencyFile>
+    <ComputeNETCoreBuildOutputFiles>false</ComputeNETCoreBuildOutputFiles>
+    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>
+  </PropertyGroup>
+
+  <PropertyGroup>
+    <PackageForNetFx>true</PackageForNetFx>
+    <!-- Some assemblies that ship with implementatiosn in NetFx should not ship as a netfx shim -->
+    <PackageForNetFx Condition="'$(MSBuildProjectName)' == 'System.IO.Compression'">false</PackageForNetFx>
+    <PackageForNetFx Condition="'$(MSBuildProjectName)' == 'System.Net.Http'">false</PackageForNetFx>
+    <PackageForNetFx Condition="'$(MSBuildProjectName)' == 'System.ValueTuple'">false</PackageForNetFx>
+    <PackageForNetFx Condition="'$(MSBuildProjectName)' == 'System.Runtime.InteropServices.RuntimeInformation'">false</PackageForNetFx>
+  </PropertyGroup>
+
+  <ItemGroup>
+    <PackageDestination Include="build/$(TargetFramework)/ref">
+      <TargetFramework>$(TargetFramework)</TargetFramework>
+    </PackageDestination>
+  </ItemGroup>
+
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Build.props))\Directory.Build.props" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/Microsoft.Win32.Primitives.csproj b/netstandard/pkg/shims/netstandard/Microsoft.Win32.Primitives.csproj
index 959e386..0eafd60 100644
--- a/netstandard/pkg/shims/netstandard/Microsoft.Win32.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/Microsoft.Win32.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>Microsoft.Win32.Primitives</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="Microsoft.Win32.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.AppContext.csproj b/netstandard/pkg/shims/netstandard/System.AppContext.csproj
index aa49cae..3ba00e1 100644
--- a/netstandard/pkg/shims/netstandard/System.AppContext.csproj
+++ b/netstandard/pkg/shims/netstandard/System.AppContext.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.AppContext</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.AppContext.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Collections.Concurrent.csproj b/netstandard/pkg/shims/netstandard/System.Collections.Concurrent.csproj
index 286821f..1550681 100644
--- a/netstandard/pkg/shims/netstandard/System.Collections.Concurrent.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Collections.Concurrent.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Collections.Concurrent</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Collections.Concurrent.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Collections.NonGeneric.csproj b/netstandard/pkg/shims/netstandard/System.Collections.NonGeneric.csproj
index fa07e7c..4652689 100644
--- a/netstandard/pkg/shims/netstandard/System.Collections.NonGeneric.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Collections.NonGeneric.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Collections.NonGeneric</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Collections.NonGeneric.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Collections.Specialized.csproj b/netstandard/pkg/shims/netstandard/System.Collections.Specialized.csproj
index ea4e61e..53ff188 100644
--- a/netstandard/pkg/shims/netstandard/System.Collections.Specialized.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Collections.Specialized.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Collections.Specialized</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Collections.Specialized.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Collections.csproj b/netstandard/pkg/shims/netstandard/System.Collections.csproj
index af3617b..25bb801 100644
--- a/netstandard/pkg/shims/netstandard/System.Collections.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Collections.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Collections</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Collections.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.ComponentModel.EventBasedAsync.csproj b/netstandard/pkg/shims/netstandard/System.ComponentModel.EventBasedAsync.csproj
index 4272c3f..8d8f13c 100644
--- a/netstandard/pkg/shims/netstandard/System.ComponentModel.EventBasedAsync.csproj
+++ b/netstandard/pkg/shims/netstandard/System.ComponentModel.EventBasedAsync.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ComponentModel.EventBasedAsync.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.ComponentModel.Primitives.csproj b/netstandard/pkg/shims/netstandard/System.ComponentModel.Primitives.csproj
index 2a7391b..2388f8f 100644
--- a/netstandard/pkg/shims/netstandard/System.ComponentModel.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/System.ComponentModel.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ComponentModel.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.ComponentModel.TypeConverter.csproj b/netstandard/pkg/shims/netstandard/System.ComponentModel.TypeConverter.csproj
index f127d6a..9e7fa90 100644
--- a/netstandard/pkg/shims/netstandard/System.ComponentModel.TypeConverter.csproj
+++ b/netstandard/pkg/shims/netstandard/System.ComponentModel.TypeConverter.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ComponentModel.TypeConverter.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.ComponentModel.csproj b/netstandard/pkg/shims/netstandard/System.ComponentModel.csproj
index b70b0d9..389b154 100644
--- a/netstandard/pkg/shims/netstandard/System.ComponentModel.csproj
+++ b/netstandard/pkg/shims/netstandard/System.ComponentModel.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ComponentModel</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ComponentModel.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Console.csproj b/netstandard/pkg/shims/netstandard/System.Console.csproj
index 9b4583a..1d2f80d 100644
--- a/netstandard/pkg/shims/netstandard/System.Console.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Console.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Console</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Console.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Data.Common.csproj b/netstandard/pkg/shims/netstandard/System.Data.Common.csproj
index 206b1ba..6a687ea 100644
--- a/netstandard/pkg/shims/netstandard/System.Data.Common.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Data.Common.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Data.Common</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Data.Common.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.Contracts.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.Contracts.csproj
index c2b8f35..c069ce0 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.Contracts.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.Contracts.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.Contracts</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.Contracts.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.Debug.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.Debug.csproj
index 5f8790f..d368824 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.Debug.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.Debug.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.Debug</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.Debug.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.FileVersionInfo.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.FileVersionInfo.csproj
index 4bd20bc..0f010c8 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.FileVersionInfo.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.FileVersionInfo.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.FileVersionInfo.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.Process.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.Process.csproj
index d28954a..68b036e 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.Process.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.Process.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.Process</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.Process.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.StackTrace.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.StackTrace.csproj
index a807216..a4a3de0 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.StackTrace.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.StackTrace.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
     <AssemblyVersion>4.0.4.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.StackTrace.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.TextWriterTraceListener.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.TextWriterTraceListener.csproj
index e6a08f7..bf2f0ab 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.TextWriterTraceListener.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.TextWriterTraceListener.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.TextWriterTraceListener.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.Tools.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.Tools.csproj
index 20fa815..b52c04d 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.Tools.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.Tools.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.Tools</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.Tools.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.TraceSource.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.TraceSource.csproj
index 60be7ce..ce71065 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.TraceSource.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.TraceSource.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.TraceSource.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Diagnostics.Tracing.csproj b/netstandard/pkg/shims/netstandard/System.Diagnostics.Tracing.csproj
index 54da01c..b88ae46 100644
--- a/netstandard/pkg/shims/netstandard/System.Diagnostics.Tracing.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Diagnostics.Tracing.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Diagnostics.Tracing.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Drawing.Primitives.csproj b/netstandard/pkg/shims/netstandard/System.Drawing.Primitives.csproj
index c938f31..71bf9a9 100644
--- a/netstandard/pkg/shims/netstandard/System.Drawing.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Drawing.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Drawing.Primitives</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Drawing.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Dynamic.Runtime.csproj b/netstandard/pkg/shims/netstandard/System.Dynamic.Runtime.csproj
index 3cb5781..8bb40ab 100644
--- a/netstandard/pkg/shims/netstandard/System.Dynamic.Runtime.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Dynamic.Runtime.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Dynamic.Runtime</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Dynamic.Runtime.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Globalization.Calendars.csproj b/netstandard/pkg/shims/netstandard/System.Globalization.Calendars.csproj
index 77131cb..3851b90 100644
--- a/netstandard/pkg/shims/netstandard/System.Globalization.Calendars.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Globalization.Calendars.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Globalization.Calendars</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Globalization.Calendars.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Globalization.Extensions.csproj b/netstandard/pkg/shims/netstandard/System.Globalization.Extensions.csproj
index dafd49c..98140f0 100644
--- a/netstandard/pkg/shims/netstandard/System.Globalization.Extensions.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Globalization.Extensions.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Globalization.Extensions</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Globalization.Extensions.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Globalization.csproj b/netstandard/pkg/shims/netstandard/System.Globalization.csproj
index 860fcb5..be6459c 100644
--- a/netstandard/pkg/shims/netstandard/System.Globalization.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Globalization.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Globalization</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Globalization.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.Compression.ZipFile.csproj b/netstandard/pkg/shims/netstandard/System.IO.Compression.ZipFile.csproj
index cc8673e..802df75 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.Compression.ZipFile.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.Compression.ZipFile.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.Compression.ZipFile.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.Compression.csproj b/netstandard/pkg/shims/netstandard/System.IO.Compression.csproj
index 394cd5e..b120899 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.Compression.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.Compression.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.Compression</AssemblyName>
     <AssemblyVersion>4.1.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.Compression.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.DriveInfo.csproj b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.DriveInfo.csproj
index 0a4fdd3..ad821e8 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.DriveInfo.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.DriveInfo.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.FileSystem.DriveInfo.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Primitives.csproj b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Primitives.csproj
index fb655be..0f20207 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.FileSystem.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Watcher.csproj b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Watcher.csproj
index fc12185..5596020 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Watcher.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.Watcher.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.FileSystem.Watcher.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.csproj b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.csproj
index 246d9ec..7c2aab0 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.FileSystem.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.FileSystem.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.FileSystem</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.FileSystem.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.IsolatedStorage.csproj b/netstandard/pkg/shims/netstandard/System.IO.IsolatedStorage.csproj
index 57a99fc..c1ee4f0 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.IsolatedStorage.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.IsolatedStorage.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.IsolatedStorage.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.MemoryMappedFiles.csproj b/netstandard/pkg/shims/netstandard/System.IO.MemoryMappedFiles.csproj
index c35f956..fb47081 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.MemoryMappedFiles.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.MemoryMappedFiles.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.MemoryMappedFiles.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.Pipes.csproj b/netstandard/pkg/shims/netstandard/System.IO.Pipes.csproj
index ba9cc5b..546c4e7 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.Pipes.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.Pipes.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.Pipes</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.Pipes.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.UnmanagedMemoryStream.csproj b/netstandard/pkg/shims/netstandard/System.IO.UnmanagedMemoryStream.csproj
index f9c2911..6023970 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.UnmanagedMemoryStream.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.UnmanagedMemoryStream.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.UnmanagedMemoryStream.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.IO.csproj b/netstandard/pkg/shims/netstandard/System.IO.csproj
index 0a3e3b9..7c2366a 100644
--- a/netstandard/pkg/shims/netstandard/System.IO.csproj
+++ b/netstandard/pkg/shims/netstandard/System.IO.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.IO</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.IO.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Linq.Expressions.csproj b/netstandard/pkg/shims/netstandard/System.Linq.Expressions.csproj
index b91403b..c774f4b 100644
--- a/netstandard/pkg/shims/netstandard/System.Linq.Expressions.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Linq.Expressions.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Linq.Expressions</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Linq.Expressions.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Linq.Parallel.csproj b/netstandard/pkg/shims/netstandard/System.Linq.Parallel.csproj
index 73518a5..24a5372 100644
--- a/netstandard/pkg/shims/netstandard/System.Linq.Parallel.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Linq.Parallel.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Linq.Parallel</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Linq.Parallel.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Linq.Queryable.csproj b/netstandard/pkg/shims/netstandard/System.Linq.Queryable.csproj
index fbc0fdd..6f8317f 100644
--- a/netstandard/pkg/shims/netstandard/System.Linq.Queryable.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Linq.Queryable.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Linq.Queryable</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Linq.Queryable.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Linq.csproj b/netstandard/pkg/shims/netstandard/System.Linq.csproj
index c3b9522..cbdf0ea 100644
--- a/netstandard/pkg/shims/netstandard/System.Linq.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Linq.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Linq</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Linq.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.Http.csproj b/netstandard/pkg/shims/netstandard/System.Net.Http.csproj
index 85ca411..8f4ed88 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.Http.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.Http.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.Http</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.Http.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.NameResolution.csproj b/netstandard/pkg/shims/netstandard/System.Net.NameResolution.csproj
index dc0473b..36cbd48 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.NameResolution.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.NameResolution.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.NameResolution</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.NameResolution.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.NetworkInformation.csproj b/netstandard/pkg/shims/netstandard/System.Net.NetworkInformation.csproj
index b94e58a..188e7b7 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.NetworkInformation.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.NetworkInformation.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.NetworkInformation</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.NetworkInformation.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
diff --git a/netstandard/pkg/shims/netstandard/System.Net.Ping.csproj b/netstandard/pkg/shims/netstandard/System.Net.Ping.csproj
index d4aa8bf..8011e82 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.Ping.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.Ping.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.Ping</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.Ping.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.Primitives.csproj b/netstandard/pkg/shims/netstandard/System.Net.Primitives.csproj
index b404736..6866e23 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.Primitives</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.Requests.csproj b/netstandard/pkg/shims/netstandard/System.Net.Requests.csproj
index 6197387..f49e844 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.Requests.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.Requests.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.Requests</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.Requests.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.Security.csproj b/netstandard/pkg/shims/netstandard/System.Net.Security.csproj
index c0720b9..7a15521 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.Security.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.Security.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.Security</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.Security.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.Sockets.csproj b/netstandard/pkg/shims/netstandard/System.Net.Sockets.csproj
index 83bc58c..510661c 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.Sockets.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.Sockets.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.Sockets</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.Sockets.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.WebHeaderCollection.csproj b/netstandard/pkg/shims/netstandard/System.Net.WebHeaderCollection.csproj
index aaa77f5..9478b37 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.WebHeaderCollection.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.WebHeaderCollection.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.WebHeaderCollection</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.WebHeaderCollection.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.WebSockets.Client.csproj b/netstandard/pkg/shims/netstandard/System.Net.WebSockets.Client.csproj
index 60d3e0b..e26648f 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.WebSockets.Client.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.WebSockets.Client.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.WebSockets.Client.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Net.WebSockets.csproj b/netstandard/pkg/shims/netstandard/System.Net.WebSockets.csproj
index d950a73..59e6d4d 100644
--- a/netstandard/pkg/shims/netstandard/System.Net.WebSockets.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Net.WebSockets.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Net.WebSockets</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Net.WebSockets.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.ObjectModel.csproj b/netstandard/pkg/shims/netstandard/System.ObjectModel.csproj
index e923f32..5a18da8 100644
--- a/netstandard/pkg/shims/netstandard/System.ObjectModel.csproj
+++ b/netstandard/pkg/shims/netstandard/System.ObjectModel.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ObjectModel</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ObjectModel.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Reflection.Extensions.csproj b/netstandard/pkg/shims/netstandard/System.Reflection.Extensions.csproj
index 0a889fa..fab8637 100644
--- a/netstandard/pkg/shims/netstandard/System.Reflection.Extensions.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Reflection.Extensions.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Reflection.Extensions</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Reflection.Extensions.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Reflection.Primitives.csproj b/netstandard/pkg/shims/netstandard/System.Reflection.Primitives.csproj
index 7dff84c..66c58b5 100644
--- a/netstandard/pkg/shims/netstandard/System.Reflection.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Reflection.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Reflection.Primitives</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Reflection.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Reflection.csproj b/netstandard/pkg/shims/netstandard/System.Reflection.csproj
index 54db5c1..cd0ea05 100644
--- a/netstandard/pkg/shims/netstandard/System.Reflection.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Reflection.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Reflection</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Reflection.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Resources.Reader.csproj b/netstandard/pkg/shims/netstandard/System.Resources.Reader.csproj
index d30eed2..14f0a60 100644
--- a/netstandard/pkg/shims/netstandard/System.Resources.Reader.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Resources.Reader.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Resources.Reader</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Resources.Reader.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Resources.ResourceManager.csproj b/netstandard/pkg/shims/netstandard/System.Resources.ResourceManager.csproj
index e315dad..791579f 100644
--- a/netstandard/pkg/shims/netstandard/System.Resources.ResourceManager.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Resources.ResourceManager.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Resources.ResourceManager</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Resources.ResourceManager.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Resources.Writer.csproj b/netstandard/pkg/shims/netstandard/System.Resources.Writer.csproj
index cb3b379..ac5e18b 100644
--- a/netstandard/pkg/shims/netstandard/System.Resources.Writer.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Resources.Writer.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Resources.Writer</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Resources.Writer.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.CompilerServices.VisualC.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.CompilerServices.VisualC.csproj
index 97520af..524f7aa 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.CompilerServices.VisualC.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.CompilerServices.VisualC.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.CompilerServices.VisualC.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.Extensions.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.Extensions.csproj
index 93b2ae0..02b1d84 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.Extensions.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.Extensions.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Extensions</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Extensions.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.Handles.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.Handles.csproj
index cc88081..ccf2b6f 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.Handles.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.Handles.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Handles</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Handles.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.RuntimeInformation.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.RuntimeInformation.csproj
index bfc23a3..f5c8aab 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.RuntimeInformation.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.RuntimeInformation.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.InteropServices.RuntimeInformation</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.InteropServices.RuntimeInformation.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.csproj
index b3bf480..32d9576 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.InteropServices.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.InteropServices</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.InteropServices.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.Numerics.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.Numerics.csproj
index b9e932a..d9b3c45 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.Numerics.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.Numerics.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Numerics</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Numerics.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Formatters.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Formatters.csproj
index a16cdde..79fffa8 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Formatters.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Formatters.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Serialization.Formatters.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Json.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Json.csproj
index 0d8b462..43cde5c 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Json.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Json.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Serialization.Json.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Primitives.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Primitives.csproj
index 6897d4e..35e31d8 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
     <AssemblyVersion>4.1.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Serialization.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Xml.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Xml.csproj
index c20a47c..c628ccb 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Xml.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.Serialization.Xml.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
     <AssemblyVersion>4.1.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Serialization.Xml.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Runtime.csproj b/netstandard/pkg/shims/netstandard/System.Runtime.csproj
index a2d2f6f..80001a9 100644
--- a/netstandard/pkg/shims/netstandard/System.Runtime.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Runtime.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Runtime</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Runtime.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.Claims.csproj b/netstandard/pkg/shims/netstandard/System.Security.Claims.csproj
index 7d29ca2..fb97f26 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.Claims.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.Claims.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Claims</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.Claims.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Algorithms.csproj b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Algorithms.csproj
index 9f118cd..1fe4860 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Algorithms.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Algorithms.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
     <AssemblyVersion>4.2.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.Cryptography.Algorithms.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Csp.csproj b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Csp.csproj
index 8163299..c60ed77 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Csp.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Csp.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.Cryptography.Csp.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Encoding.csproj b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Encoding.csproj
index 0966fcb..6da1e78 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Encoding.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Encoding.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.Cryptography.Encoding.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Primitives.csproj b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Primitives.csproj
index 8f1875f..b380f84 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Primitives.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.Primitives.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.Cryptography.Primitives.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.X509Certificates.csproj b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.X509Certificates.csproj
index bc99df6..9e4bb61 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.Cryptography.X509Certificates.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.Cryptography.X509Certificates.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
     <AssemblyVersion>4.1.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.Cryptography.X509Certificates.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.Principal.csproj b/netstandard/pkg/shims/netstandard/System.Security.Principal.csproj
index 525dfc8..8c01a24 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.Principal.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.Principal.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Principal</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.Principal.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Security.SecureString.csproj b/netstandard/pkg/shims/netstandard/System.Security.SecureString.csproj
index 177a966..4a605d3 100644
--- a/netstandard/pkg/shims/netstandard/System.Security.SecureString.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Security.SecureString.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.SecureString</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Security.SecureString.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Text.Encoding.Extensions.csproj b/netstandard/pkg/shims/netstandard/System.Text.Encoding.Extensions.csproj
index b17c571..b69b085 100644
--- a/netstandard/pkg/shims/netstandard/System.Text.Encoding.Extensions.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Text.Encoding.Extensions.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Text.Encoding.Extensions.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Text.Encoding.csproj b/netstandard/pkg/shims/netstandard/System.Text.Encoding.csproj
index 9c3d349..eb4d7e0 100644
--- a/netstandard/pkg/shims/netstandard/System.Text.Encoding.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Text.Encoding.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Text.Encoding</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Text.Encoding.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Text.RegularExpressions.csproj b/netstandard/pkg/shims/netstandard/System.Text.RegularExpressions.csproj
index 4c8db53..a29eaee 100644
--- a/netstandard/pkg/shims/netstandard/System.Text.RegularExpressions.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Text.RegularExpressions.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Text.RegularExpressions</AssemblyName>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Text.RegularExpressions.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Threading.Overlapped.csproj b/netstandard/pkg/shims/netstandard/System.Threading.Overlapped.csproj
index b289972..92cbc4e 100644
--- a/netstandard/pkg/shims/netstandard/System.Threading.Overlapped.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Threading.Overlapped.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Threading.Overlapped</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Threading.Overlapped.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Threading.Tasks.Parallel.csproj b/netstandard/pkg/shims/netstandard/System.Threading.Tasks.Parallel.csproj
index 8224dc6..b318e9a 100644
--- a/netstandard/pkg/shims/netstandard/System.Threading.Tasks.Parallel.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Threading.Tasks.Parallel.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Threading.Tasks.Parallel.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Threading.Tasks.csproj b/netstandard/pkg/shims/netstandard/System.Threading.Tasks.csproj
index 0c0e8d0..29b8f7d 100644
--- a/netstandard/pkg/shims/netstandard/System.Threading.Tasks.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Threading.Tasks.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Threading.Tasks</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Threading.Tasks.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Threading.Thread.csproj b/netstandard/pkg/shims/netstandard/System.Threading.Thread.csproj
index 7d72bb5..5d844b1 100644
--- a/netstandard/pkg/shims/netstandard/System.Threading.Thread.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Threading.Thread.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Threading.Thread</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Threading.Thread.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Threading.ThreadPool.csproj b/netstandard/pkg/shims/netstandard/System.Threading.ThreadPool.csproj
index b57b152..4d0a023 100644
--- a/netstandard/pkg/shims/netstandard/System.Threading.ThreadPool.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Threading.ThreadPool.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Threading.ThreadPool</AssemblyName>
     <AssemblyVersion>4.0.12.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Threading.ThreadPool.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Threading.Timer.csproj b/netstandard/pkg/shims/netstandard/System.Threading.Timer.csproj
index e71dd44..f21eb9c 100644
--- a/netstandard/pkg/shims/netstandard/System.Threading.Timer.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Threading.Timer.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Threading.Timer</AssemblyName>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Threading.Timer.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Threading.csproj b/netstandard/pkg/shims/netstandard/System.Threading.csproj
index 988efae..aa069a0 100644
--- a/netstandard/pkg/shims/netstandard/System.Threading.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Threading.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Threading</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Threading.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.ValueTuple.csproj b/netstandard/pkg/shims/netstandard/System.ValueTuple.csproj
index 83aa291..4e58a99 100644
--- a/netstandard/pkg/shims/netstandard/System.ValueTuple.csproj
+++ b/netstandard/pkg/shims/netstandard/System.ValueTuple.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.ValueTuple</AssemblyName>
     <AssemblyVersion>4.0.2.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.ValueTuple.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Xml.ReaderWriter.csproj b/netstandard/pkg/shims/netstandard/System.Xml.ReaderWriter.csproj
index 93f56a9..37aef2e 100644
--- a/netstandard/pkg/shims/netstandard/System.Xml.ReaderWriter.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Xml.ReaderWriter.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.ReaderWriter.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Xml.XDocument.csproj b/netstandard/pkg/shims/netstandard/System.Xml.XDocument.csproj
index 4ddfcba..ba6a95d 100644
--- a/netstandard/pkg/shims/netstandard/System.Xml.XDocument.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Xml.XDocument.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.XDocument</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.XDocument.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Xml.XPath.XDocument.csproj b/netstandard/pkg/shims/netstandard/System.Xml.XPath.XDocument.csproj
index c9b987f..fb6da5e 100644
--- a/netstandard/pkg/shims/netstandard/System.Xml.XPath.XDocument.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Xml.XPath.XDocument.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.XPath.XDocument.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Xml.XPath.csproj b/netstandard/pkg/shims/netstandard/System.Xml.XPath.csproj
index 40d098e..6a5a1da 100644
--- a/netstandard/pkg/shims/netstandard/System.Xml.XPath.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Xml.XPath.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.XPath</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.XPath.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Xml.XmlDocument.csproj b/netstandard/pkg/shims/netstandard/System.Xml.XmlDocument.csproj
index f2154f4..0152bfd 100644
--- a/netstandard/pkg/shims/netstandard/System.Xml.XmlDocument.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Xml.XmlDocument.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.XmlDocument</AssemblyName>
     <AssemblyVersion>4.0.3.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.XmlDocument.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/System.Xml.XmlSerializer.csproj b/netstandard/pkg/shims/netstandard/System.Xml.XmlSerializer.csproj
index 63da4d6..08345a1 100644
--- a/netstandard/pkg/shims/netstandard/System.Xml.XmlSerializer.csproj
+++ b/netstandard/pkg/shims/netstandard/System.Xml.XmlSerializer.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
     <AssemblyVersion>4.0.11.0</AssemblyVersion>
@@ -10,5 +8,5 @@
     <Compile Include="System.Xml.XmlSerializer.Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
+</Project>
\ No newline at end of file
diff --git a/netstandard/pkg/shims/netstandard/dir.builds b/netstandard/pkg/shims/netstandard/dir.builds
index 1d47155..5e2dad7 100644
--- a/netstandard/pkg/shims/netstandard/dir.builds
+++ b/netstandard/pkg/shims/netstandard/dir.builds
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <ItemGroup>
     <Project Include="*.csproj" Exclude="@(ExcludeProject)" />
   </ItemGroup>
diff --git a/netstandard/pkg/shims/shim.projtemplate b/netstandard/pkg/shims/shim.projtemplate
index 21be81d..bb5358a 100644
--- a/netstandard/pkg/shims/shim.projtemplate
+++ b/netstandard/pkg/shims/shim.projtemplate
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <PropertyGroup>
     <AssemblyName>[SHIM]</AssemblyName>
     <AssemblyVersion>[VERSION]</AssemblyVersion>
@@ -10,5 +10,5 @@
     <Compile Include="[SHIM].Forwards.cs" />
     <ProjectReference Include="..\..\..\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
diff --git a/netstandard/ref/netstandard.csproj b/netstandard/ref/netstandard.csproj
index bc429c9..f96e270 100644
--- a/netstandard/ref/netstandard.csproj
+++ b/netstandard/ref/netstandard.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>2.0.0.0</AssemblyVersion>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,6 +11,14 @@
     <DefaultBuildAllTarget>Build</DefaultBuildAllTarget>
     <BuildAllProjects>true</BuildAllProjects>
   </PropertyGroup>
+
+  <!-- Disable code paths that require project.assets.json files to be present or to be computed. -->
+  <PropertyGroup>
+    <GenerateDependencyFile>false</GenerateDependencyFile>
+    <ComputeNETCoreBuildOutputFiles>false</ComputeNETCoreBuildOutputFiles>
+    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>
+  </PropertyGroup>
+  
   <ItemGroup>
     <!-- Mark netstandard as a framework assembly -->
     <AssemblyMetadata Include=".NETFrameworkAssembly">
@@ -41,5 +47,4 @@
     <Compile Include="System.Xml.cs" />
     <Compile Include="System.Xml.Linq.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/netstandard/src/netstandard.builds b/netstandard/src/netstandard.builds
index 2cd699b..014b13e 100644
--- a/netstandard/src/netstandard.builds
+++ b/netstandard/src/netstandard.builds
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <ItemGroup>
     <Project Include="netstandard.csproj">
       <TargetGroup>xamarin.ios</TargetGroup>
diff --git a/netstandard/src/netstandard.csproj b/netstandard/src/netstandard.csproj
index 814f27c..f5b009c 100644
--- a/netstandard/src/netstandard.csproj
+++ b/netstandard/src/netstandard.csproj
@@ -1,12 +1,11 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <TargetGroup Condition="'$(TargetGroup)'==''">net461</TargetGroup>
   </PropertyGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
   <PropertyGroup>
     <AssemblyName>netstandard</AssemblyName>
     <AssemblyVersion>2.0.0.0</AssemblyVersion>
+    <TargetFramework>netstandard2.0</TargetFramework>
     <ContractProject>..\ref\netstandard.csproj</ContractProject>
     <ResolveMatchingContract>true</ResolveMatchingContract>
     <RunApiCompatForSrc>true</RunApiCompatForSrc>
@@ -15,6 +14,14 @@
     <ApiCompatBaseline>$(MSBuildProjectDirectory)\ApiCompatBaseline.$(TargetGroup).txt</ApiCompatBaseline>
     <NoWarn>$(NoWarn);618</NoWarn>
   </PropertyGroup>
+
+  <!-- Disable code paths that require project.assets.json files to be present or to be computed. -->
+  <PropertyGroup>
+    <GenerateDependencyFile>false</GenerateDependencyFile>
+    <ComputeNETCoreBuildOutputFiles>false</ComputeNETCoreBuildOutputFiles>
+    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>
+  </PropertyGroup>
+
   <ItemGroup>
     <!-- Mark netstandard as a framework assembly -->
     <AssemblyMetadata Include=".NETFrameworkAssembly">
@@ -29,7 +36,7 @@
   <ItemGroup>
     <ProjectReference Include="..\..\platforms\$(TargetGroup)\**\*.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 
   <PropertyGroup>
     <CompileDependsOn>
@@ -70,4 +77,4 @@
     </ItemGroup>
 
   </Target>
-</Project>
+</Project>
\ No newline at end of file
diff --git a/packages.builds b/packages.builds
index d446ea9..1468e13 100644
--- a/packages.builds
+++ b/packages.builds
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
 
   <ItemGroup>
     <Project Include="netstandard\pkg\NETStandard.Library.pkgproj" />
diff --git a/platforms/Directory.Build.props b/platforms/Directory.Build.props
new file mode 100644
index 0000000..f671106
--- /dev/null
+++ b/platforms/Directory.Build.props
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+
+  <PropertyGroup>
+  	<OutDir>$(BaseOutputPath)ref/$(TargetGroup)/</OutDir>
+    <IsReferenceAssembly>true</IsReferenceAssembly>
+    <LangVersion>7.2</LangVersion>
+    <TargetFramework>net461</TargetFramework>
+    <ImplicitlyExpandNETStandardFacades>false</ImplicitlyExpandNETStandardFacades>
+    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/platforms/Directory.Build.targets b/platforms/Directory.Build.targets
new file mode 100644
index 0000000..ef9a35b
--- /dev/null
+++ b/platforms/Directory.Build.targets
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <GenerateProjectSpecificOutputFolder>false</GenerateProjectSpecificOutputFolder>
+  </PropertyGroup>
+
+  <PropertyGroup>
+    <AssemblyOriginatorKeyFile Condition="'$(AssemblyKey)' == 'XamarinProducts'">$(MSBuildThisFileDirectory)xamarin-products.snk</AssemblyOriginatorKeyFile>
+    <!-- Save value of TargetPath so we can reset it after it gets overridden by Microsoft.Common.CurrentVersion.targets -->
+    <TargetPathValue>$(TargetPath)</TargetPathValue>
+  </PropertyGroup>
+
+  <Import Condition="Exists('..\Directory.Build.targets')" Project="..\Directory.Build.targets" />
+
+  <PropertyGroup>
+    <OutDir>$(BaseOutputPath)ref/$(TargetGroup)/</OutDir>
+    <TargetPath>$(TargetPathValue)</TargetPath>
+  </PropertyGroup>
+
+  <!-- We don't need full signing for these so not writing the required signing file -->
+  <Target Name="WriteSigningRequired" />
+
+</Project>
\ No newline at end of file
diff --git a/platforms/dir.proj b/platforms/dir.proj
index 96d4092..09e435e 100644
--- a/platforms/dir.proj
+++ b/platforms/dir.proj
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <ItemGroup>
     <Project Include="extensions/*.csproj" />
     <Project Include="net461/*.csproj">
diff --git a/platforms/extensions/Directory.Build.props b/platforms/extensions/Directory.Build.props
new file mode 100644
index 0000000..36a3c23
--- /dev/null
+++ b/platforms/extensions/Directory.Build.props
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <TargetGroup>extensions</TargetGroup>
+  </PropertyGroup>
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+
+  <Target Name="MarkProjectReferencesAsNotPrivate" BeforeTargets="AssignProjectConfiguration">
+    <ItemGroup>
+      <ProjectReference>
+        <Private>false</Private>
+      </ProjectReference>
+    </ItemGroup>
+  </Target>
+</Project>
\ No newline at end of file
diff --git a/platforms/extensions/Microsoft.Win32.Registry.csproj b/platforms/extensions/Microsoft.Win32.Registry.csproj
index ccd9be8..c16357a 100644
--- a/platforms/extensions/Microsoft.Win32.Registry.csproj
+++ b/platforms/extensions/Microsoft.Win32.Registry.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -12,5 +10,4 @@
     <ProjectReference Include=".\System.Security.AccessControl.csproj" />
     <ProjectReference Include=".\System.Security.Principal.Windows.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/extensions/System.CodeDom.csproj b/platforms/extensions/System.CodeDom.csproj
index 022a5b9..0ad4cfa 100644
--- a/platforms/extensions/System.CodeDom.csproj
+++ b/platforms/extensions/System.CodeDom.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.CodeDom</AssemblyName>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -10,5 +8,4 @@
     <Compile Include="System.CodeDom.cs" />
     <ProjectReference Include="..\..\netstandard\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/extensions/System.Security.AccessControl.csproj b/platforms/extensions/System.Security.AccessControl.csproj
index 5059e23..9d104ca 100644
--- a/platforms/extensions/System.Security.AccessControl.csproj
+++ b/platforms/extensions/System.Security.AccessControl.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.AccessControl</AssemblyName>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -11,5 +9,4 @@
     <ProjectReference Include="..\..\netstandard\ref\netstandard.csproj" />
     <ProjectReference Include=".\System.Security.Principal.Windows.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/extensions/System.Security.Principal.Windows.csproj b/platforms/extensions/System.Security.Principal.Windows.csproj
index 4e1e993..bd3c504 100644
--- a/platforms/extensions/System.Security.Principal.Windows.csproj
+++ b/platforms/extensions/System.Security.Principal.Windows.csproj
@@ -1,6 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyName>System.Security.Principal.Windows</AssemblyName>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -10,5 +8,4 @@
     <Compile Include="System.Security.Principal.Windows.cs" />
     <ProjectReference Include="..\..\netstandard\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/extensions/extension.projtemplate b/platforms/extensions/extension.projtemplate
index cd8ba15..c29024c 100644
--- a/platforms/extensions/extension.projtemplate
+++ b/platforms/extensions/extension.projtemplate
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
   <PropertyGroup>
     <AssemblyName>[NAME]</AssemblyName>
     <AssemblyVersion>[VERSION]</AssemblyVersion>
@@ -10,5 +10,5 @@
     <Compile Include="[NAME].cs" />
     <ProjectReference Include="..\..\netstandard\ref\netstandard.csproj" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
 </Project>
diff --git a/platforms/net461/Directory.Build.props b/platforms/net461/Directory.Build.props
new file mode 100644
index 0000000..2047e53
--- /dev/null
+++ b/platforms/net461/Directory.Build.props
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <AssemblyVersion>4.0.0.0</AssemblyVersion>
+    <TargetGroup>net461</TargetGroup>
+  </PropertyGroup>
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+  <PropertyGroup>
+    <!-- default to ECMA key -->
+    <AssemblyKey>ECMA</AssemblyKey>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/platforms/net461/Directory.Build.targets b/platforms/net461/Directory.Build.targets
new file mode 100644
index 0000000..ca4f532
--- /dev/null
+++ b/platforms/net461/Directory.Build.targets
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)\.., Directory.Build.targets))\Directory.Build.targets" />
+</Project>
diff --git a/platforms/net461/System.ComponentModel.Composition.csproj b/platforms/net461/System.ComponentModel.Composition.csproj
index da4c148..2f0b18e 100644
--- a/platforms/net461/System.ComponentModel.Composition.csproj
+++ b/platforms/net461/System.ComponentModel.Composition.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Core.csproj" />
     <Compile Include="System.ComponentModel.Composition.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Core.csproj b/platforms/net461/System.Core.csproj
index 740260a..37ff2b1 100644
--- a/platforms/net461/System.Core.csproj
+++ b/platforms/net461/System.Core.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -12,5 +10,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Core.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Data.csproj b/platforms/net461/System.Data.csproj
index b51c6df..cd7fbbf 100644
--- a/platforms/net461/System.Data.csproj
+++ b/platforms/net461/System.Data.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Data.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Drawing.csproj b/platforms/net461/System.Drawing.csproj
index f4a53ea..e477e0e 100644
--- a/platforms/net461/System.Drawing.csproj
+++ b/platforms/net461/System.Drawing.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Drawing.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.IO.Compression.FileSystem.csproj b/platforms/net461/System.IO.Compression.FileSystem.csproj
index e414976..fe589be 100644
--- a/platforms/net461/System.IO.Compression.FileSystem.csproj
+++ b/platforms/net461/System.IO.Compression.FileSystem.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.IO.Compression.csproj" />
     <Compile Include="System.IO.Compression.FileSystem.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.IO.Compression.csproj b/platforms/net461/System.IO.Compression.csproj
index 8518a1c..ff57bb1 100644
--- a/platforms/net461/System.IO.Compression.csproj
+++ b/platforms/net461/System.IO.Compression.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -12,5 +10,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.IO.Compression.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Net.Http.csproj b/platforms/net461/System.Net.Http.csproj
index e6b459b..3f9f164 100644
--- a/platforms/net461/System.Net.Http.csproj
+++ b/platforms/net461/System.Net.Http.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Net.Http.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Numerics.csproj b/platforms/net461/System.Numerics.csproj
index c466b32..ccdd380 100644
--- a/platforms/net461/System.Numerics.csproj
+++ b/platforms/net461/System.Numerics.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -11,5 +9,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Runtime.InteropServices.RuntimeInformation.csproj b/platforms/net461/System.Runtime.InteropServices.RuntimeInformation.csproj
index 2b56394..fe746a7 100644
--- a/platforms/net461/System.Runtime.InteropServices.RuntimeInformation.csproj
+++ b/platforms/net461/System.Runtime.InteropServices.RuntimeInformation.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Runtime.InteropServices.RuntimeInformation.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Runtime.Serialization.csproj b/platforms/net461/System.Runtime.Serialization.csproj
index 4e9d588..7f2ae11 100644
--- a/platforms/net461/System.Runtime.Serialization.csproj
+++ b/platforms/net461/System.Runtime.Serialization.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Runtime.Serialization.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Transactions.csproj b/platforms/net461/System.Transactions.csproj
index 707ff9b..86060c4 100644
--- a/platforms/net461/System.Transactions.csproj
+++ b/platforms/net461/System.Transactions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Transactions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.ValueTuple.csproj b/platforms/net461/System.ValueTuple.csproj
index d33ded4..ca4c685 100644
--- a/platforms/net461/System.ValueTuple.csproj
+++ b/platforms/net461/System.ValueTuple.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.ValueTuple.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Web.csproj b/platforms/net461/System.Web.csproj
index 21fc544..b0f4cd9 100644
--- a/platforms/net461/System.Web.csproj
+++ b/platforms/net461/System.Web.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Web.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Xml.Linq.csproj b/platforms/net461/System.Xml.Linq.csproj
index 5034d08..6ce4b40 100644
--- a/platforms/net461/System.Xml.Linq.csproj
+++ b/platforms/net461/System.Xml.Linq.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -12,5 +10,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Xml.Linq.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.Xml.csproj b/platforms/net461/System.Xml.csproj
index f819bb8..1480b93 100644
--- a/platforms/net461/System.Xml.csproj
+++ b/platforms/net461/System.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -12,5 +10,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/System.csproj b/platforms/net461/System.csproj
index 30be163..f0a0400 100644
--- a/platforms/net461/System.csproj
+++ b/platforms/net461/System.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -11,5 +9,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/net461/mscorlib.csproj b/platforms/net461/mscorlib.csproj
index 6f3dfeb..344c966 100644
--- a/platforms/net461/mscorlib.csproj
+++ b/platforms/net461/mscorlib.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -11,5 +9,4 @@
   <ItemGroup>
     <Compile Include="mscorlib.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Directory.Build.props b/platforms/xamarin.android/Directory.Build.props
new file mode 100644
index 0000000..955c752
--- /dev/null
+++ b/platforms/xamarin.android/Directory.Build.props
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <AssemblyVersion>2.0.5.0</AssemblyVersion>
+    <TargetGroup>xamarin.android</TargetGroup>
+  </PropertyGroup>
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Facades/System.Data.Common.csproj b/platforms/xamarin.android/Facades/System.Data.Common.csproj
index 2302993..f9bf3fa 100644
--- a/platforms/xamarin.android/Facades/System.Data.Common.csproj
+++ b/platforms/xamarin.android/Facades/System.Data.Common.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -14,5 +13,4 @@
     <ProjectReference Include="..\System.Data.csproj" />
     <Compile Include="System.Data.Common.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.android/Facades/System.Diagnostics.StackTrace.csproj b/platforms/xamarin.android/Facades/System.Diagnostics.StackTrace.csproj
index b29ab6e..dc1d032 100644
--- a/platforms/xamarin.android/Facades/System.Diagnostics.StackTrace.csproj
+++ b/platforms/xamarin.android/Facades/System.Diagnostics.StackTrace.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Diagnostics.StackTrace.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Facades/System.Globalization.Extensions.csproj b/platforms/xamarin.android/Facades/System.Globalization.Extensions.csproj
index bd9c76d..ce160fd 100644
--- a/platforms/xamarin.android/Facades/System.Globalization.Extensions.csproj
+++ b/platforms/xamarin.android/Facades/System.Globalization.Extensions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Globalization.Extensions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Facades/System.Runtime.Serialization.Primitives.csproj b/platforms/xamarin.android/Facades/System.Runtime.Serialization.Primitives.csproj
index e6372ab..d458105 100644
--- a/platforms/xamarin.android/Facades/System.Runtime.Serialization.Primitives.csproj
+++ b/platforms/xamarin.android/Facades/System.Runtime.Serialization.Primitives.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Runtime.Serialization.Primitives.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Facades/System.Runtime.Serialization.Xml.csproj b/platforms/xamarin.android/Facades/System.Runtime.Serialization.Xml.csproj
index 6b8fb4a..e5f1466 100644
--- a/platforms/xamarin.android/Facades/System.Runtime.Serialization.Xml.csproj
+++ b/platforms/xamarin.android/Facades/System.Runtime.Serialization.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Runtime.Serialization.Primitives.csproj" />
     <Compile Include="System.Runtime.Serialization.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Facades/System.Security.Cryptography.Algorithms.csproj b/platforms/xamarin.android/Facades/System.Security.Cryptography.Algorithms.csproj
index 8867f71..fa533e3 100644
--- a/platforms/xamarin.android/Facades/System.Security.Cryptography.Algorithms.csproj
+++ b/platforms/xamarin.android/Facades/System.Security.Cryptography.Algorithms.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.2.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.Cryptography.Algorithms.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Facades/System.Security.SecureString.csproj b/platforms/xamarin.android/Facades/System.Security.SecureString.csproj
index baf5417..6ba6912 100644
--- a/platforms/xamarin.android/Facades/System.Security.SecureString.csproj
+++ b/platforms/xamarin.android/Facades/System.Security.SecureString.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.SecureString.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/Facades/System.Threading.Overlapped.csproj b/platforms/xamarin.android/Facades/System.Threading.Overlapped.csproj
index 84bb6fa..a3d0f9a 100644
--- a/platforms/xamarin.android/Facades/System.Threading.Overlapped.csproj
+++ b/platforms/xamarin.android/Facades/System.Threading.Overlapped.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +12,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Threading.Overlapped.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.android/Facades/System.Xml.XPath.XDocument.csproj b/platforms/xamarin.android/Facades/System.Xml.XPath.XDocument.csproj
index 792c2b4..4d38f66 100644
--- a/platforms/xamarin.android/Facades/System.Xml.XPath.XDocument.csproj
+++ b/platforms/xamarin.android/Facades/System.Xml.XPath.XDocument.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -15,5 +14,4 @@
     <ProjectReference Include="..\System.Xml.Linq.csproj" />
     <Compile Include="System.Xml.XPath.XDocument.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.android/Mono.Android.csproj b/platforms/xamarin.android/Mono.Android.csproj
index 7435b18..1b72743 100644
--- a/platforms/xamarin.android/Mono.Android.csproj
+++ b/platforms/xamarin.android/Mono.Android.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="Mono.Android.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.ComponentModel.Composition.csproj b/platforms/xamarin.android/System.ComponentModel.Composition.csproj
index 01c52af..17912af 100644
--- a/platforms/xamarin.android/System.ComponentModel.Composition.csproj
+++ b/platforms/xamarin.android/System.ComponentModel.Composition.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Core.csproj" />
     <Compile Include="System.ComponentModel.Composition.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Core.csproj b/platforms/xamarin.android/System.Core.csproj
index fbf1463..e2ef6bb 100644
--- a/platforms/xamarin.android/System.Core.csproj
+++ b/platforms/xamarin.android/System.Core.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Core.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Data.csproj b/platforms/xamarin.android/System.Data.csproj
index 7c5939e..1c04d91 100644
--- a/platforms/xamarin.android/System.Data.csproj
+++ b/platforms/xamarin.android/System.Data.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Data.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.IO.Compression.FileSystem.csproj b/platforms/xamarin.android/System.IO.Compression.FileSystem.csproj
index b94c0d6..04f667b 100644
--- a/platforms/xamarin.android/System.IO.Compression.FileSystem.csproj
+++ b/platforms/xamarin.android/System.IO.Compression.FileSystem.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.IO.Compression.csproj" />
     <Compile Include="System.IO.Compression.FileSystem.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.IO.Compression.csproj b/platforms/xamarin.android/System.IO.Compression.csproj
index d802c52..6e95506 100644
--- a/platforms/xamarin.android/System.IO.Compression.csproj
+++ b/platforms/xamarin.android/System.IO.Compression.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.IO.Compression.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Net.Http.csproj b/platforms/xamarin.android/System.Net.Http.csproj
index 5eedb48..c9e4bb2 100644
--- a/platforms/xamarin.android/System.Net.Http.csproj
+++ b/platforms/xamarin.android/System.Net.Http.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Net.Http.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Numerics.Vectors.csproj b/platforms/xamarin.android/System.Numerics.Vectors.csproj
index ec3bd30..afc793b 100644
--- a/platforms/xamarin.android/System.Numerics.Vectors.csproj
+++ b/platforms/xamarin.android/System.Numerics.Vectors.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.Vectors.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Numerics.csproj b/platforms/xamarin.android/System.Numerics.csproj
index a093ad9..3cf4968 100644
--- a/platforms/xamarin.android/System.Numerics.csproj
+++ b/platforms/xamarin.android/System.Numerics.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Runtime.InteropServices.RuntimeInformation.csproj b/platforms/xamarin.android/System.Runtime.InteropServices.RuntimeInformation.csproj
index 4bf5f2b..2ec5ab9 100644
--- a/platforms/xamarin.android/System.Runtime.InteropServices.RuntimeInformation.csproj
+++ b/platforms/xamarin.android/System.Runtime.InteropServices.RuntimeInformation.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AssemblyKey>MSFT</AssemblyKey>
@@ -13,5 +12,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Runtime.InteropServices.RuntimeInformation.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
diff --git a/platforms/xamarin.android/System.Runtime.Serialization.csproj b/platforms/xamarin.android/System.Runtime.Serialization.csproj
index af9c5ab..c4cb6a9 100644
--- a/platforms/xamarin.android/System.Runtime.Serialization.csproj
+++ b/platforms/xamarin.android/System.Runtime.Serialization.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Runtime.Serialization.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Transactions.csproj b/platforms/xamarin.android/System.Transactions.csproj
index 90f441b..1bfddcf 100644
--- a/platforms/xamarin.android/System.Transactions.csproj
+++ b/platforms/xamarin.android/System.Transactions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Transactions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Web.Services.csproj b/platforms/xamarin.android/System.Web.Services.csproj
index 24ad217..0c4b680 100644
--- a/platforms/xamarin.android/System.Web.Services.csproj
+++ b/platforms/xamarin.android/System.Web.Services.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Web.Services.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Xml.Linq.csproj b/platforms/xamarin.android/System.Xml.Linq.csproj
index 428e596..82b6ffb 100644
--- a/platforms/xamarin.android/System.Xml.Linq.csproj
+++ b/platforms/xamarin.android/System.Xml.Linq.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightExtension</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Xml.Linq.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.Xml.csproj b/platforms/xamarin.android/System.Xml.csproj
index f1132e9..b007b46 100644
--- a/platforms/xamarin.android/System.Xml.csproj
+++ b/platforms/xamarin.android/System.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/System.csproj b/platforms/xamarin.android/System.csproj
index 07a1a8d..4694de2 100644
--- a/platforms/xamarin.android/System.csproj
+++ b/platforms/xamarin.android/System.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.android/mscorlib.csproj b/platforms/xamarin.android/mscorlib.csproj
index f01a78f..b61afa7 100644
--- a/platforms/xamarin.android/mscorlib.csproj
+++ b/platforms/xamarin.android/mscorlib.csproj
@@ -1,16 +1,13 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
     <IsCoreAssembly>true</IsCoreAssembly>
     <!-- disable obsolete warnings/errors -->
-    <NoWarn>$(NoWarn);0618;0619;0809</NoWarn>
+    <NoWarn>$(NoWarn);0169;0649;0618;0619;0809</NoWarn>
   </PropertyGroup>
   <ItemGroup>
     <Compile Include="mscorlib.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Directory.Build.props b/platforms/xamarin.ios/Directory.Build.props
new file mode 100644
index 0000000..d568617
--- /dev/null
+++ b/platforms/xamarin.ios/Directory.Build.props
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <AssemblyVersion>2.0.5.0</AssemblyVersion>
+    <TargetGroup>xamarin.ios</TargetGroup>
+  </PropertyGroup>
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Facades/System.Data.Common.csproj b/platforms/xamarin.ios/Facades/System.Data.Common.csproj
index 2302993..f9bf3fa 100644
--- a/platforms/xamarin.ios/Facades/System.Data.Common.csproj
+++ b/platforms/xamarin.ios/Facades/System.Data.Common.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -14,5 +13,4 @@
     <ProjectReference Include="..\System.Data.csproj" />
     <Compile Include="System.Data.Common.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.ios/Facades/System.Diagnostics.StackTrace.csproj b/platforms/xamarin.ios/Facades/System.Diagnostics.StackTrace.csproj
index b29ab6e..dc1d032 100644
--- a/platforms/xamarin.ios/Facades/System.Diagnostics.StackTrace.csproj
+++ b/platforms/xamarin.ios/Facades/System.Diagnostics.StackTrace.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Diagnostics.StackTrace.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Facades/System.Globalization.Extensions.csproj b/platforms/xamarin.ios/Facades/System.Globalization.Extensions.csproj
index bd9c76d..ce160fd 100644
--- a/platforms/xamarin.ios/Facades/System.Globalization.Extensions.csproj
+++ b/platforms/xamarin.ios/Facades/System.Globalization.Extensions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Globalization.Extensions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Primitives.csproj b/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Primitives.csproj
index e6372ab..d458105 100644
--- a/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Primitives.csproj
+++ b/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Primitives.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Runtime.Serialization.Primitives.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Xml.csproj b/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Xml.csproj
index 6b8fb4a..e5f1466 100644
--- a/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Xml.csproj
+++ b/platforms/xamarin.ios/Facades/System.Runtime.Serialization.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Runtime.Serialization.Primitives.csproj" />
     <Compile Include="System.Runtime.Serialization.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Facades/System.Security.Cryptography.Algorithms.csproj b/platforms/xamarin.ios/Facades/System.Security.Cryptography.Algorithms.csproj
index 8867f71..fa533e3 100644
--- a/platforms/xamarin.ios/Facades/System.Security.Cryptography.Algorithms.csproj
+++ b/platforms/xamarin.ios/Facades/System.Security.Cryptography.Algorithms.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.2.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.Cryptography.Algorithms.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Facades/System.Security.SecureString.csproj b/platforms/xamarin.ios/Facades/System.Security.SecureString.csproj
index baf5417..6ba6912 100644
--- a/platforms/xamarin.ios/Facades/System.Security.SecureString.csproj
+++ b/platforms/xamarin.ios/Facades/System.Security.SecureString.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.SecureString.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Facades/System.Threading.Overlapped.csproj b/platforms/xamarin.ios/Facades/System.Threading.Overlapped.csproj
index 84bb6fa..a3d0f9a 100644
--- a/platforms/xamarin.ios/Facades/System.Threading.Overlapped.csproj
+++ b/platforms/xamarin.ios/Facades/System.Threading.Overlapped.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +12,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Threading.Overlapped.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.ios/Facades/System.Xml.XPath.XDocument.csproj b/platforms/xamarin.ios/Facades/System.Xml.XPath.XDocument.csproj
index 792c2b4..3e695aa 100644
--- a/platforms/xamarin.ios/Facades/System.Xml.XPath.XDocument.csproj
+++ b/platforms/xamarin.ios/Facades/System.Xml.XPath.XDocument.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="..\System.Xml.Linq.csproj" />
     <Compile Include="System.Xml.XPath.XDocument.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/OpenTK-1.0.csproj b/platforms/xamarin.ios/OpenTK-1.0.csproj
index 72b3e88..b169a18 100644
--- a/platforms/xamarin.ios/OpenTK-1.0.csproj
+++ b/platforms/xamarin.ios/OpenTK-1.0.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="OpenTK-1.0.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.ComponentModel.Composition.csproj b/platforms/xamarin.ios/System.ComponentModel.Composition.csproj
index 01c52af..17912af 100644
--- a/platforms/xamarin.ios/System.ComponentModel.Composition.csproj
+++ b/platforms/xamarin.ios/System.ComponentModel.Composition.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Core.csproj" />
     <Compile Include="System.ComponentModel.Composition.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Core.csproj b/platforms/xamarin.ios/System.Core.csproj
index fbf1463..e2ef6bb 100644
--- a/platforms/xamarin.ios/System.Core.csproj
+++ b/platforms/xamarin.ios/System.Core.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Core.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Data.csproj b/platforms/xamarin.ios/System.Data.csproj
index 7c5939e..1c04d91 100644
--- a/platforms/xamarin.ios/System.Data.csproj
+++ b/platforms/xamarin.ios/System.Data.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Data.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.IO.Compression.FileSystem.csproj b/platforms/xamarin.ios/System.IO.Compression.FileSystem.csproj
index b94c0d6..04f667b 100644
--- a/platforms/xamarin.ios/System.IO.Compression.FileSystem.csproj
+++ b/platforms/xamarin.ios/System.IO.Compression.FileSystem.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.IO.Compression.csproj" />
     <Compile Include="System.IO.Compression.FileSystem.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.IO.Compression.csproj b/platforms/xamarin.ios/System.IO.Compression.csproj
index d802c52..6e95506 100644
--- a/platforms/xamarin.ios/System.IO.Compression.csproj
+++ b/platforms/xamarin.ios/System.IO.Compression.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.IO.Compression.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Net.Http.csproj b/platforms/xamarin.ios/System.Net.Http.csproj
index 5eedb48..c9e4bb2 100644
--- a/platforms/xamarin.ios/System.Net.Http.csproj
+++ b/platforms/xamarin.ios/System.Net.Http.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Net.Http.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Numerics.Vectors.csproj b/platforms/xamarin.ios/System.Numerics.Vectors.csproj
index ec3bd30..afc793b 100644
--- a/platforms/xamarin.ios/System.Numerics.Vectors.csproj
+++ b/platforms/xamarin.ios/System.Numerics.Vectors.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.Vectors.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Numerics.csproj b/platforms/xamarin.ios/System.Numerics.csproj
index a093ad9..3cf4968 100644
--- a/platforms/xamarin.ios/System.Numerics.csproj
+++ b/platforms/xamarin.ios/System.Numerics.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Runtime.InteropServices.RuntimeInformation.csproj b/platforms/xamarin.ios/System.Runtime.InteropServices.RuntimeInformation.csproj
index 4bf5f2b..2ec5ab9 100644
--- a/platforms/xamarin.ios/System.Runtime.InteropServices.RuntimeInformation.csproj
+++ b/platforms/xamarin.ios/System.Runtime.InteropServices.RuntimeInformation.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AssemblyKey>MSFT</AssemblyKey>
@@ -13,5 +12,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Runtime.InteropServices.RuntimeInformation.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
diff --git a/platforms/xamarin.ios/System.Runtime.Serialization.csproj b/platforms/xamarin.ios/System.Runtime.Serialization.csproj
index af9c5ab..c4cb6a9 100644
--- a/platforms/xamarin.ios/System.Runtime.Serialization.csproj
+++ b/platforms/xamarin.ios/System.Runtime.Serialization.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Runtime.Serialization.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Transactions.csproj b/platforms/xamarin.ios/System.Transactions.csproj
index 90f441b..1bfddcf 100644
--- a/platforms/xamarin.ios/System.Transactions.csproj
+++ b/platforms/xamarin.ios/System.Transactions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Transactions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Web.Services.csproj b/platforms/xamarin.ios/System.Web.Services.csproj
index 24ad217..0c4b680 100644
--- a/platforms/xamarin.ios/System.Web.Services.csproj
+++ b/platforms/xamarin.ios/System.Web.Services.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Web.Services.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Xml.Linq.csproj b/platforms/xamarin.ios/System.Xml.Linq.csproj
index 428e596..82b6ffb 100644
--- a/platforms/xamarin.ios/System.Xml.Linq.csproj
+++ b/platforms/xamarin.ios/System.Xml.Linq.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightExtension</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Xml.Linq.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.Xml.csproj b/platforms/xamarin.ios/System.Xml.csproj
index f1132e9..b007b46 100644
--- a/platforms/xamarin.ios/System.Xml.csproj
+++ b/platforms/xamarin.ios/System.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/System.csproj b/platforms/xamarin.ios/System.csproj
index 07a1a8d..4694de2 100644
--- a/platforms/xamarin.ios/System.csproj
+++ b/platforms/xamarin.ios/System.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/Xamarin.iOS.csproj b/platforms/xamarin.ios/Xamarin.iOS.csproj
index 69df680..b09cb6e 100644
--- a/platforms/xamarin.ios/Xamarin.iOS.csproj
+++ b/platforms/xamarin.ios/Xamarin.iOS.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="Xamarin.iOS.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.ios/mscorlib.csproj b/platforms/xamarin.ios/mscorlib.csproj
index f01a78f..b61afa7 100644
--- a/platforms/xamarin.ios/mscorlib.csproj
+++ b/platforms/xamarin.ios/mscorlib.csproj
@@ -1,16 +1,13 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
     <IsCoreAssembly>true</IsCoreAssembly>
     <!-- disable obsolete warnings/errors -->
-    <NoWarn>$(NoWarn);0618;0619;0809</NoWarn>
+    <NoWarn>$(NoWarn);0169;0649;0618;0619;0809</NoWarn>
   </PropertyGroup>
   <ItemGroup>
     <Compile Include="mscorlib.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Directory.Build.props b/platforms/xamarin.mac/Directory.Build.props
new file mode 100644
index 0000000..39b0df1
--- /dev/null
+++ b/platforms/xamarin.mac/Directory.Build.props
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <AssemblyVersion>2.0.5.0</AssemblyVersion>
+    <TargetGroup>xamarin.mac</TargetGroup>
+  </PropertyGroup>
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Facades/System.Data.Common.csproj b/platforms/xamarin.mac/Facades/System.Data.Common.csproj
index 2302993..f9bf3fa 100644
--- a/platforms/xamarin.mac/Facades/System.Data.Common.csproj
+++ b/platforms/xamarin.mac/Facades/System.Data.Common.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -14,5 +13,4 @@
     <ProjectReference Include="..\System.Data.csproj" />
     <Compile Include="System.Data.Common.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.mac/Facades/System.Diagnostics.StackTrace.csproj b/platforms/xamarin.mac/Facades/System.Diagnostics.StackTrace.csproj
index b29ab6e..dc1d032 100644
--- a/platforms/xamarin.mac/Facades/System.Diagnostics.StackTrace.csproj
+++ b/platforms/xamarin.mac/Facades/System.Diagnostics.StackTrace.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Diagnostics.StackTrace.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Facades/System.Globalization.Extensions.csproj b/platforms/xamarin.mac/Facades/System.Globalization.Extensions.csproj
index bd9c76d..ce160fd 100644
--- a/platforms/xamarin.mac/Facades/System.Globalization.Extensions.csproj
+++ b/platforms/xamarin.mac/Facades/System.Globalization.Extensions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Globalization.Extensions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Primitives.csproj b/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Primitives.csproj
index e6372ab..d458105 100644
--- a/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Primitives.csproj
+++ b/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Primitives.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Runtime.Serialization.Primitives.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Xml.csproj b/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Xml.csproj
index 6b8fb4a..e5f1466 100644
--- a/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Xml.csproj
+++ b/platforms/xamarin.mac/Facades/System.Runtime.Serialization.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Runtime.Serialization.Primitives.csproj" />
     <Compile Include="System.Runtime.Serialization.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Facades/System.Security.Cryptography.Algorithms.csproj b/platforms/xamarin.mac/Facades/System.Security.Cryptography.Algorithms.csproj
index 8867f71..fa533e3 100644
--- a/platforms/xamarin.mac/Facades/System.Security.Cryptography.Algorithms.csproj
+++ b/platforms/xamarin.mac/Facades/System.Security.Cryptography.Algorithms.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.2.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.Cryptography.Algorithms.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Facades/System.Security.SecureString.csproj b/platforms/xamarin.mac/Facades/System.Security.SecureString.csproj
index baf5417..6ba6912 100644
--- a/platforms/xamarin.mac/Facades/System.Security.SecureString.csproj
+++ b/platforms/xamarin.mac/Facades/System.Security.SecureString.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.SecureString.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Facades/System.Threading.Overlapped.csproj b/platforms/xamarin.mac/Facades/System.Threading.Overlapped.csproj
index 84bb6fa..a3d0f9a 100644
--- a/platforms/xamarin.mac/Facades/System.Threading.Overlapped.csproj
+++ b/platforms/xamarin.mac/Facades/System.Threading.Overlapped.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +12,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Threading.Overlapped.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.mac/Facades/System.Xml.XPath.XDocument.csproj b/platforms/xamarin.mac/Facades/System.Xml.XPath.XDocument.csproj
index 792c2b4..3e695aa 100644
--- a/platforms/xamarin.mac/Facades/System.Xml.XPath.XDocument.csproj
+++ b/platforms/xamarin.mac/Facades/System.Xml.XPath.XDocument.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="..\System.Xml.Linq.csproj" />
     <Compile Include="System.Xml.XPath.XDocument.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/OpenTK.csproj b/platforms/xamarin.mac/OpenTK.csproj
index c3fdcc9..7fccd3e 100644
--- a/platforms/xamarin.mac/OpenTK.csproj
+++ b/platforms/xamarin.mac/OpenTK.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="OpenTK.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.ComponentModel.Composition.csproj b/platforms/xamarin.mac/System.ComponentModel.Composition.csproj
index 01c52af..17912af 100644
--- a/platforms/xamarin.mac/System.ComponentModel.Composition.csproj
+++ b/platforms/xamarin.mac/System.ComponentModel.Composition.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Core.csproj" />
     <Compile Include="System.ComponentModel.Composition.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Core.csproj b/platforms/xamarin.mac/System.Core.csproj
index fbf1463..e2ef6bb 100644
--- a/platforms/xamarin.mac/System.Core.csproj
+++ b/platforms/xamarin.mac/System.Core.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Core.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Data.csproj b/platforms/xamarin.mac/System.Data.csproj
index 7c5939e..1c04d91 100644
--- a/platforms/xamarin.mac/System.Data.csproj
+++ b/platforms/xamarin.mac/System.Data.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Data.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.IO.Compression.FileSystem.csproj b/platforms/xamarin.mac/System.IO.Compression.FileSystem.csproj
index b94c0d6..04f667b 100644
--- a/platforms/xamarin.mac/System.IO.Compression.FileSystem.csproj
+++ b/platforms/xamarin.mac/System.IO.Compression.FileSystem.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.IO.Compression.csproj" />
     <Compile Include="System.IO.Compression.FileSystem.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.IO.Compression.csproj b/platforms/xamarin.mac/System.IO.Compression.csproj
index d802c52..6e95506 100644
--- a/platforms/xamarin.mac/System.IO.Compression.csproj
+++ b/platforms/xamarin.mac/System.IO.Compression.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.IO.Compression.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Net.Http.csproj b/platforms/xamarin.mac/System.Net.Http.csproj
index 5eedb48..c9e4bb2 100644
--- a/platforms/xamarin.mac/System.Net.Http.csproj
+++ b/platforms/xamarin.mac/System.Net.Http.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Net.Http.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Numerics.Vectors.csproj b/platforms/xamarin.mac/System.Numerics.Vectors.csproj
index ec3bd30..afc793b 100644
--- a/platforms/xamarin.mac/System.Numerics.Vectors.csproj
+++ b/platforms/xamarin.mac/System.Numerics.Vectors.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.Vectors.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Numerics.csproj b/platforms/xamarin.mac/System.Numerics.csproj
index a093ad9..3cf4968 100644
--- a/platforms/xamarin.mac/System.Numerics.csproj
+++ b/platforms/xamarin.mac/System.Numerics.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Runtime.InteropServices.RuntimeInformation.csproj b/platforms/xamarin.mac/System.Runtime.InteropServices.RuntimeInformation.csproj
index 4bf5f2b..2ec5ab9 100644
--- a/platforms/xamarin.mac/System.Runtime.InteropServices.RuntimeInformation.csproj
+++ b/platforms/xamarin.mac/System.Runtime.InteropServices.RuntimeInformation.csproj
@@ -1,6 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AssemblyKey>MSFT</AssemblyKey>
@@ -13,5 +12,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Runtime.InteropServices.RuntimeInformation.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
diff --git a/platforms/xamarin.mac/System.Runtime.Serialization.csproj b/platforms/xamarin.mac/System.Runtime.Serialization.csproj
index af9c5ab..c4cb6a9 100644
--- a/platforms/xamarin.mac/System.Runtime.Serialization.csproj
+++ b/platforms/xamarin.mac/System.Runtime.Serialization.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Runtime.Serialization.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Transactions.csproj b/platforms/xamarin.mac/System.Transactions.csproj
index 90f441b..1bfddcf 100644
--- a/platforms/xamarin.mac/System.Transactions.csproj
+++ b/platforms/xamarin.mac/System.Transactions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Transactions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Web.Services.csproj b/platforms/xamarin.mac/System.Web.Services.csproj
index 24ad217..0c4b680 100644
--- a/platforms/xamarin.mac/System.Web.Services.csproj
+++ b/platforms/xamarin.mac/System.Web.Services.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Web.Services.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Xml.Linq.csproj b/platforms/xamarin.mac/System.Xml.Linq.csproj
index 428e596..82b6ffb 100644
--- a/platforms/xamarin.mac/System.Xml.Linq.csproj
+++ b/platforms/xamarin.mac/System.Xml.Linq.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightExtension</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Xml.Linq.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.Xml.csproj b/platforms/xamarin.mac/System.Xml.csproj
index f1132e9..b007b46 100644
--- a/platforms/xamarin.mac/System.Xml.csproj
+++ b/platforms/xamarin.mac/System.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/System.csproj b/platforms/xamarin.mac/System.csproj
index 07a1a8d..4694de2 100644
--- a/platforms/xamarin.mac/System.csproj
+++ b/platforms/xamarin.mac/System.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/Xamarin.Mac.csproj b/platforms/xamarin.mac/Xamarin.Mac.csproj
index d375af3..2ef60f5 100644
--- a/platforms/xamarin.mac/Xamarin.Mac.csproj
+++ b/platforms/xamarin.mac/Xamarin.Mac.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="Xamarin.Mac.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.mac/mscorlib.csproj b/platforms/xamarin.mac/mscorlib.csproj
index f01a78f..b61afa7 100644
--- a/platforms/xamarin.mac/mscorlib.csproj
+++ b/platforms/xamarin.mac/mscorlib.csproj
@@ -1,16 +1,13 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
     <IsCoreAssembly>true</IsCoreAssembly>
     <!-- disable obsolete warnings/errors -->
-    <NoWarn>$(NoWarn);0618;0619;0809</NoWarn>
+    <NoWarn>$(NoWarn);0169;0649;0618;0619;0809</NoWarn>
   </PropertyGroup>
   <ItemGroup>
     <Compile Include="mscorlib.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Directory.Build.props b/platforms/xamarin.tvos/Directory.Build.props
new file mode 100644
index 0000000..2c54456
--- /dev/null
+++ b/platforms/xamarin.tvos/Directory.Build.props
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <AssemblyVersion>2.0.5.0</AssemblyVersion>
+    <TargetGroup>xamarin.tvos</TargetGroup>
+  </PropertyGroup>
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Facades/System.Data.Common.csproj b/platforms/xamarin.tvos/Facades/System.Data.Common.csproj
index 2302993..0583a0b 100644
--- a/platforms/xamarin.tvos/Facades/System.Data.Common.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Data.Common.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+﻿<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -14,5 +12,4 @@
     <ProjectReference Include="..\System.Data.csproj" />
     <Compile Include="System.Data.Common.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.tvos/Facades/System.Diagnostics.StackTrace.csproj b/platforms/xamarin.tvos/Facades/System.Diagnostics.StackTrace.csproj
index b29ab6e..dc1d032 100644
--- a/platforms/xamarin.tvos/Facades/System.Diagnostics.StackTrace.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Diagnostics.StackTrace.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Diagnostics.StackTrace.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Facades/System.Globalization.Extensions.csproj b/platforms/xamarin.tvos/Facades/System.Globalization.Extensions.csproj
index bd9c76d..ce160fd 100644
--- a/platforms/xamarin.tvos/Facades/System.Globalization.Extensions.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Globalization.Extensions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Globalization.Extensions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Primitives.csproj b/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Primitives.csproj
index e6372ab..d458105 100644
--- a/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Primitives.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Primitives.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Runtime.Serialization.Primitives.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Xml.csproj b/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Xml.csproj
index 6b8fb4a..e5f1466 100644
--- a/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Xml.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Runtime.Serialization.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Runtime.Serialization.Primitives.csproj" />
     <Compile Include="System.Runtime.Serialization.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Facades/System.Security.Cryptography.Algorithms.csproj b/platforms/xamarin.tvos/Facades/System.Security.Cryptography.Algorithms.csproj
index 8867f71..fa533e3 100644
--- a/platforms/xamarin.tvos/Facades/System.Security.Cryptography.Algorithms.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Security.Cryptography.Algorithms.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.2.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.Cryptography.Algorithms.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Facades/System.Security.SecureString.csproj b/platforms/xamarin.tvos/Facades/System.Security.SecureString.csproj
index baf5417..6ba6912 100644
--- a/platforms/xamarin.tvos/Facades/System.Security.SecureString.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Security.SecureString.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.SecureString.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Facades/System.Threading.Overlapped.csproj b/platforms/xamarin.tvos/Facades/System.Threading.Overlapped.csproj
index 84bb6fa..c2a177d 100644
--- a/platforms/xamarin.tvos/Facades/System.Threading.Overlapped.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Threading.Overlapped.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+﻿<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Threading.Overlapped.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.tvos/Facades/System.Xml.XPath.XDocument.csproj b/platforms/xamarin.tvos/Facades/System.Xml.XPath.XDocument.csproj
index 792c2b4..3e695aa 100644
--- a/platforms/xamarin.tvos/Facades/System.Xml.XPath.XDocument.csproj
+++ b/platforms/xamarin.tvos/Facades/System.Xml.XPath.XDocument.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="..\System.Xml.Linq.csproj" />
     <Compile Include="System.Xml.XPath.XDocument.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/OpenTK-1.0.csproj b/platforms/xamarin.tvos/OpenTK-1.0.csproj
index 72b3e88..b169a18 100644
--- a/platforms/xamarin.tvos/OpenTK-1.0.csproj
+++ b/platforms/xamarin.tvos/OpenTK-1.0.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="OpenTK-1.0.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.ComponentModel.Composition.csproj b/platforms/xamarin.tvos/System.ComponentModel.Composition.csproj
index 01c52af..17912af 100644
--- a/platforms/xamarin.tvos/System.ComponentModel.Composition.csproj
+++ b/platforms/xamarin.tvos/System.ComponentModel.Composition.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Core.csproj" />
     <Compile Include="System.ComponentModel.Composition.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Core.csproj b/platforms/xamarin.tvos/System.Core.csproj
index fbf1463..e2ef6bb 100644
--- a/platforms/xamarin.tvos/System.Core.csproj
+++ b/platforms/xamarin.tvos/System.Core.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Core.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Data.csproj b/platforms/xamarin.tvos/System.Data.csproj
index 7c5939e..1c04d91 100644
--- a/platforms/xamarin.tvos/System.Data.csproj
+++ b/platforms/xamarin.tvos/System.Data.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Data.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.IO.Compression.FileSystem.csproj b/platforms/xamarin.tvos/System.IO.Compression.FileSystem.csproj
index b94c0d6..04f667b 100644
--- a/platforms/xamarin.tvos/System.IO.Compression.FileSystem.csproj
+++ b/platforms/xamarin.tvos/System.IO.Compression.FileSystem.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.IO.Compression.csproj" />
     <Compile Include="System.IO.Compression.FileSystem.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.IO.Compression.csproj b/platforms/xamarin.tvos/System.IO.Compression.csproj
index d802c52..6e95506 100644
--- a/platforms/xamarin.tvos/System.IO.Compression.csproj
+++ b/platforms/xamarin.tvos/System.IO.Compression.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.IO.Compression.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Net.Http.csproj b/platforms/xamarin.tvos/System.Net.Http.csproj
index 5eedb48..c9e4bb2 100644
--- a/platforms/xamarin.tvos/System.Net.Http.csproj
+++ b/platforms/xamarin.tvos/System.Net.Http.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Net.Http.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Numerics.Vectors.csproj b/platforms/xamarin.tvos/System.Numerics.Vectors.csproj
index ec3bd30..afc793b 100644
--- a/platforms/xamarin.tvos/System.Numerics.Vectors.csproj
+++ b/platforms/xamarin.tvos/System.Numerics.Vectors.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.Vectors.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Numerics.csproj b/platforms/xamarin.tvos/System.Numerics.csproj
index a093ad9..3cf4968 100644
--- a/platforms/xamarin.tvos/System.Numerics.csproj
+++ b/platforms/xamarin.tvos/System.Numerics.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Runtime.InteropServices.RuntimeInformation.csproj b/platforms/xamarin.tvos/System.Runtime.InteropServices.RuntimeInformation.csproj
index 4bf5f2b..a6b33ed 100644
--- a/platforms/xamarin.tvos/System.Runtime.InteropServices.RuntimeInformation.csproj
+++ b/platforms/xamarin.tvos/System.Runtime.InteropServices.RuntimeInformation.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+﻿<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AssemblyKey>MSFT</AssemblyKey>
@@ -13,5 +11,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Runtime.InteropServices.RuntimeInformation.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
diff --git a/platforms/xamarin.tvos/System.Runtime.Serialization.csproj b/platforms/xamarin.tvos/System.Runtime.Serialization.csproj
index af9c5ab..c4cb6a9 100644
--- a/platforms/xamarin.tvos/System.Runtime.Serialization.csproj
+++ b/platforms/xamarin.tvos/System.Runtime.Serialization.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Runtime.Serialization.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Transactions.csproj b/platforms/xamarin.tvos/System.Transactions.csproj
index 90f441b..1bfddcf 100644
--- a/platforms/xamarin.tvos/System.Transactions.csproj
+++ b/platforms/xamarin.tvos/System.Transactions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Transactions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Web.Services.csproj b/platforms/xamarin.tvos/System.Web.Services.csproj
index 24ad217..0c4b680 100644
--- a/platforms/xamarin.tvos/System.Web.Services.csproj
+++ b/platforms/xamarin.tvos/System.Web.Services.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Web.Services.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Xml.Linq.csproj b/platforms/xamarin.tvos/System.Xml.Linq.csproj
index 428e596..82b6ffb 100644
--- a/platforms/xamarin.tvos/System.Xml.Linq.csproj
+++ b/platforms/xamarin.tvos/System.Xml.Linq.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightExtension</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Xml.Linq.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.Xml.csproj b/platforms/xamarin.tvos/System.Xml.csproj
index f1132e9..b007b46 100644
--- a/platforms/xamarin.tvos/System.Xml.csproj
+++ b/platforms/xamarin.tvos/System.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/System.csproj b/platforms/xamarin.tvos/System.csproj
index 07a1a8d..4694de2 100644
--- a/platforms/xamarin.tvos/System.csproj
+++ b/platforms/xamarin.tvos/System.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/Xamarin.TVOS.csproj b/platforms/xamarin.tvos/Xamarin.TVOS.csproj
index b1bf811..ce82cce 100644
--- a/platforms/xamarin.tvos/Xamarin.TVOS.csproj
+++ b/platforms/xamarin.tvos/Xamarin.TVOS.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="Xamarin.TVOS.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.tvos/mscorlib.csproj b/platforms/xamarin.tvos/mscorlib.csproj
index f01a78f..b61afa7 100644
--- a/platforms/xamarin.tvos/mscorlib.csproj
+++ b/platforms/xamarin.tvos/mscorlib.csproj
@@ -1,16 +1,13 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
     <IsCoreAssembly>true</IsCoreAssembly>
     <!-- disable obsolete warnings/errors -->
-    <NoWarn>$(NoWarn);0618;0619;0809</NoWarn>
+    <NoWarn>$(NoWarn);0169;0649;0618;0619;0809</NoWarn>
   </PropertyGroup>
   <ItemGroup>
     <Compile Include="mscorlib.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Directory.Build.props b/platforms/xamarin.watchos/Directory.Build.props
new file mode 100644
index 0000000..071d57c
--- /dev/null
+++ b/platforms/xamarin.watchos/Directory.Build.props
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <AssemblyVersion>2.0.5.0</AssemblyVersion>
+    <TargetGroup>xamarin.watchos</TargetGroup>
+  </PropertyGroup>
+  <Import Condition="Exists('..\Directory.Build.props')" Project="..\Directory.Build.props" />
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Facades/System.Data.Common.csproj b/platforms/xamarin.watchos/Facades/System.Data.Common.csproj
index 2302993..0583a0b 100644
--- a/platforms/xamarin.watchos/Facades/System.Data.Common.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Data.Common.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+﻿<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.0.0</AssemblyVersion>
@@ -14,5 +12,4 @@
     <ProjectReference Include="..\System.Data.csproj" />
     <Compile Include="System.Data.Common.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.watchos/Facades/System.Diagnostics.StackTrace.csproj b/platforms/xamarin.watchos/Facades/System.Diagnostics.StackTrace.csproj
index b29ab6e..dc1d032 100644
--- a/platforms/xamarin.watchos/Facades/System.Diagnostics.StackTrace.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Diagnostics.StackTrace.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Diagnostics.StackTrace.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Facades/System.Globalization.Extensions.csproj b/platforms/xamarin.watchos/Facades/System.Globalization.Extensions.csproj
index bd9c76d..ce160fd 100644
--- a/platforms/xamarin.watchos/Facades/System.Globalization.Extensions.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Globalization.Extensions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Globalization.Extensions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Primitives.csproj b/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Primitives.csproj
index e6372ab..d458105 100644
--- a/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Primitives.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Primitives.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Runtime.Serialization.Primitives.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Xml.csproj b/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Xml.csproj
index 6b8fb4a..e5f1466 100644
--- a/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Xml.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Runtime.Serialization.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.1.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Runtime.Serialization.Primitives.csproj" />
     <Compile Include="System.Runtime.Serialization.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Facades/System.Security.Cryptography.Algorithms.csproj b/platforms/xamarin.watchos/Facades/System.Security.Cryptography.Algorithms.csproj
index 8867f71..fa533e3 100644
--- a/platforms/xamarin.watchos/Facades/System.Security.Cryptography.Algorithms.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Security.Cryptography.Algorithms.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.2.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.Cryptography.Algorithms.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
+</Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Facades/System.Security.SecureString.csproj b/platforms/xamarin.watchos/Facades/System.Security.SecureString.csproj
index baf5417..6ba6912 100644
--- a/platforms/xamarin.watchos/Facades/System.Security.SecureString.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Security.SecureString.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Security.SecureString.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Facades/System.Threading.Overlapped.csproj b/platforms/xamarin.watchos/Facades/System.Threading.Overlapped.csproj
index 84bb6fa..c2a177d 100644
--- a/platforms/xamarin.watchos/Facades/System.Threading.Overlapped.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Threading.Overlapped.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+﻿<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -13,5 +11,4 @@
     <ProjectReference Include="..\mscorlib.csproj" />
     <Compile Include="System.Threading.Overlapped.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/platforms/xamarin.watchos/Facades/System.Xml.XPath.XDocument.csproj b/platforms/xamarin.watchos/Facades/System.Xml.XPath.XDocument.csproj
index 792c2b4..3e695aa 100644
--- a/platforms/xamarin.watchos/Facades/System.Xml.XPath.XDocument.csproj
+++ b/platforms/xamarin.watchos/Facades/System.Xml.XPath.XDocument.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AssemblyVersion>4.0.1.0</AssemblyVersion>
@@ -15,5 +13,4 @@
     <ProjectReference Include="..\System.Xml.Linq.csproj" />
     <Compile Include="System.Xml.XPath.XDocument.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.ComponentModel.Composition.csproj b/platforms/xamarin.watchos/System.ComponentModel.Composition.csproj
index 01c52af..17912af 100644
--- a/platforms/xamarin.watchos/System.ComponentModel.Composition.csproj
+++ b/platforms/xamarin.watchos/System.ComponentModel.Composition.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Core.csproj" />
     <Compile Include="System.ComponentModel.Composition.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Core.csproj b/platforms/xamarin.watchos/System.Core.csproj
index fbf1463..e2ef6bb 100644
--- a/platforms/xamarin.watchos/System.Core.csproj
+++ b/platforms/xamarin.watchos/System.Core.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Core.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Data.csproj b/platforms/xamarin.watchos/System.Data.csproj
index 7c5939e..1c04d91 100644
--- a/platforms/xamarin.watchos/System.Data.csproj
+++ b/platforms/xamarin.watchos/System.Data.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -15,5 +13,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Data.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.IO.Compression.FileSystem.csproj b/platforms/xamarin.watchos/System.IO.Compression.FileSystem.csproj
index b94c0d6..04f667b 100644
--- a/platforms/xamarin.watchos/System.IO.Compression.FileSystem.csproj
+++ b/platforms/xamarin.watchos/System.IO.Compression.FileSystem.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.IO.Compression.csproj" />
     <Compile Include="System.IO.Compression.FileSystem.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.IO.Compression.csproj b/platforms/xamarin.watchos/System.IO.Compression.csproj
index d802c52..6e95506 100644
--- a/platforms/xamarin.watchos/System.IO.Compression.csproj
+++ b/platforms/xamarin.watchos/System.IO.Compression.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.IO.Compression.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Net.Http.csproj b/platforms/xamarin.watchos/System.Net.Http.csproj
index 5eedb48..c9e4bb2 100644
--- a/platforms/xamarin.watchos/System.Net.Http.csproj
+++ b/platforms/xamarin.watchos/System.Net.Http.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Net.Http.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Numerics.Vectors.csproj b/platforms/xamarin.watchos/System.Numerics.Vectors.csproj
index ec3bd30..afc793b 100644
--- a/platforms/xamarin.watchos/System.Numerics.Vectors.csproj
+++ b/platforms/xamarin.watchos/System.Numerics.Vectors.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>MSFT</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.Vectors.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Numerics.csproj b/platforms/xamarin.watchos/System.Numerics.csproj
index a093ad9..3cf4968 100644
--- a/platforms/xamarin.watchos/System.Numerics.csproj
+++ b/platforms/xamarin.watchos/System.Numerics.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Numerics.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Runtime.InteropServices.RuntimeInformation.csproj b/platforms/xamarin.watchos/System.Runtime.InteropServices.RuntimeInformation.csproj
index 4bf5f2b..a6b33ed 100644
--- a/platforms/xamarin.watchos/System.Runtime.InteropServices.RuntimeInformation.csproj
+++ b/platforms/xamarin.watchos/System.Runtime.InteropServices.RuntimeInformation.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+﻿<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>4.0.0.0</AssemblyVersion>
     <AssemblyKey>MSFT</AssemblyKey>
@@ -13,5 +11,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Runtime.InteropServices.RuntimeInformation.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
diff --git a/platforms/xamarin.watchos/System.Runtime.Serialization.csproj b/platforms/xamarin.watchos/System.Runtime.Serialization.csproj
index af9c5ab..c4cb6a9 100644
--- a/platforms/xamarin.watchos/System.Runtime.Serialization.csproj
+++ b/platforms/xamarin.watchos/System.Runtime.Serialization.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Runtime.Serialization.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Transactions.csproj b/platforms/xamarin.watchos/System.Transactions.csproj
index 90f441b..1bfddcf 100644
--- a/platforms/xamarin.watchos/System.Transactions.csproj
+++ b/platforms/xamarin.watchos/System.Transactions.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>ECMA</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.Transactions.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Web.Services.csproj b/platforms/xamarin.watchos/System.Web.Services.csproj
index 24ad217..0c4b680 100644
--- a/platforms/xamarin.watchos/System.Web.Services.csproj
+++ b/platforms/xamarin.watchos/System.Web.Services.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Web.Services.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Xml.Linq.csproj b/platforms/xamarin.watchos/System.Xml.Linq.csproj
index 428e596..82b6ffb 100644
--- a/platforms/xamarin.watchos/System.Xml.Linq.csproj
+++ b/platforms/xamarin.watchos/System.Xml.Linq.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightExtension</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.Xml.csproj" />
     <Compile Include="System.Xml.Linq.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.Xml.csproj b/platforms/xamarin.watchos/System.Xml.csproj
index f1132e9..b007b46 100644
--- a/platforms/xamarin.watchos/System.Xml.csproj
+++ b/platforms/xamarin.watchos/System.Xml.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -13,5 +11,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="System.Xml.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/System.csproj b/platforms/xamarin.watchos/System.csproj
index 07a1a8d..4694de2 100644
--- a/platforms/xamarin.watchos/System.csproj
+++ b/platforms/xamarin.watchos/System.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
@@ -12,5 +10,4 @@
     <ProjectReference Include="mscorlib.csproj" />
     <Compile Include="System.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/Xamarin.WatchOS.csproj b/platforms/xamarin.watchos/Xamarin.WatchOS.csproj
index fbd3086..39049bb 100644
--- a/platforms/xamarin.watchos/Xamarin.WatchOS.csproj
+++ b/platforms/xamarin.watchos/Xamarin.WatchOS.csproj
@@ -1,6 +1,4 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyVersion>0.0.0.0</AssemblyVersion>
     <AssemblyKey>XamarinProducts</AssemblyKey>
@@ -14,5 +12,4 @@
     <ProjectReference Include="System.csproj" />
     <Compile Include="Xamarin.WatchOS.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/platforms/xamarin.watchos/mscorlib.csproj b/platforms/xamarin.watchos/mscorlib.csproj
index f01a78f..b61afa7 100644
--- a/platforms/xamarin.watchos/mscorlib.csproj
+++ b/platforms/xamarin.watchos/mscorlib.csproj
@@ -1,16 +1,13 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+<Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <AssemblyKey>SilverlightPlatform</AssemblyKey>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
     <OutputType>Library</OutputType>
     <IsCoreAssembly>true</IsCoreAssembly>
     <!-- disable obsolete warnings/errors -->
-    <NoWarn>$(NoWarn);0618;0619;0809</NoWarn>
+    <NoWarn>$(NoWarn);0169;0649;0618;0619;0809</NoWarn>
   </PropertyGroup>
   <ItemGroup>
     <Compile Include="mscorlib.cs" />
   </ItemGroup>
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
 </Project>
\ No newline at end of file
diff --git a/publish.msbuild b/publish.msbuild
new file mode 100644
index 0000000..175a23e
--- /dev/null
+++ b/publish.msbuild
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
+  <Import Project="Directory.Build.targets" />
+
+  <PropertyGroup>
+    <ToolsNugetPropsFile>$(MSBuildThisFileDirectory)artifacts\toolset\Common\Tools.proj.nuget.g.props</ToolsNugetPropsFile>
+  </PropertyGroup>
+
+  <Import Project="$(ToolsNugetPropsFile)" Condition="Exists('$(ToolsNugetPropsFile)')" />
+  <Import Project="$(NuGetPackageRoot)/$(FeedTasksPackage)/$(FeedTasksPackageVersion)/build/$(FeedTasksPackage).targets" />
+
+  <PropertyGroup>
+     <PublishPattern Condition="'$(PublishPattern)' == ''">$(PackageOutputRoot)**\*.nupkg</PublishPattern>
+     <SymbolsPackagesPattern>$(PackageOutputRoot)**\*.symbols.nupkg</SymbolsPackagesPattern>
+  </PropertyGroup>
+
+  <ItemGroup>
+     <_PackagesToPublish Include="$(PublishPattern)" Exclude="$(SymbolsPackagesPattern)" />
+     <_SymbolsPackagesToPublish Include="$(SymbolsPackagesPattern)" Condition="'$(PublishSymbols)' == 'true'" />
+  </ItemGroup>
+
+  <Target Name="Build"
+          DependsOnTargets="PublishToAzureBlobFeed;PublishSymbolsToAzureBlobFeed" />
+
+  <Target Name="PublishToAzureBlobFeed">
+    <Error Condition="'@(_PackagesToPublish)'==''" Text="ItemsToPush for packages is empty." />
+    <PushToBlobFeed ExpectedFeedUrl="$(ExpectedFeedUrl)"
+                    AccountKey="$(AccountKey)"
+                    ItemsToPush="@(_PackagesToPublish)"
+                    Overwrite="$(PublishOverwrite)" />
+  </Target>  
+  <Target Name="PublishSymbolsToAzureBlobFeed">
+    <Error Condition="'@(_SymbolsPackagesToPublish)'==''" Text="ItemsToPush for packages is empty." />
+    <PushToBlobFeed ExpectedFeedUrl="$(ExpectedFeedUrl)"
+                    AccountKey="$(AccountKey)"
+                    ItemsToPush="@(_SymbolsPackagesToPublish)"
+                    Overwrite="$(PublishOverwrite)" />
+  </Target>  
+
+</Project>
\ No newline at end of file
diff --git a/run.cmd b/run.cmd
deleted file mode 100644
index 1da6c1e..0000000
--- a/run.cmd
+++ /dev/null
@@ -1,28 +0,0 @@
-@if "%_echo%" neq "on" echo off
-setlocal
-
-if not defined VisualStudioVersion (
-  if defined VS140COMNTOOLS (
-    call "%VS140COMNTOOLS%\VsDevCmd.bat"
-    goto :Run
-  )
-  echo Error: Visual Studio 2015 required.
-  echo        Please see https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/developer-guide.md for build instructions.
-  exit /b 1
-)
-
-:Run
-:: Clear the 'Platform' env variable for this session, as it's a per-project setting within the build, and
-:: misleading value (such as 'MCD' in HP PCs) may lead to build breakage (issue: #69).
-set Platform=
-
-:: Restore the Tools directory
-call "%~dp0init-tools.cmd"
-if NOT [%ERRORLEVEL%]==[0] exit /b 1
-
-set _toolRuntime=%~dp0Tools
-set _dotnet=%_toolRuntime%\dotnetcli\dotnet.exe
-
-echo Running: "%_dotnet%" "%_toolRuntime%\run.exe" %*
-call "%_dotnet%" "%_toolRuntime%\run.exe" %*
-exit /b %ERRORLEVEL%
\ No newline at end of file
diff --git a/run.sh b/run.sh
deleted file mode 100755
index c983d90..0000000
--- a/run.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/usr/bin/env bash
-
-__scriptpath=$(cd "$(dirname "$0")"; pwd -P)
-$__scriptpath/init-tools.sh
-if [ $? -ne 0 ]; then
-    exit 1
-fi
-
-__toolRuntime=$__scriptpath/Tools
-__dotnet=$__toolRuntime/dotnetcli/dotnet
-
-$__dotnet $__toolRuntime/run.exe $*
-exit $?
\ No newline at end of file
diff --git a/src.builds b/src.builds
index 3d1a7e3..accaacb 100644
--- a/src.builds
+++ b/src.builds
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
+  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
 
   <ItemGroup>
     <Project Include="netstandard/ref/*.csproj" />
-- 
2.17.1.windows.2

