From 9ae932489fbecc4b873ad052f475dd5c285a9469 Mon Sep 17 00:00:00 2001
From: Chris Rummel <crummel@microsoft.com>
Date: Thu, 18 Jul 2019 17:26:13 -0500
Subject: [PATCH 1/5] More nullability.

---
 .../Internal/Runtime/CompilerServices/Unsafe.cs       |  1 +
 src/Common/src/CoreLib/Internal/Win32/RegistryKey.cs  |  1 +
 .../src/CoreLib/System/Activator.RuntimeType.cs       |  1 +
 src/Common/src/CoreLib/System/Activator.cs            |  1 +
 src/Common/src/CoreLib/System/AppContext.cs           |  1 +
 src/Common/src/CoreLib/System/AppDomain.cs            |  1 +
 .../src/CoreLib/System/ArgumentOutOfRangeException.cs |  1 +
 src/Common/src/CoreLib/System/Array.Enumerators.cs    |  1 +
 src/Common/src/CoreLib/System/Array.cs                |  1 +
 src/Common/src/CoreLib/System/ArraySegment.cs         |  1 +
 .../src/CoreLib/System/AssemblyLoadEventHandler.cs    |  1 +
 src/Common/src/CoreLib/System/Attribute.cs            |  1 +
 src/Common/src/CoreLib/System/Boolean.cs              |  1 +
 .../src/CoreLib/System/Buffers/StandardFormat.cs      |  1 +
 .../Buffers/TlsOverPerCoreLockedStacksArrayPool.cs    |  1 +
 src/Common/src/CoreLib/System/Byte.cs                 |  1 +
 src/Common/src/CoreLib/System/Char.cs                 |  1 +
 src/Common/src/CoreLib/System/CharEnumerator.cs       |  1 +
 .../src/CoreLib/System/Collections/ArrayList.cs       |  1 +
 src/Common/src/CoreLib/System/Collections/Comparer.cs |  1 +
 .../src/CoreLib/System/Collections/DictionaryEntry.cs |  1 +
 .../System/Collections/Generic/ArraySortHelper.cs     |  1 +
 .../CoreLib/System/Collections/Generic/Comparer.cs    |  1 +
 .../CoreLib/System/Collections/Generic/Dictionary.cs  |  1 +
 .../System/Collections/Generic/EqualityComparer.cs    |  1 +
 .../src/CoreLib/System/Collections/Generic/List.cs    |  1 +
 .../src/CoreLib/System/Collections/Hashtable.cs       |  1 +
 .../ref/System.Reflection.Emit.ILGeneration.cs        |  1 +
 .../ref/System.Reflection.Emit.Lightweight.cs         |  1 +
 .../ref/System.Reflection.Emit.cs                     |  1 +
 src/System.Runtime/ref/System.Runtime.cs              | 11 +----------
 31 files changed, 31 insertions(+), 10 deletions(-)

diff --git a/src/Common/src/CoreLib/Internal/Runtime/CompilerServices/Unsafe.cs b/src/Common/src/CoreLib/Internal/Runtime/CompilerServices/Unsafe.cs
index bbd7a74711..afbc70b9d7 100644
--- a/src/Common/src/CoreLib/Internal/Runtime/CompilerServices/Unsafe.cs
+++ b/src/Common/src/CoreLib/Internal/Runtime/CompilerServices/Unsafe.cs
@@ -15,6 +15,7 @@
 using nint = System.Int32;
 #endif
 
+#nullable enable
 //
 // The implementations of most the methods in this file are provided as intrinsics.
 // In CoreCLR, the body of the functions are replaced by the EE with unsafe code. See see getILIntrinsicImplementationForUnsafe for details.
diff --git a/src/Common/src/CoreLib/Internal/Win32/RegistryKey.cs b/src/Common/src/CoreLib/Internal/Win32/RegistryKey.cs
index f66ebf01f6..611437f3bc 100644
--- a/src/Common/src/CoreLib/Internal/Win32/RegistryKey.cs
+++ b/src/Common/src/CoreLib/Internal/Win32/RegistryKey.cs
@@ -12,6 +12,7 @@
 
 using Internal.Win32.SafeHandles;
 
+#nullable enable
 //
 // A minimal version of RegistryKey that supports just what CoreLib needs. 
 //
diff --git a/src/Common/src/CoreLib/System/Activator.RuntimeType.cs b/src/Common/src/CoreLib/System/Activator.RuntimeType.cs
index 72e312aae7..40116172b3 100644
--- a/src/Common/src/CoreLib/System/Activator.RuntimeType.cs
+++ b/src/Common/src/CoreLib/System/Activator.RuntimeType.cs
@@ -8,6 +8,7 @@
 using System.Runtime.Remoting;
 using System.Threading;
 
+#nullable enable
 namespace System
 {
     public static partial class Activator
diff --git a/src/Common/src/CoreLib/System/Activator.cs b/src/Common/src/CoreLib/System/Activator.cs
index 0426211c76..2487b3cb03 100644
--- a/src/Common/src/CoreLib/System/Activator.cs
+++ b/src/Common/src/CoreLib/System/Activator.cs
@@ -7,6 +7,7 @@
 using System.Reflection;
 using System.Runtime.Remoting;
 
+#nullable enable
 namespace System
 {
     /// <summary>
diff --git a/src/Common/src/CoreLib/System/AppContext.cs b/src/Common/src/CoreLib/System/AppContext.cs
index 8601d3f26b..6da15a88d1 100644
--- a/src/Common/src/CoreLib/System/AppContext.cs
+++ b/src/Common/src/CoreLib/System/AppContext.cs
@@ -9,6 +9,7 @@
 using System.Runtime.Versioning;
 using System.Threading;
 
+#nullable enable
 namespace System
 {
     public static partial class AppContext
diff --git a/src/Common/src/CoreLib/System/AppDomain.cs b/src/Common/src/CoreLib/System/AppDomain.cs
index 2d8cd9c576..f78b19ab43 100644
--- a/src/Common/src/CoreLib/System/AppDomain.cs
+++ b/src/Common/src/CoreLib/System/AppDomain.cs
@@ -15,6 +15,7 @@
 using System.Security.Principal;
 using System.Threading;
 
+#nullable enable
 namespace System
 {
 #if PROJECTN
diff --git a/src/Common/src/CoreLib/System/ArgumentOutOfRangeException.cs b/src/Common/src/CoreLib/System/ArgumentOutOfRangeException.cs
index 8c47541b10..238188e12b 100644
--- a/src/Common/src/CoreLib/System/ArgumentOutOfRangeException.cs
+++ b/src/Common/src/CoreLib/System/ArgumentOutOfRangeException.cs
@@ -14,6 +14,7 @@
 using System.Globalization;
 using System.Runtime.Serialization;
 
+#nullable enable
 namespace System
 {
     // The ArgumentOutOfRangeException is thrown when an argument 
diff --git a/src/Common/src/CoreLib/System/Array.Enumerators.cs b/src/Common/src/CoreLib/System/Array.Enumerators.cs
index dd46dc82d8..7b081834d5 100644
--- a/src/Common/src/CoreLib/System/Array.Enumerators.cs
+++ b/src/Common/src/CoreLib/System/Array.Enumerators.cs
@@ -6,6 +6,7 @@
 using System.Collections.Generic;
 using System.Diagnostics;
 
+#nullable enable
 namespace System
 {
     internal sealed class ArrayEnumerator : IEnumerator, ICloneable
diff --git a/src/Common/src/CoreLib/System/Array.cs b/src/Common/src/CoreLib/System/Array.cs
index 11479d88e2..822c1cc8a6 100644
--- a/src/Common/src/CoreLib/System/Array.cs
+++ b/src/Common/src/CoreLib/System/Array.cs
@@ -11,6 +11,7 @@
 using System.Runtime.InteropServices;
 using Internal.Runtime.CompilerServices;
 
+#nullable enable
 namespace System
 {
     [Serializable]
diff --git a/src/Common/src/CoreLib/System/ArraySegment.cs b/src/Common/src/CoreLib/System/ArraySegment.cs
index 941d73ca11..bbf4f31b84 100644
--- a/src/Common/src/CoreLib/System/ArraySegment.cs
+++ b/src/Common/src/CoreLib/System/ArraySegment.cs
@@ -17,6 +17,7 @@
 using System.Collections.Generic;
 using System.Diagnostics;
 
+#nullable enable
 namespace System
 {
     // Note: users should make sure they copy the fields out of an ArraySegment onto their stack
diff --git a/src/Common/src/CoreLib/System/AssemblyLoadEventHandler.cs b/src/Common/src/CoreLib/System/AssemblyLoadEventHandler.cs
index 0d5a2823c9..af89e634b3 100644
--- a/src/Common/src/CoreLib/System/AssemblyLoadEventHandler.cs
+++ b/src/Common/src/CoreLib/System/AssemblyLoadEventHandler.cs
@@ -2,6 +2,7 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 // See the LICENSE file in the project root for more information.
 
+#nullable enable
 namespace System
 {
     public delegate void AssemblyLoadEventHandler(object? sender, AssemblyLoadEventArgs args);
diff --git a/src/Common/src/CoreLib/System/Attribute.cs b/src/Common/src/CoreLib/System/Attribute.cs
index e24797563c..cb42e37094 100644
--- a/src/Common/src/CoreLib/System/Attribute.cs
+++ b/src/Common/src/CoreLib/System/Attribute.cs
@@ -5,6 +5,7 @@
 using System.Diagnostics;
 using System.Reflection;
 
+#nullable enable
 namespace System
 {
     [AttributeUsageAttribute(AttributeTargets.All, Inherited = true, AllowMultiple = false)]
diff --git a/src/Common/src/CoreLib/System/Boolean.cs b/src/Common/src/CoreLib/System/Boolean.cs
index a7ac01cd2e..a901d83bcd 100644
--- a/src/Common/src/CoreLib/System/Boolean.cs
+++ b/src/Common/src/CoreLib/System/Boolean.cs
@@ -15,6 +15,7 @@
 using System.Runtime.CompilerServices;
 using System.Runtime.Versioning;
 
+#nullable enable
 namespace System
 {
     [Serializable]
diff --git a/src/Common/src/CoreLib/System/Buffers/StandardFormat.cs b/src/Common/src/CoreLib/System/Buffers/StandardFormat.cs
index 24a4983830..97018ea8ac 100644
--- a/src/Common/src/CoreLib/System/Buffers/StandardFormat.cs
+++ b/src/Common/src/CoreLib/System/Buffers/StandardFormat.cs
@@ -4,6 +4,7 @@
 
 using System.Diagnostics;
 
+#nullable enable
 namespace System.Buffers
 {
     /// <summary>
diff --git a/src/Common/src/CoreLib/System/Buffers/TlsOverPerCoreLockedStacksArrayPool.cs b/src/Common/src/CoreLib/System/Buffers/TlsOverPerCoreLockedStacksArrayPool.cs
index 7369ed8ca6..6f8c011072 100644
--- a/src/Common/src/CoreLib/System/Buffers/TlsOverPerCoreLockedStacksArrayPool.cs
+++ b/src/Common/src/CoreLib/System/Buffers/TlsOverPerCoreLockedStacksArrayPool.cs
@@ -9,6 +9,7 @@
 using System.Threading;
 using Internal.Runtime.CompilerServices;
 
+#nullable enable
 namespace System.Buffers
 {
     /// <summary>
diff --git a/src/Common/src/CoreLib/System/Byte.cs b/src/Common/src/CoreLib/System/Byte.cs
index 5370fec690..d200ca6b13 100644
--- a/src/Common/src/CoreLib/System/Byte.cs
+++ b/src/Common/src/CoreLib/System/Byte.cs
@@ -7,6 +7,7 @@
 using System.Runtime.InteropServices;
 using System.Runtime.Versioning;
 
+#nullable enable
 namespace System
 {
     [Serializable]
diff --git a/src/Common/src/CoreLib/System/Char.cs b/src/Common/src/CoreLib/System/Char.cs
index 3835f8e996..16b5ae649b 100644
--- a/src/Common/src/CoreLib/System/Char.cs
+++ b/src/Common/src/CoreLib/System/Char.cs
@@ -17,6 +17,7 @@
 using System.Runtime.InteropServices;
 using System.Text;
 
+#nullable enable
 namespace System
 {
     [Serializable]
diff --git a/src/Common/src/CoreLib/System/CharEnumerator.cs b/src/Common/src/CoreLib/System/CharEnumerator.cs
index 1e77538080..b423ee926a 100644
--- a/src/Common/src/CoreLib/System/CharEnumerator.cs
+++ b/src/Common/src/CoreLib/System/CharEnumerator.cs
@@ -15,6 +15,7 @@
 using System.Collections;
 using System.Collections.Generic;
 
+#nullable enable
 namespace System
 {
     public sealed class CharEnumerator : IEnumerator, IEnumerator<char>, IDisposable, ICloneable
diff --git a/src/Common/src/CoreLib/System/Collections/ArrayList.cs b/src/Common/src/CoreLib/System/Collections/ArrayList.cs
index ba4a323c4e..e4fd2e3e78 100644
--- a/src/Common/src/CoreLib/System/Collections/ArrayList.cs
+++ b/src/Common/src/CoreLib/System/Collections/ArrayList.cs
@@ -16,6 +16,7 @@
 using System.Diagnostics;
 using System.Diagnostics.CodeAnalysis;
 
+#nullable enable
 namespace System.Collections
 {
     // Implements a variable-size List that uses an array of objects to store the
diff --git a/src/Common/src/CoreLib/System/Collections/Comparer.cs b/src/Common/src/CoreLib/System/Collections/Comparer.cs
index f74bd85776..f5a0fc732e 100644
--- a/src/Common/src/CoreLib/System/Collections/Comparer.cs
+++ b/src/Common/src/CoreLib/System/Collections/Comparer.cs
@@ -11,6 +11,7 @@
 using System.Globalization;
 using System.Runtime.Serialization;
 
+#nullable enable
 namespace System.Collections
 {
     [Serializable]
diff --git a/src/Common/src/CoreLib/System/Collections/DictionaryEntry.cs b/src/Common/src/CoreLib/System/Collections/DictionaryEntry.cs
index 7e86f388d0..ca591f582a 100644
--- a/src/Common/src/CoreLib/System/Collections/DictionaryEntry.cs
+++ b/src/Common/src/CoreLib/System/Collections/DictionaryEntry.cs
@@ -4,6 +4,7 @@
 
 using System.ComponentModel;
 
+#nullable enable
 namespace System.Collections
 {
     // A DictionaryEntry holds a key and a value from a dictionary.
diff --git a/src/Common/src/CoreLib/System/Collections/Generic/ArraySortHelper.cs b/src/Common/src/CoreLib/System/Collections/Generic/ArraySortHelper.cs
index 2ec14db778..bd2c1522f1 100644
--- a/src/Common/src/CoreLib/System/Collections/Generic/ArraySortHelper.cs
+++ b/src/Common/src/CoreLib/System/Collections/Generic/ArraySortHelper.cs
@@ -16,6 +16,7 @@
 using System.Diagnostics;
 using System.Diagnostics.CodeAnalysis;
 
+#nullable enable
 namespace System.Collections.Generic
 {
     #region ArraySortHelper for single arrays
diff --git a/src/Common/src/CoreLib/System/Collections/Generic/Comparer.cs b/src/Common/src/CoreLib/System/Collections/Generic/Comparer.cs
index 80187beedf..e67f422fc5 100644
--- a/src/Common/src/CoreLib/System/Collections/Generic/Comparer.cs
+++ b/src/Common/src/CoreLib/System/Collections/Generic/Comparer.cs
@@ -6,6 +6,7 @@
 using System.Runtime.CompilerServices;
 using System.Runtime.Serialization;
 
+#nullable enable
 namespace System.Collections.Generic
 {
     [Serializable]
diff --git a/src/Common/src/CoreLib/System/Collections/Generic/Dictionary.cs b/src/Common/src/CoreLib/System/Collections/Generic/Dictionary.cs
index fc4d875289..c2e8d2462d 100644
--- a/src/Common/src/CoreLib/System/Collections/Generic/Dictionary.cs
+++ b/src/Common/src/CoreLib/System/Collections/Generic/Dictionary.cs
@@ -7,6 +7,7 @@
 using System.Runtime.CompilerServices;
 using System.Runtime.Serialization;
 
+#nullable enable
 namespace System.Collections.Generic
 {
     /// <summary>
diff --git a/src/Common/src/CoreLib/System/Collections/Generic/EqualityComparer.cs b/src/Common/src/CoreLib/System/Collections/Generic/EqualityComparer.cs
index d62d03b193..fe4656ae19 100644
--- a/src/Common/src/CoreLib/System/Collections/Generic/EqualityComparer.cs
+++ b/src/Common/src/CoreLib/System/Collections/Generic/EqualityComparer.cs
@@ -6,6 +6,7 @@
 using System.Runtime.CompilerServices;
 using System.Runtime.Serialization;
 
+#nullable enable
 namespace System.Collections.Generic
 {
     [Serializable]
diff --git a/src/Common/src/CoreLib/System/Collections/Generic/List.cs b/src/Common/src/CoreLib/System/Collections/Generic/List.cs
index 4a272244f7..d39b422285 100644
--- a/src/Common/src/CoreLib/System/Collections/Generic/List.cs
+++ b/src/Common/src/CoreLib/System/Collections/Generic/List.cs
@@ -8,6 +8,7 @@
 using System.Runtime.CompilerServices;
 using System.Threading;
 
+#nullable enable
 namespace System.Collections.Generic
 {
     // Implements a variable-size List that uses an array of objects to store the
diff --git a/src/Common/src/CoreLib/System/Collections/Hashtable.cs b/src/Common/src/CoreLib/System/Collections/Hashtable.cs
index c8e58d11fb..8a26724c8f 100644
--- a/src/Common/src/CoreLib/System/Collections/Hashtable.cs
+++ b/src/Common/src/CoreLib/System/Collections/Hashtable.cs
@@ -17,6 +17,7 @@
 using System.Runtime.Serialization;
 using System.Threading;
 
+#nullable enable
 namespace System.Collections
 {
     // The Hashtable class represents a dictionary of associated keys and values
diff --git a/src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs b/src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
index d8657fb7b6..c15d4b47c3 100644
--- a/src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
+++ b/src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
@@ -5,6 +5,7 @@
 // Changes to this file must follow the http://aka.ms/api-review process.
 // ------------------------------------------------------------------------------
 
+#nullable enable
 namespace System.Reflection.Emit
 {
     public partial class CustomAttributeBuilder
diff --git a/src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.cs b/src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.cs
index d8ae3f1bfa..248811a0ed 100644
--- a/src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.cs
+++ b/src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.cs
@@ -5,6 +5,7 @@
 // Changes to this file must follow the http://aka.ms/api-review process.
 // ------------------------------------------------------------------------------
 
+#nullable enable
 namespace System.Reflection.Emit
 {
     public sealed partial class DynamicMethod : System.Reflection.MethodInfo
diff --git a/src/System.Reflection.Emit/ref/System.Reflection.Emit.cs b/src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
index 6674f061c4..a25d695a8a 100644
--- a/src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
+++ b/src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
@@ -5,6 +5,7 @@
 // Changes to this file must follow the http://aka.ms/api-review process.
 // ------------------------------------------------------------------------------
 
+#nullable enable
 namespace System.Reflection.Emit
 {
     public sealed partial class AssemblyBuilder : System.Reflection.Assembly
diff --git a/src/System.Runtime/ref/System.Runtime.cs b/src/System.Runtime/ref/System.Runtime.cs
index d3886472d3..d134aacc6e 100644
--- a/src/System.Runtime/ref/System.Runtime.cs
+++ b/src/System.Runtime/ref/System.Runtime.cs
@@ -5,6 +5,7 @@
 // Changes to this file must follow the http://aka.ms/api-review process.
 // ------------------------------------------------------------------------------
 
+#nullable enable
 namespace Microsoft.Win32.SafeHandles
 {
     public abstract partial class CriticalHandleMinusOneIsInvalid : System.Runtime.InteropServices.CriticalHandle
@@ -2282,9 +2283,7 @@ public sealed partial class STAThreadAttribute : System.Attribute
         public STAThreadAttribute() { }
     }
     public sealed partial class String : System.Collections.Generic.IEnumerable<char>, System.Collections.IEnumerable, System.ICloneable, System.IComparable, System.IComparable<string?>, System.IConvertible, 
-#nullable disable
         System.IEquatable<string>
-#nullable restore
     {
         public static readonly string Empty;
         [System.CLSCompliantAttribute(false)]
@@ -2611,9 +2610,7 @@ public abstract partial class TimeZone
         public virtual System.DateTime ToUniversalTime(System.DateTime time) { throw null; }
     }
     public sealed partial class TimeZoneInfo : System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable,
-#nullable disable
         System.IEquatable<System.TimeZoneInfo>
-#nullable restore
     {
         internal TimeZoneInfo() { }
         public System.TimeSpan BaseUtcOffset { get { throw null; } }
@@ -2659,9 +2656,7 @@ public sealed partial class TimeZoneInfo : System.Runtime.Serialization.IDeseria
         public string ToSerializedString() { throw null; }
         public override string ToString() { throw null; }
         public sealed partial class AdjustmentRule : System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable,
-#nullable disable
             System.IEquatable<System.TimeZoneInfo.AdjustmentRule>
-#nullable restore
         {
             internal AdjustmentRule() { }
             public System.DateTime DateEnd { get { throw null; } }
@@ -3742,9 +3737,7 @@ public abstract partial class ValueType
         public override string? ToString() { throw null; }
     }
     public sealed partial class Version : System.ICloneable, System.IComparable, System.IComparable<System.Version?>,
-#nullable disable
         System.IEquatable<System.Version>
-#nullable restore
     {
         public Version() { }
         public Version(int major, int minor) { }
@@ -4916,9 +4909,7 @@ public partial class SortKey
         public override string ToString() { throw null; }
     }
     public sealed partial class SortVersion :
-#nullable disable
         System.IEquatable<System.Globalization.SortVersion>
-#nullable restore
     {
         public SortVersion(int fullVersion, System.Guid sortId) { }
         public int FullVersion { get { throw null; } }
-- 
2.21.0

