From fe8fb0fe6216908f3ac20230555883ae57c8c7fd Mon Sep 17 00:00:00 2001
From: Chris Rummel <crummel@microsoft.com>
Date: Wed, 2 Oct 2019 10:54:19 -0500
Subject: [PATCH] Debugging patch

---
 .../src/NuGetPack.cs                             | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs b/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs
index 5fb7c2e7..935e5bf9 100644
--- a/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs
+++ b/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs
@@ -245,12 +245,28 @@ private string GetPackageOutputPath(string nuspecPath, Manifest manifest, bool i
         public void Pack(string nuspecPath, string nupkgPath, Manifest manifest, bool packSymbols)
         {
             bool creatingSymbolsPackage = packSymbols && (Path.GetExtension(nupkgPath) == _symbolsPackageExtension);
+            Log.LogWarning($"starting NuGetPack.Pack: nuspecPath={nuspecPath}, nupkgPath={nupkgPath}, packSymbols={packSymbols}");
+            Log.LogWarning($"OutputDirectory={OutputDirectory}, BaseDirectory={BaseDirectory ?? "<null>"}, PackageVersion={PackageVersion ?? "<null>"}");
+            Log.LogWarning($"ExcludeEmptyDirectories={ExcludeEmptyDirectories}, CreateSymbolPackage={CreateSymbolPackage}, IncludeSymbolsInPackage={IncludeSymbolsInPackage}");
+            Log.LogWarning($"CreatePackedPackage={CreatePackedPackage}, SymbolPackageOutputDirectory={SymbolPackageOutputDirectory ?? "<null>"}, PackedPackageNamePrefix={PackedPackageNamePrefix ?? "<null>"}");
+
             try
             {
                 PackageBuilder builder = new PackageBuilder();
 
                 string baseDirectoryPath = (string.IsNullOrEmpty(BaseDirectory)) ? Path.GetDirectoryName(nuspecPath) : BaseDirectory;
                 builder.Populate(manifest.Metadata);
+                Log.LogWarning($"about to populate files: baseDirectory={baseDirectoryPath}");
+                foreach (var f in manifest.Files)
+                {
+                    Log.LogWarning($"file: Source={f.Source}, Target={f.Target}, Exclude={f.Exclude}");
+                    var s = f.Source;
+                    while (s != "/")
+                    {
+                        Console.WriteLine($"File {s} exists: {File.Exists(s)}");
+                        Console.WriteLine($"Directory {s} exists: {Directory.Exists(s)}");
+                    }
+                }
                 builder.PopulateFiles(baseDirectoryPath, manifest.Files);
 
                 if (creatingSymbolsPackage)
-- 
2.18.0

