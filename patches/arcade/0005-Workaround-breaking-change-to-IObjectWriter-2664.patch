From 39badb6f8e7a2314c9721605ba8814179301cc87 Mon Sep 17 00:00:00 2001
From: Eric StJohn <ericstj@microsoft.com>
Date: Wed, 1 May 2019 23:30:31 -0700
Subject: [PATCH 5/5] Workaround breaking change to IObjectWriter (#2664)

NuGet broke IObjectWriter by adding members.  We cannot implement those
members since we cannot take a dependency on the new NuGet without breaking
existing consumers on 2.x SDKs.

Remove the workaround since the runtime.json NuGet's API generates is
functionally equivalent, and we don't need to be compatible with old NuGet
clients (EG: dnx) where it may not be.
---
 .../src/GenerateRuntimeDependencies.cs        | 80 +------------------
 1 file changed, 1 insertion(+), 79 deletions(-)

diff --git a/src/Microsoft.DotNet.Build.Tasks.Packaging/src/GenerateRuntimeDependencies.cs b/src/Microsoft.DotNet.Build.Tasks.Packaging/src/GenerateRuntimeDependencies.cs
index 07b3bd26..5ed64b71 100644
--- a/src/Microsoft.DotNet.Build.Tasks.Packaging/src/GenerateRuntimeDependencies.cs
+++ b/src/Microsoft.DotNet.Build.Tasks.Packaging/src/GenerateRuntimeDependencies.cs
@@ -142,7 +142,7 @@ public override bool Execute()
                 Directory.CreateDirectory(destRuntimeFileDir);
             }
 
-            SaveRuntimeGraph(destRuntimeFilePath, runtimeGraph);
+            JsonRuntimeFormat.WriteRuntimeGraph(destRuntimeFilePath, runtimeGraph);
 
             return true;
         }
@@ -188,83 +188,5 @@ private NuGetVersion GetDependencyVersion(ITaskItem dependency)
 
             return dependencyVersion;
         }
-
-        public static void SaveRuntimeGraph(string filePath, RuntimeGraph runtimeGraph)
-        {
-            var jsonObjectWriter = new JsonObjectWriter();
-            var runtimeJsonWriter = new RuntimeJsonWriter(jsonObjectWriter);
-
-            JsonRuntimeFormat.WriteRuntimeGraph(runtimeJsonWriter, runtimeGraph);
-
-            using (var file = File.CreateText(filePath))
-            using (var jsonWriter = new JsonTextWriter(file))
-            {
-                jsonWriter.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii;
-                jsonWriter.Formatting = Formatting.Indented;
-                jsonObjectWriter.WriteTo(jsonWriter);
-            }
-
-
-        }
-
-        /// <summary>
-        /// works around a bug in NuGet that writes an empty import array,
-        /// also another bug that writes open ranges rather than single versions.
-        /// </summary>
-        private class RuntimeJsonWriter : IObjectWriter
-        {
-            private IObjectWriter innerWriter;
-
-            public RuntimeJsonWriter(IObjectWriter writer)
-            {
-                innerWriter = writer;
-            }
-
-            public void WriteNameArray(string name, IEnumerable<string> values)
-            {
-                // if we are writing an empty import array, skip it.
-                if (name == "#import" && !values.Any())
-                {
-                    return;
-                }
-
-                innerWriter.WriteNameArray(name, values);
-            }
-
-            public void WriteNameValue(string name, bool value)
-            {
-                innerWriter.WriteNameValue(name, value);
-            }
-
-            public void WriteNameValue(string name, string value)
-            {
-                // if we are writing a version range with no upper bound, only write the lower bound
-                if (value.Length > 4 &&
-                    value[0] == '[' &&
-                    value.EndsWith(", )"))
-                {
-                    innerWriter.WriteNameValue(name, value.Substring(1, value.Length - 4));
-                }
-                else
-                {
-                    innerWriter.WriteNameValue(name, value);
-                }
-            }
-
-            public void WriteNameValue(string name, int value)
-            {
-                innerWriter.WriteNameValue(name, value);
-            }
-
-            public void WriteObjectEnd()
-            {
-                innerWriter.WriteObjectEnd();
-            }
-
-            public void WriteObjectStart(string name)
-            {
-                innerWriter.WriteObjectStart(name);
-            }
-        }
     }
 }
-- 
2.18.0

